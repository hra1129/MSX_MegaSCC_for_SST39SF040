Z80 Macro Assembler ZMA v1.0.15
=====================================================
Programmed by t.hara

<< code >>
[	ORG 0X100]
	code address: 0x000100

[	SCOPE ENTRY_POINT]
	Scope path: ENTRY_POINT:

[ENTRY_POINT ::]
	global label address: 0x000100

[	LD DE , TITLE_MESSAGE] Z80:11cyc, R800:3cyc
000100: 11 92 01

[	CALL PUTS] Z80:18cyc, R800:5cyc
000103: cd 91 06

[	CALL COMMAND_LINE_OPTIONS] Z80:18cyc, R800:5cyc
000106: cd 31 02

[	LD A , [ FCB_FNAME ]] Z80:14cyc, R800:6cyc
000109: 3a 67 06

[	CP A , 32] Z80:8cyc, R800:2cyc
00010c: fe 20

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00010e: ca d0 03

[	CALL DISPLAY_TARGET_FNAME] Z80:18cyc, R800:5cyc
000111: cd 99 04

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000114: cd 8e 06

[	CALL FILE_OPEN] Z80:18cyc, R800:5cyc
000117: cd 3a 03

[	CALL CHECK_TARGET_SLOT] Z80:18cyc, R800:5cyc
00011a: cd e4 04

[	JP NZ , NOT_DETECTED] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00011d: c2 8d 01

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000120: cd 23 05

[	CALL DISPLAY_TARGET_SLOT] Z80:18cyc, R800:5cyc
000123: cd 6e 04

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000126: cd 8e 06

[	LD DE , ERASE_MESSAGE] Z80:11cyc, R800:3cyc
000129: 11 d4 01

[	CALL PUTS] Z80:18cyc, R800:5cyc
00012c: cd 91 06

[	CALL FLASH_CHIP_ERASE] Z80:18cyc, R800:5cyc
00012f: cd 90 07

[	LD DE , OK_MESSAGE] Z80:11cyc, R800:3cyc
000132: 11 e3 01

[	CALL PUTS] Z80:18cyc, R800:5cyc
000135: cd 91 06

[	CALL FLASH_GET_START_BANK] Z80:18cyc, R800:5cyc
000138: cd 99 07

[	LD C , A] Z80:5cyc, R800:2cyc
00013b: 4f

[	LD HL , [ FILE_SIZE ]] Z80:17cyc, R800:7cyc
00013c: 2a 5d 06

[	SRL H] Z80:10cyc, R800:2cyc
00013f: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
000141: cb 1d

[	SRL H] Z80:10cyc, R800:2cyc
000143: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
000145: cb 1d

[	SRL H] Z80:10cyc, R800:2cyc
000147: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
000149: cb 1d

[	LD B , L] Z80:5cyc, R800:2cyc
00014b: 45

[	LD A , L] Z80:5cyc, R800:2cyc
00014c: 7d

[	LD [ PROGRESS_MAX ] , A] Z80:14cyc, R800:6cyc
00014d: 32 64 06

[BLOCK_WRITE_LOOP :]
	label address: 0x000150

[	LD A , C] Z80:5cyc, R800:2cyc
000150: 79

[	PUSH BC] Z80:12cyc, R800:6cyc
000151: c5

[	CALL FLASH_SET_BANK] Z80:18cyc, R800:5cyc
000152: cd 96 07

[	LD A , B] Z80:5cyc, R800:2cyc
000155: 78

[	CALL DISPLAY_PROGRESS_BAR] Z80:18cyc, R800:5cyc
000156: cd d6 02

[	LD C , _RDBLK] Z80:8cyc, R800:2cyc
000159: 0e 27

[	LD DE , FCB] Z80:11cyc, R800:3cyc
00015b: 11 66 06

[	LD HL , 8] Z80:11cyc, R800:3cyc
00015e: 21 08 00

[	CALL BDOS] Z80:18cyc, R800:5cyc
000161: cd 05 00

[	CALL FLASH_WRITE_8KB] Z80:18cyc, R800:5cyc
000164: cd 93 07

[	POP BC] Z80:11cyc, R800:5cyc
000167: c1

[	LD DE , WRITE_ERROR_MESSAGE] Z80:11cyc, R800:3cyc
000168: 11 1b 02

[	JR C , PUTS_AND_EXIT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00016b: 38 15

[	INC C] Z80:5cyc, R800:1cyc
00016d: 0c

[	DJNZ BLOCK_WRITE_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00016e: 10 e0

[	LD A , B] Z80:5cyc, R800:2cyc
000170: 78

[	CALL DISPLAY_PROGRESS_BAR] Z80:18cyc, R800:5cyc
000171: cd d6 02

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000174: cd 8e 06

[	LD C , _FCLOSE] Z80:8cyc, R800:2cyc
000177: 0e 10

[	LD DE , FCB] Z80:11cyc, R800:3cyc
000179: 11 66 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
00017c: cd 05 00

[	LD DE , COMPLETED_MESSAGE] Z80:11cyc, R800:3cyc
00017f: 11 e8 01

[PUTS_AND_EXIT :]
	label address: 0x000182

[	CALL PUTS] Z80:18cyc, R800:5cyc
000182: cd 91 06

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000185: cd 23 05

[	LD C , _TERM0] Z80:8cyc, R800:2cyc
000188: 0e 00

[	JP BDOS] Z80:11cyc, R800:5cyc
00018a: c3 05 00

[NOT_DETECTED :]
	label address: 0x00018d

[	LD DE , NOT_DETECTED_MESSAGE] Z80:11cyc, R800:3cyc
00018d: 11 f7 01

[	JR PUTS_AND_EXIT] Z80:13cyc, R800:3cyc
000190: 18 f0

[TITLE_MESSAGE :]
	label address: 0x000192

[	DS "WRTSST [SST FlashROM Writer] v1.00alpha\r\n"]
000192: 57 52 54 53 53 54 20 5b
00019a: 53 53 54 20 46 6c 61 73
0001a2: 68 52 4f 4d 20 57 72 69
0001aa: 74 65 72 5d 20 76 31 2e
0001b2: 30 30 61 6c 70 68 61 0d
0001ba: 0a

[	DS "Copyright (C)2022 HRA!\r\n"]
0001bb: 43 6f 70 79 72 69 67 68
0001c3: 74 20 28 43 29 32 30 32
0001cb: 32 20 48 52 41 21 0d 0a

[	DB 0]
0001d3: 00

[ERASE_MESSAGE :]
	label address: 0x0001d4

[	DS "ERASE ROM ... "]
0001d4: 45 52 41 53 45 20 52 4f
0001dc: 4d 20 2e 2e 2e 20

[	DB 0]
0001e2: 00

[OK_MESSAGE :]
	label address: 0x0001e3

[	DS "OK\r\n"]
0001e3: 4f 4b 0d 0a

[	DB 0]
0001e7: 00

[COMPLETED_MESSAGE :]
	label address: 0x0001e8

[	DS "\r\nCompleted.\r\n"]
0001e8: 0d 0a 43 6f 6d 70 6c 65
0001f0: 74 65 64 2e 0d 0a

[	DB 0]
0001f6: 00

[NOT_DETECTED_MESSAGE :]
	label address: 0x0001f7

[	DS "Could not detect flash cartridge.\r\n"]
0001f7: 43 6f 75 6c 64 20 6e 6f
0001ff: 74 20 64 65 74 65 63 74
000207: 20 66 6c 61 73 68 20 63
00020f: 61 72 74 72 69 64 67 65
000217: 2e 0d 0a

[	DB 0]
00021a: 00

[WRITE_ERROR_MESSAGE :]
	label address: 0x00021b

[	DS "\r\nWrite failed.\r\n"]
00021b: 0d 0a 57 72 69 74 65 20
000223: 66 61 69 6c 65 64 2e 0d
00022b: 0a

[	DB 0]
00022c: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE COMMAND_LINE_OPTIONS]
	Scope path: COMMAND_LINE_OPTIONS:

[GET_ONE :]
	label address: 0x00022d

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00022d: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00022e: 23

[	DEC B] Z80:5cyc, R800:1cyc
00022f: 05

[	RET] Z80:11cyc, R800:5cyc
000230: c9

[COMMAND_LINE_OPTIONS ::]
	global label address: 0x000231

[	LD HL , 0X0080] Z80:11cyc, R800:3cyc
000231: 21 80 00

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000234: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
000235: b7

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000236: ca d0 03

[	LD B , A] Z80:5cyc, R800:2cyc
000239: 47

[	INC HL] Z80:7cyc, R800:1cyc
00023a: 23

[L1 :]
	label address: 0x00023b

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
00023b: cd 2d 02

[	CP A , 47] Z80:8cyc, R800:2cyc
00023e: fe 2f

[	JR Z , OPTION] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000240: 28 10

[	CP A , 32] Z80:8cyc, R800:2cyc
000242: fe 20

[	JR NZ , FILE_NAME] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000244: 20 51

[L2 :]
	label address: 0x000246

[	INC B] Z80:5cyc, R800:1cyc
000246: 04

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000247: 10 f2

[	LD A , [ FCB_FNAME ]] Z80:14cyc, R800:6cyc
000249: 3a 67 06

[	CP A , 32] Z80:8cyc, R800:2cyc
00024c: fe 20

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00024e: ca d0 03

[	RET] Z80:11cyc, R800:5cyc
000251: c9

[OPTION :]
	label address: 0x000252

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
000252: cd 2d 02

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000255: ca d0 03

[	CP A , 83] Z80:8cyc, R800:2cyc
000258: fe 53

[	JP Z , OPTION_S] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00025a: ca 60 02

[	JP USAGE] Z80:11cyc, R800:5cyc
00025d: c3 d0 03

[OPTION_S :]
	label address: 0x000260

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
000260: cd 2d 02

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000263: ca d0 03

[	SUB A , 48] Z80:8cyc, R800:2cyc
000266: d6 30

[	CP A , 4] Z80:8cyc, R800:2cyc
000268: fe 04

[	JP NC , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00026a: d2 d0 03

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
00026d: 32 5c 06

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000270: 7e

[	CP A , 45] Z80:8cyc, R800:2cyc
000271: fe 2d

[	JP NZ , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000273: c2 3b 02

[	INC HL] Z80:7cyc, R800:1cyc
000276: 23

[	DEC B] Z80:5cyc, R800:1cyc
000277: 05

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000278: ca d0 03

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
00027b: cd 2d 02

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00027e: ca d0 03

[	SUB A , 48] Z80:8cyc, R800:2cyc
000281: d6 30

[	CP A , 4] Z80:8cyc, R800:2cyc
000283: fe 04

[	JP NC , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000285: d2 d0 03

[	RLCA] Z80:5cyc, R800:1cyc
000288: 07

[	RLCA] Z80:5cyc, R800:1cyc
000289: 07

[	LD C , A] Z80:5cyc, R800:2cyc
00028a: 4f

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00028b: 3a 5c 06

[	OR A , C] Z80:5cyc, R800:1cyc
00028e: b1

[	OR A , 0X80] Z80:8cyc, R800:2cyc
00028f: f6 80

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
000291: 32 5c 06

[	JP L1] Z80:11cyc, R800:5cyc
000294: c3 3b 02

[FILE_NAME :]
	label address: 0x000297

[	LD A , [ FCB_FNAME ]] Z80:14cyc, R800:6cyc
000297: 3a 67 06

[	CP A , 32] Z80:8cyc, R800:2cyc
00029a: fe 20

[	JP NZ , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00029c: c2 d0 03

[	LD C , 8] Z80:8cyc, R800:2cyc
00029f: 0e 08

[	LD DE , FCB_FNAME] Z80:11cyc, R800:3cyc
0002a1: 11 67 06

[	DEC HL] Z80:7cyc, R800:1cyc
0002a4: 2b

[	INC B] Z80:5cyc, R800:1cyc
0002a5: 04

[FL1 :]
	label address: 0x0002a6

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
0002a6: cd 2d 02

[	CP A , 46] Z80:8cyc, R800:2cyc
0002a9: fe 2e

[	JP Z , FILE_EXT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002ab: ca bb 02

[	CP A , 32] Z80:8cyc, R800:2cyc
0002ae: fe 20

[	JP Z , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002b0: ca 3b 02

[	LD [ DE ] , A] Z80:8cyc, R800:4cyc
0002b3: 12

[	INC DE] Z80:7cyc, R800:1cyc
0002b4: 13

[	INC B] Z80:5cyc, R800:1cyc
0002b5: 04

[	DEC B] Z80:5cyc, R800:1cyc
0002b6: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0002b7: c8

[	DEC C] Z80:5cyc, R800:1cyc
0002b8: 0d

[	JR NZ , FL1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0002b9: 20 eb

[FILE_EXT :]
	label address: 0x0002bb

[	INC B] Z80:5cyc, R800:1cyc
0002bb: 04

[	DEC B] Z80:5cyc, R800:1cyc
0002bc: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0002bd: c8

[	LD C , 3] Z80:8cyc, R800:2cyc
0002be: 0e 03

[	LD DE , FCB_FEXT] Z80:11cyc, R800:3cyc
0002c0: 11 6f 06

[FL2 :]
	label address: 0x0002c3

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
0002c3: cd 2d 02

[	CP A , 32] Z80:8cyc, R800:2cyc
0002c6: fe 20

[	JP Z , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002c8: ca 3b 02

[	LD [ DE ] , A] Z80:8cyc, R800:4cyc
0002cb: 12

[	INC DE] Z80:7cyc, R800:1cyc
0002cc: 13

[	INC B] Z80:5cyc, R800:1cyc
0002cd: 04

[	DEC B] Z80:5cyc, R800:1cyc
0002ce: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0002cf: c8

[	DEC C] Z80:5cyc, R800:1cyc
0002d0: 0d

[	JP Z , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002d1: ca 3b 02

[	JR FL2] Z80:13cyc, R800:3cyc
0002d4: 18 ed

[	ENDSCOPE]
	Scope path: 

[	SCOPE DISPLAY_PROGRESS_BAR]
	Scope path: DISPLAY_PROGRESS_BAR:

[DISPLAY_PROGRESS_BAR ::]
	global label address: 0x0002d6

[	PUSH AF] Z80:12cyc, R800:6cyc
0002d6: f5

[	LD HL , PROGRESS] Z80:11cyc, R800:3cyc
0002d7: 21 27 03

[	LD DE , PROGRESS + 1] Z80:11cyc, R800:3cyc
0002da: 11 28 03

[	LD BC , 16 - 1] Z80:11cyc, R800:3cyc
0002dd: 01 0f 00

[	LD A , 45] Z80:8cyc, R800:2cyc
0002e0: 3e 2d

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
0002e2: 77

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
0002e3: ed b0

[	POP AF] Z80:11cyc, R800:5cyc
0002e5: f1

[	LD B , A] Z80:5cyc, R800:2cyc
0002e6: 47

[	LD A , [ PROGRESS_MAX ]] Z80:14cyc, R800:6cyc
0002e7: 3a 64 06

[	SUB A , B] Z80:5cyc, R800:1cyc
0002ea: 90

[	PUSH AF] Z80:12cyc, R800:6cyc
0002eb: f5

[	LD A , [ PROGRESS_MAX ]] Z80:14cyc, R800:6cyc
0002ec: 3a 64 06

[	LD E , A] Z80:5cyc, R800:2cyc
0002ef: 5f

[	POP AF] Z80:11cyc, R800:5cyc
0002f0: f1

[	LD C , A] Z80:5cyc, R800:2cyc
0002f1: 4f

[	XOR A , A] Z80:5cyc, R800:1cyc
0002f2: af

[	LD D , A] Z80:5cyc, R800:2cyc
0002f3: 57

[	LD B , 12] Z80:8cyc, R800:2cyc
0002f4: 06 0c

[DIVIDE_LOOP :]
	label address: 0x0002f6

[	SLA C] Z80:10cyc, R800:2cyc
0002f6: cb 21

[	RLA] Z80:5cyc, R800:1cyc
0002f8: 17

[	SUB A , E] Z80:5cyc, R800:1cyc
0002f9: 93

[	JR NC , SKIP_ADD] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0002fa: 30 01

[	ADD A , E] Z80:5cyc, R800:1cyc
0002fc: 83

[SKIP_ADD :]
	label address: 0x0002fd

[	CCF] Z80:5cyc, R800:1cyc
0002fd: 3f

[	RL D] Z80:10cyc, R800:2cyc
0002fe: cb 12

[	DJNZ DIVIDE_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000300: 10 f4

[	LD A , D] Z80:5cyc, R800:2cyc
000302: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
000303: b7

[	JR Z , SKIP_FILL] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000304: 28 0f

[	LD C , A] Z80:5cyc, R800:2cyc
000306: 4f

[	LD HL , PROGRESS] Z80:11cyc, R800:3cyc
000307: 21 27 03

[	LD DE , PROGRESS + 1] Z80:11cyc, R800:3cyc
00030a: 11 28 03

[	LD A , 35] Z80:8cyc, R800:2cyc
00030d: 3e 23

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00030f: 77

[	DEC C] Z80:5cyc, R800:1cyc
000310: 0d

[	JR Z , SKIP_FILL] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000311: 28 02

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000313: ed b0

[SKIP_FILL :]
	label address: 0x000315

[	LD DE , PROGRESS_BAR] Z80:11cyc, R800:3cyc
000315: 11 1c 03

[	CALL PUTS] Z80:18cyc, R800:5cyc
000318: cd 91 06

[	RET] Z80:11cyc, R800:5cyc
00031b: c9

[PROGRESS_BAR :]
	label address: 0x00031c

[	DS "WRITE ROM |"]
00031c: 57 52 49 54 45 20 52 4f
000324: 4d 20 7c

[PROGRESS :]
	label address: 0x000327

[SPACE 16 , 45]
	Allocate space: 16byte(s)
		Fill value: 45

[	DS "|\r"]
000337: 7c 0d

[	DB 0]
000339: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE FILE_OPEN]
	Scope path: FILE_OPEN:

[FILE_OPEN ::]
	global label address: 0x00033a

[	LD DE , FCB] Z80:11cyc, R800:3cyc
00033a: 11 66 06

[	LD C , _FOPEN] Z80:8cyc, R800:2cyc
00033d: 0e 0f

[	CALL BDOS] Z80:18cyc, R800:5cyc
00033f: cd 05 00

[	OR A , A] Z80:5cyc, R800:1cyc
000342: b7

[	LD DE , CANNOT_OPEN_MESSAGE] Z80:11cyc, R800:3cyc
000343: 11 81 03

[	JR NZ , PUT_ERROR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000346: 20 34

[	LD HL , [ FCB_FILSIZ ]] Z80:17cyc, R800:7cyc
000348: 2a 76 06

[	LD A , H] Z80:5cyc, R800:2cyc
00034b: 7c

[	AND A , 0X1F] Z80:8cyc, R800:2cyc
00034c: e6 1f

[	OR A , L] Z80:5cyc, R800:1cyc
00034e: b5

[	LD DE , IS_NOT_8KB_MESSAGE] Z80:11cyc, R800:3cyc
00034f: 11 95 03

[	JR NZ , PUT_ERROR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000352: 20 28

[	LD A , H] Z80:5cyc, R800:2cyc
000354: 7c

[	LD HL , [ FCB_FILSIZ + 2 ]] Z80:17cyc, R800:7cyc
000355: 2a 78 06

[	OR A , H] Z80:5cyc, R800:1cyc
000358: b4

[	OR A , L] Z80:5cyc, R800:1cyc
000359: b5

[	LD DE , IS_ZERO_MESSAGE] Z80:11cyc, R800:3cyc
00035a: 11 bf 03

[	JR Z , PUT_ERROR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00035d: 28 1d

[	LD HL , [ FCB_FILSIZ + 1 ]] Z80:17cyc, R800:7cyc
00035f: 2a 77 06

[	SRL H] Z80:10cyc, R800:2cyc
000362: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
000364: cb 1d

[	SRL H] Z80:10cyc, R800:2cyc
000366: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
000368: cb 1d

[	LD [ FILE_SIZE ] , HL] Z80:17cyc, R800:7cyc
00036a: 22 5d 06

[	LD C , _SETDTA] Z80:8cyc, R800:2cyc
00036d: 0e 1a

[	LD DE , 0X2000] Z80:11cyc, R800:3cyc
00036f: 11 00 20

[	CALL BDOS] Z80:18cyc, R800:5cyc
000372: cd 05 00

[	LD HL , 1024] Z80:11cyc, R800:3cyc
000375: 21 00 04

[	LD [ FCB_S2 ] , HL] Z80:17cyc, R800:7cyc
000378: 22 74 06

[	RET] Z80:11cyc, R800:5cyc
00037b: c9

[PUT_ERROR :]
	label address: 0x00037c

[	CALL PUTS] Z80:18cyc, R800:5cyc
00037c: cd 91 06

[	OR A , A] Z80:5cyc, R800:1cyc
00037f: b7

[	RET] Z80:11cyc, R800:5cyc
000380: c9

[CANNOT_OPEN_MESSAGE :]
	label address: 0x000381

[	DS "Cannot open file.\r\n"]
000381: 43 61 6e 6e 6f 74 20 6f
000389: 70 65 6e 20 66 69 6c 65
000391: 2e 0d 0a

[	DB 0]
000394: 00

[IS_NOT_8KB_MESSAGE :]
	label address: 0x000395

[	DS "The file size is not a multiple of 8KB.\r\n"]
000395: 54 68 65 20 66 69 6c 65
00039d: 20 73 69 7a 65 20 69 73
0003a5: 20 6e 6f 74 20 61 20 6d
0003ad: 75 6c 74 69 70 6c 65 20
0003b5: 6f 66 20 38 4b 42 2e 0d
0003bd: 0a

[	DB 0]
0003be: 00

[IS_ZERO_MESSAGE :]
	label address: 0x0003bf

[	DS "File is empty.\r\n"]
0003bf: 46 69 6c 65 20 69 73 20
0003c7: 65 6d 70 74 79 2e 0d 0a

[	DB 0]
0003cf: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE USAGE]
	Scope path: USAGE:

[USAGE ::]
	global label address: 0x0003d0

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
0003d0: cd 23 05

[	LD DE , USAGE_MESSAGE] Z80:11cyc, R800:3cyc
0003d3: 11 de 03

[	CALL PUTS] Z80:18cyc, R800:5cyc
0003d6: cd 91 06

[	LD C , _TERM0] Z80:8cyc, R800:2cyc
0003d9: 0e 00

[	JP BDOS] Z80:11cyc, R800:5cyc
0003db: c3 05 00

[USAGE_MESSAGE :]
	label address: 0x0003de

[	DS "Usage> WRTSST [/Sx][/Sx-y] file_name.rom\r\n"]
0003de: 55 73 61 67 65 3e 20 57
0003e6: 52 54 53 53 54 20 5b 2f
0003ee: 53 78 5d 5b 2f 53 78 2d
0003f6: 79 5d 20 66 69 6c 65 5f
0003fe: 6e 61 6d 65 2e 72 6f 6d
000406: 0d 0a

[	DS "  /Sx ........ Rewrite in SLOT#x.\r\n"]
000408: 20 20 2f 53 78 20 2e 2e
000410: 2e 2e 2e 2e 2e 2e 20 52
000418: 65 77 72 69 74 65 20 69
000420: 6e 20 53 4c 4f 54 23 78
000428: 2e 0d 0a

[	DS "  /Sx-y ...... Rewrite in SLOT#x-y.\r\n"]
00042b: 20 20 2f 53 78 2d 79 20
000433: 2e 2e 2e 2e 2e 2e 20 52
00043b: 65 77 72 69 74 65 20 69
000443: 6e 20 53 4c 4f 54 23 78
00044b: 2d 79 2e 0d 0a

[	DS "  /S omitted . Auto detect.\r\n"]
000450: 20 20 2f 53 20 6f 6d 69
000458: 74 74 65 64 20 2e 20 41
000460: 75 74 6f 20 64 65 74 65
000468: 63 74 2e 0d 0a

[	DB 0]
00046d: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE DISPLAY_TARGET_SLOT]
	Scope path: DISPLAY_TARGET_SLOT:

[DISPLAY_TARGET_SLOT ::]
	global label address: 0x00046e

[	LD DE , SLOT_MESSAGE] Z80:11cyc, R800:3cyc
00046e: 11 91 04

[	CALL PUTS] Z80:18cyc, R800:5cyc
000471: cd 91 06

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000474: 3a 5c 06

[	AND A , 3] Z80:8cyc, R800:2cyc
000477: e6 03

[	CALL PUTHEX_C] Z80:18cyc, R800:5cyc
000479: cd af 06

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00047c: 3a 5c 06

[	RLCA] Z80:5cyc, R800:1cyc
00047f: 07

[	RET NC] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000480: d0

[	LD DE , BAR_MESSAGE] Z80:11cyc, R800:3cyc
000481: 11 97 04

[	CALL PUTS] Z80:18cyc, R800:5cyc
000484: cd 91 06

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000487: 3a 5c 06

[	RRA] Z80:5cyc, R800:1cyc
00048a: 1f

[	RRA] Z80:5cyc, R800:1cyc
00048b: 1f

[	AND A , 3] Z80:8cyc, R800:2cyc
00048c: e6 03

[	JP PUTHEX_C] Z80:11cyc, R800:5cyc
00048e: c3 af 06

[SLOT_MESSAGE :]
	label address: 0x000491

[	DS "SLOT#"]
000491: 53 4c 4f 54 23

[	DB 0]
000496: 00

[BAR_MESSAGE :]
	label address: 0x000497

[	DS "-"]
000497: 2d

[	DB 0]
000498: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE DISPLAY_TARGET_FNAME]
	Scope path: DISPLAY_TARGET_FNAME:

[DISPLAY_TARGET_FNAME ::]
	global label address: 0x000499

[	LD DE , FNAME_MESSAGE] Z80:11cyc, R800:3cyc
000499: 11 d4 04

[	CALL PUTS] Z80:18cyc, R800:5cyc
00049c: cd 91 06

[	LD HL , FCB_FNAME] Z80:11cyc, R800:3cyc
00049f: 21 67 06

[	LD B , 8] Z80:8cyc, R800:2cyc
0004a2: 06 08

[L1 :]
	label address: 0x0004a4

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0004a4: 7e

[	INC HL] Z80:7cyc, R800:1cyc
0004a5: 23

[	CP A , 32] Z80:8cyc, R800:2cyc
0004a6: fe 20

[	JR Z , S1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0004a8: 28 0c

[	PUSH HL] Z80:12cyc, R800:6cyc
0004aa: e5

[	PUSH BC] Z80:12cyc, R800:6cyc
0004ab: c5

[	LD E , A] Z80:5cyc, R800:2cyc
0004ac: 5f

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0004ad: 0e 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
0004af: cd 05 00

[	POP BC] Z80:11cyc, R800:5cyc
0004b2: c1

[	POP HL] Z80:11cyc, R800:5cyc
0004b3: e1

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0004b4: 10 ee

[S1 :]
	label address: 0x0004b6

[	LD E , 46] Z80:8cyc, R800:2cyc
0004b6: 1e 2e

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0004b8: 0e 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
0004ba: cd 05 00

[	LD HL , FCB_FEXT] Z80:11cyc, R800:3cyc
0004bd: 21 6f 06

[	LD B , 3] Z80:8cyc, R800:2cyc
0004c0: 06 03

[L2 :]
	label address: 0x0004c2

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0004c2: 7e

[	INC HL] Z80:7cyc, R800:1cyc
0004c3: 23

[	CP A , 32] Z80:8cyc, R800:2cyc
0004c4: fe 20

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0004c6: c8

[	PUSH HL] Z80:12cyc, R800:6cyc
0004c7: e5

[	PUSH BC] Z80:12cyc, R800:6cyc
0004c8: c5

[	LD E , A] Z80:5cyc, R800:2cyc
0004c9: 5f

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0004ca: 0e 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
0004cc: cd 05 00

[	POP BC] Z80:11cyc, R800:5cyc
0004cf: c1

[	POP HL] Z80:11cyc, R800:5cyc
0004d0: e1

[	DJNZ L2] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0004d1: 10 ef

[	RET] Z80:11cyc, R800:5cyc
0004d3: c9

[FNAME_MESSAGE :]
	label address: 0x0004d4

[	DS "FILE NAME     :"]
0004d4: 46 49 4c 45 20 4e 41 4d
0004dc: 45 20 20 20 20 20 3a

[	DB 0]
0004e3: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE CHECK_TARGET_SLOT]
	Scope path: CHECK_TARGET_SLOT:

[CHECK_TARGET_SLOT ::]
	global label address: 0x0004e4

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0004e4: 3a 5c 06

[	INC A] Z80:5cyc, R800:1cyc
0004e7: 3c

[	JP NZ , CONSTANT_TARGET] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0004e8: c2 1f 05

[	LD HL , EXPTBL] Z80:11cyc, R800:3cyc
0004eb: 21 c1 fc

[L1 :]
	label address: 0x0004ee

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0004ee: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
0004ef: b7

[	JP M , EXPANDED_SLOT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0004f0: fa 01 05

[BASIC_SLOT :]
	label address: 0x0004f3

[	LD A , L] Z80:5cyc, R800:2cyc
0004f3: 7d

[	SUB A , EXPTBL & 255] Z80:8cyc, R800:2cyc
0004f4: d6 c1

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
0004f6: 32 5c 06

[	PUSH HL] Z80:12cyc, R800:6cyc
0004f9: e5

[	CALL DETECT_TARGET] Z80:18cyc, R800:5cyc
0004fa: cd 35 05

[	POP HL] Z80:11cyc, R800:5cyc
0004fd: e1

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0004fe: c8

[	JR NEXT_SLOT] Z80:13cyc, R800:3cyc
0004ff: 18 14

[EXPANDED_SLOT :]
	label address: 0x000501

[	OR A , 0X80] Z80:8cyc, R800:2cyc
000501: f6 80

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
000503: 32 5c 06

[	PUSH HL] Z80:12cyc, R800:6cyc
000506: e5

[	CALL DETECT_TARGET] Z80:18cyc, R800:5cyc
000507: cd 35 05

[	POP HL] Z80:11cyc, R800:5cyc
00050a: e1

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00050b: c8

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00050c: 3a 5c 06

[	ADD A , 0X04] Z80:8cyc, R800:2cyc
00050f: c6 04

[	CP A , 0X90] Z80:8cyc, R800:2cyc
000511: fe 90

[	JR C , EXPANDED_SLOT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000513: 38 ec

[NEXT_SLOT :]
	label address: 0x000515

[	LD A , L] Z80:5cyc, R800:2cyc
000515: 7d

[	INC A] Z80:5cyc, R800:1cyc
000516: 3c

[	LD L , A] Z80:5cyc, R800:2cyc
000517: 6f

[	CP A , ( EXPTBL & 255 ) + 4] Z80:8cyc, R800:2cyc
000518: fe c5

[	JR C , L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00051a: 38 d2

[	XOR A , A] Z80:5cyc, R800:1cyc
00051c: af

[	INC A] Z80:5cyc, R800:1cyc
00051d: 3c

[	RET] Z80:11cyc, R800:5cyc
00051e: c9

[CONSTANT_TARGET :]
	label address: 0x00051f

[	DEC A] Z80:5cyc, R800:1cyc
00051f: 3d

[	JP DETECT_TARGET] Z80:11cyc, R800:5cyc
000520: c3 35 05

[	ENDSCOPE]
	Scope path: 

[	SCOPE RESTORE_DOS_SLOT]
	Scope path: RESTORE_DOS_SLOT:

[RESTORE_DOS_SLOT ::]
	global label address: 0x000523

[	LD A , [ RAMAD1 ]] Z80:14cyc, R800:6cyc
000523: 3a 42 f3

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000526: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000528: cd 24 00

[	LD A , [ RAMAD2 ]] Z80:14cyc, R800:6cyc
00052b: 3a 43 f3

[	LD H , 0X80] Z80:8cyc, R800:2cyc
00052e: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000530: cd 24 00

[	EI] Z80:5cyc, R800:1cyc
000533: fb

[	RET] Z80:11cyc, R800:5cyc
000534: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE DETECT_TARGET]
	Scope path: DETECT_TARGET:

[DETECT_TARGET ::]
	global label address: 0x000535

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000535: 3a 5c 06

[	CALL IS_SLOT_SCC] Z80:18cyc, R800:5cyc
000538: cd 9c 07

[	JP Z , DETECT_SCC] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00053b: ca 51 05

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00053e: 3a 5c 06

[	CALL IS_SLOT_RC755] Z80:18cyc, R800:5cyc
000541: cd f0 08

[	JP Z , DETECT_RC755] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000544: ca 5f 05

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000547: 3a 5c 06

[	CALL IS_SLOT_SIMPLE64K] Z80:18cyc, R800:5cyc
00054a: cd 34 0a

[	JP Z , DETECT_SIMPLE64K] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00054d: ca 6d 05

[	RET] Z80:11cyc, R800:5cyc
000550: c9

[DETECT_SCC :]
	label address: 0x000551

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000551: 3a 5c 06

[	CALL SETUP_SLOT_SCC] Z80:18cyc, R800:5cyc
000554: cd d2 07

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000557: c0

[	XOR A , A] Z80:5cyc, R800:1cyc
000558: af

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
000559: 32 63 06

[	JP COMMON_PROCESS] Z80:11cyc, R800:5cyc
00055c: c3 7b 05

[DETECT_RC755 :]
	label address: 0x00055f

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00055f: 3a 5c 06

[	CALL SETUP_SLOT_RC755] Z80:18cyc, R800:5cyc
000562: cd 5e 09

[	LD A , 1] Z80:8cyc, R800:2cyc
000565: 3e 01

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
000567: 32 63 06

[	JP COMMON_PROCESS] Z80:11cyc, R800:5cyc
00056a: c3 7b 05

[DETECT_SIMPLE64K :]
	label address: 0x00056d

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00056d: 3a 5c 06

[	CALL SETUP_SLOT_SIMPLE64K] Z80:18cyc, R800:5cyc
000570: cd 9b 0a

[	LD A , 2] Z80:8cyc, R800:2cyc
000573: 3e 02

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
000575: 32 63 06

[	JP COMMON_PROCESS] Z80:11cyc, R800:5cyc
000578: c3 7b 05

[COMMON_PROCESS :]
	label address: 0x00057b

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
00057b: cd 23 05

[	LD DE , MANUFACTURE_ID_MESSAGE] Z80:11cyc, R800:3cyc
00057e: 11 df 05

[	CALL PUTS] Z80:18cyc, R800:5cyc
000581: cd 91 06

[	LD A , [ MANUFACTURE_ID ]] Z80:14cyc, R800:6cyc
000584: 3a 61 06

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
000587: cd 19 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
00058a: cd 91 06

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
00058d: cd 8e 06

[	LD DE , DEVICE_ID_MESSAGE] Z80:11cyc, R800:3cyc
000590: 11 ef 05

[	CALL PUTS] Z80:18cyc, R800:5cyc
000593: cd 91 06

[	LD A , [ DEVICE_ID ]] Z80:14cyc, R800:6cyc
000596: 3a 62 06

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
000599: cd 2f 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
00059c: cd 91 06

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
00059f: cd 8e 06

[	LD DE , CARTRIDGE_TYPE_MESSAGE] Z80:11cyc, R800:3cyc
0005a2: 11 ff 05

[	CALL PUTS] Z80:18cyc, R800:5cyc
0005a5: cd 91 06

[	LD HL , CARTRIDGE_TYPE_TABLE] Z80:11cyc, R800:3cyc
0005a8: 21 56 06

[	LD A , [ ROM_TYPE ]] Z80:14cyc, R800:6cyc
0005ab: 3a 63 06

[	ADD A , A] Z80:5cyc, R800:1cyc
0005ae: 87

[	LD E , A] Z80:5cyc, R800:2cyc
0005af: 5f

[	LD D , 0] Z80:8cyc, R800:2cyc
0005b0: 16 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0005b2: 19

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
0005b3: 5e

[	INC HL] Z80:7cyc, R800:1cyc
0005b4: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
0005b5: 56

[	CALL PUTS] Z80:18cyc, R800:5cyc
0005b6: cd 91 06

[	LD DE , FILE_SIZE_MESSAGE] Z80:11cyc, R800:3cyc
0005b9: 11 0f 06

[	CALL PUTS] Z80:18cyc, R800:5cyc
0005bc: cd 91 06

[	LD HL , [ FILE_SIZE ]] Z80:17cyc, R800:7cyc
0005bf: 2a 5d 06

[	CALL PUTDEC] Z80:18cyc, R800:5cyc
0005c2: cd ce 06

[	LD DE , KB_MESSAGE] Z80:11cyc, R800:3cyc
0005c5: 11 2f 06

[	CALL PUTS] Z80:18cyc, R800:5cyc
0005c8: cd 91 06

[	LD DE , ROM_SIZE_MESSAGE] Z80:11cyc, R800:3cyc
0005cb: 11 1f 06

[	CALL PUTS] Z80:18cyc, R800:5cyc
0005ce: cd 91 06

[	LD HL , [ ROM_SIZE ]] Z80:17cyc, R800:7cyc
0005d1: 2a 5f 06

[	CALL PUTDEC] Z80:18cyc, R800:5cyc
0005d4: cd ce 06

[	LD DE , KB_MESSAGE] Z80:11cyc, R800:3cyc
0005d7: 11 2f 06

[	CALL PUTS] Z80:18cyc, R800:5cyc
0005da: cd 91 06

[	XOR A , A] Z80:5cyc, R800:1cyc
0005dd: af

[	RET] Z80:11cyc, R800:5cyc
0005de: c9

[MANUFACTURE_ID_MESSAGE :]
	label address: 0x0005df

[	DS "MANUFACTURE ID:"]
0005df: 4d 41 4e 55 46 41 43 54
0005e7: 55 52 45 20 49 44 3a

[	DB 0]
0005ee: 00

[DEVICE_ID_MESSAGE :]
	label address: 0x0005ef

[	DS "DEVICE ID     :"]
0005ef: 44 45 56 49 43 45 20 49
0005f7: 44 20 20 20 20 20 3a

[	DB 0]
0005fe: 00

[CARTRIDGE_TYPE_MESSAGE :]
	label address: 0x0005ff

[	DS "CARTRIDGE TYPE:"]
0005ff: 43 41 52 54 52 49 44 47
000607: 45 20 54 59 50 45 3a

[	DB 0]
00060e: 00

[FILE_SIZE_MESSAGE :]
	label address: 0x00060f

[	DS "FILE SIZE     :"]
00060f: 46 49 4c 45 20 53 49 5a
000617: 45 20 20 20 20 20 3a

[	DB 0]
00061e: 00

[ROM_SIZE_MESSAGE :]
	label address: 0x00061f

[	DS "ROM SIZE      :"]
00061f: 52 4f 4d 20 53 49 5a 45
000627: 20 20 20 20 20 20 3a

[	DB 0]
00062e: 00

[KB_MESSAGE :]
	label address: 0x00062f

[	DS "KB\r\n"]
00062f: 4b 42 0d 0a

[	DB 0]
000633: 00

[MEGA_SCC_MESSAGE :]
	label address: 0x000634

[	DS "MegaSCC\r\n"]
000634: 4d 65 67 61 53 43 43 0d
00063c: 0a

[	DB 0]
00063d: 00

[RC755_MESSAGE :]
	label address: 0x00063e

[	DS "ESE-RC755\r\n"]
00063e: 45 53 45 2d 52 43 37 35
000646: 35 0d 0a

[	DB 0]
000649: 00

[SIMPLE64K_MESSAGE :]
	label address: 0x00064a

[	DS "Simple64K\r\n"]
00064a: 53 69 6d 70 6c 65 36 34
000652: 4b 0d 0a

[	DB 0]
000655: 00

[CARTRIDGE_TYPE_TABLE :]
	label address: 0x000656

[	DW MEGA_SCC_MESSAGE]
000656: 34 06

[	DW RC755_MESSAGE]
000658: 3e 06

[	DW SIMPLE64K_MESSAGE]
00065a: 4a 06

[	ENDSCOPE]
	Scope path: 

[TARGET_SLOT ::]
	global label address: 0x00065c

[	DB 0XFF]
00065c: ff

[FILE_SIZE ::]
	global label address: 0x00065d

[	DW 0]
00065d: 00 00

[ROM_SIZE ::]
	global label address: 0x00065f

[	DW 0]
00065f: 00 00

[MANUFACTURE_ID ::]
	global label address: 0x000661

[	DB 0]
000661: 00

[DEVICE_ID ::]
	global label address: 0x000662

[	DB 0]
000662: 00

[ROM_TYPE ::]
	global label address: 0x000663

[	DB 0]
000663: 00

[PROGRESS_MAX ::]
	global label address: 0x000664

[	DB 0]
000664: 00

[BANK_BACK :]
	label address: 0x000665

[	DB 0]
000665: 00

[FCB ::]
	global label address: 0x000666

[FCB_DR ::]
	global label address: 0x000666

[	DB 0]
000666: 00

[FCB_FNAME ::]
	global label address: 0x000667

[	DS "        "]
000667: 20 20 20 20 20 20 20 20

[FCB_FEXT ::]
	global label address: 0x00066f

[	DS "   "]
00066f: 20 20 20

[FCB_EX ::]
	global label address: 0x000672

[	DB 0]
000672: 00

[FCB_S1 ::]
	global label address: 0x000673

[	DB 0]
000673: 00

[FCB_S2 ::]
	global label address: 0x000674

[	DB 0]
000674: 00

[FCB_RC ::]
	global label address: 0x000675

[	DB 0]
000675: 00

[FCB_FILSIZ ::]
	global label address: 0x000676

[	DW 0 , 0]
000676: 00 00 00 00

[FCB_DATE ::]
	global label address: 0x00067a

[	DW 0]
00067a: 00 00

[FCB_TIME ::]
	global label address: 0x00067c

[	DW 0]
00067c: 00 00

[FCB_DEVID ::]
	global label address: 0x00067e

[	DB 0]
00067e: 00

[FCB_DIRLOC ::]
	global label address: 0x00067f

[	DB 0]
00067f: 00

[FCB_STRCLS ::]
	global label address: 0x000680

[	DW 0]
000680: 00 00

[FCB_CLRCLS ::]
	global label address: 0x000682

[	DW 0]
000682: 00 00

[FCB_CLSOFF ::]
	global label address: 0x000684

[	DW 0]
000684: 00 00

[FCB_CR ::]
	global label address: 0x000686

[	DB 0]
000686: 00

[FCB_RN ::]
	global label address: 0x000687

[	DW 0 , 0]
000687: 00 00 00 00

[	INCLUDE ".//stdio.asm"] begin
[	SCOPE PUTS_CRLF]
	Scope path: PUTS_CRLF:

[CRLF :]
	label address: 0x00068b

[	DS "\r\n"]
00068b: 0d 0a

[	DB 0]
00068d: 00

[PUTS_CRLF ::]
	global label address: 0x00068e

[	LD DE , CRLF] Z80:11cyc, R800:3cyc
00068e: 11 8b 06

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTS]
	Scope path: PUTS:

[PUTS ::]
	global label address: 0x000691

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
000691: 1a

[	INC DE] Z80:7cyc, R800:1cyc
000692: 13

[	OR A , A] Z80:5cyc, R800:1cyc
000693: b7

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000694: c8

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
000695: 0e 06

[	PUSH DE] Z80:12cyc, R800:6cyc
000697: d5

[	LD E , A] Z80:5cyc, R800:2cyc
000698: 5f

[	CALL BDOS] Z80:18cyc, R800:5cyc
000699: cd 05 00

[	POP DE] Z80:11cyc, R800:5cyc
00069c: d1

[	JR PUTS] Z80:13cyc, R800:3cyc
00069d: 18 f2

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTHEX16]
	Scope path: PUTHEX16:

[PUTHEX16 ::]
	global label address: 0x00069f

[	PUSH HL] Z80:12cyc, R800:6cyc
00069f: e5

[	LD A , H] Z80:5cyc, R800:2cyc
0006a0: 7c

[	CALL PUTHEX8] Z80:18cyc, R800:5cyc
0006a1: cd a6 06

[	POP HL] Z80:11cyc, R800:5cyc
0006a4: e1

[	LD A , L] Z80:5cyc, R800:2cyc
0006a5: 7d

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTHEX8]
	Scope path: PUTHEX8:

[PUTHEX8 ::]
	global label address: 0x0006a6

[	PUSH AF] Z80:12cyc, R800:6cyc
0006a6: f5

[	RRCA] Z80:5cyc, R800:1cyc
0006a7: 0f

[	RRCA] Z80:5cyc, R800:1cyc
0006a8: 0f

[	RRCA] Z80:5cyc, R800:1cyc
0006a9: 0f

[	RRCA] Z80:5cyc, R800:1cyc
0006aa: 0f

[	CALL PUTHEX_C] Z80:18cyc, R800:5cyc
0006ab: cd af 06

[	POP AF] Z80:11cyc, R800:5cyc
0006ae: f1

[PUTHEX_C ::]
	global label address: 0x0006af

[	AND A , 0X0F] Z80:8cyc, R800:2cyc
0006af: e6 0f

[	LD HL , HEX_CHARACTERS] Z80:11cyc, R800:3cyc
0006b1: 21 be 06

[	LD D , 0] Z80:8cyc, R800:2cyc
0006b4: 16 00

[	LD E , A] Z80:5cyc, R800:2cyc
0006b6: 5f

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0006b7: 19

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
0006b8: 5e

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0006b9: 0e 06

[	JP BDOS] Z80:11cyc, R800:5cyc
0006bb: c3 05 00

[HEX_CHARACTERS :]
	label address: 0x0006be

[	DS "0123456789ABCDEF"]
0006be: 30 31 32 33 34 35 36 37
0006c6: 38 39 41 42 43 44 45 46

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTDEC]
	Scope path: PUTDEC:

[PUTDEC ::]
	global label address: 0x0006ce

[	LD BC , STR] Z80:11cyc, R800:3cyc
0006ce: 01 13 07

[	LD DE , 10000] Z80:11cyc, R800:3cyc
0006d1: 11 10 27

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
0006d4: cd 07 07

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
0006d7: 02

[	INC BC] Z80:7cyc, R800:1cyc
0006d8: 03

[	LD DE , 1000] Z80:11cyc, R800:3cyc
0006d9: 11 e8 03

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
0006dc: cd 07 07

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
0006df: 02

[	INC BC] Z80:7cyc, R800:1cyc
0006e0: 03

[	LD DE , 100] Z80:11cyc, R800:3cyc
0006e1: 11 64 00

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
0006e4: cd 07 07

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
0006e7: 02

[	INC BC] Z80:7cyc, R800:1cyc
0006e8: 03

[	LD DE , 10] Z80:11cyc, R800:3cyc
0006e9: 11 0a 00

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
0006ec: cd 07 07

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
0006ef: 02

[	INC BC] Z80:7cyc, R800:1cyc
0006f0: 03

[	LD DE , 1] Z80:11cyc, R800:3cyc
0006f1: 11 01 00

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
0006f4: cd 07 07

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
0006f7: 02

[	LD HL , STR] Z80:11cyc, R800:3cyc
0006f8: 21 13 07

[	LD A , 48] Z80:8cyc, R800:2cyc
0006fb: 3e 30

[ZERO_SKIP :]
	label address: 0x0006fd

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0006fd: be

[	JR NZ , ZERO_SKIP_EXIT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0006fe: 20 03

[	INC HL] Z80:7cyc, R800:1cyc
000700: 23

[	JR ZERO_SKIP] Z80:13cyc, R800:3cyc
000701: 18 fa

[ZERO_SKIP_EXIT :]
	label address: 0x000703

[	EX DE , HL] Z80:5cyc, R800:1cyc
000703: eb

[	JP PUTS] Z80:11cyc, R800:5cyc
000704: c3 91 06

[COUNT_SUB :]
	label address: 0x000707

[	XOR A , A] Z80:5cyc, R800:1cyc
000707: af

[	LD A , 48] Z80:8cyc, R800:2cyc
000708: 3e 30

[L1 :]
	label address: 0x00070a

[	SBC HL , DE] Z80:17cyc, R800:2cyc
00070a: ed 52

[	JR C , S1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00070c: 38 03

[	INC A] Z80:5cyc, R800:1cyc
00070e: 3c

[	JR L1] Z80:13cyc, R800:3cyc
00070f: 18 f9

[S1 :]
	label address: 0x000711

[	ADD HL , DE] Z80:12cyc, R800:1cyc
000711: 19

[	RET] Z80:11cyc, R800:5cyc
000712: c9

[STR :]
	label address: 0x000713

[	DS "00000"]
000713: 30 30 30 30 30

[	DB 0]
000718: 00

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//stdio.asm"] end

[	INCLUDE ".//flashrom.asm"] begin
[	SCOPE GET_MANUFACTURE_NAME]
	Scope path: GET_MANUFACTURE_NAME:

[GET_MANUFACTURE_NAME ::]
	global label address: 0x000719

[	CP A , MID_SST] Z80:8cyc, R800:2cyc
000719: fe bf

[	LD DE , S_SST] Z80:11cyc, R800:3cyc
00071b: 11 23 07

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00071e: c8

[	LD DE , S_UNKNOWN] Z80:11cyc, R800:3cyc
00071f: 11 27 07

[	RET] Z80:11cyc, R800:5cyc
000722: c9

[S_SST :]
	label address: 0x000723

[	DS "SST"]
000723: 53 53 54

[	DB 0]
000726: 00

[S_UNKNOWN ::]
	global label address: 0x000727

[	DS "Unknown"]
000727: 55 6e 6b 6e 6f 77 6e

[	DB 0]
00072e: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE GET_DEVICE_NAME]
	Scope path: GET_DEVICE_NAME:

[GET_DEVICE_NAME ::]
	global label address: 0x00072f

[	LD HL , 512] Z80:11cyc, R800:3cyc
00072f: 21 00 02

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
000732: 22 5f 06

[	CP A , DID_SST39SF040] Z80:8cyc, R800:2cyc
000735: fe b7

[	LD DE , S_SST39SF040] Z80:11cyc, R800:3cyc
000737: 11 75 07

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00073a: c8

[	LD HL , 256] Z80:11cyc, R800:3cyc
00073b: 21 00 01

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
00073e: 22 5f 06

[	CP A , DID_SST39SF020A] Z80:8cyc, R800:2cyc
000741: fe b6

[	LD DE , S_SST39SF020A] Z80:11cyc, R800:3cyc
000743: 11 69 07

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000746: c8

[	LD HL , 128] Z80:11cyc, R800:3cyc
000747: 21 80 00

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
00074a: 22 5f 06

[	CP A , DID_SST39SF010A] Z80:8cyc, R800:2cyc
00074d: fe b5

[	LD DE , S_SST39SF010A] Z80:11cyc, R800:3cyc
00074f: 11 5d 07

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000752: c8

[	LD HL , 0] Z80:11cyc, R800:3cyc
000753: 21 00 00

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
000756: 22 5f 06

[	LD DE , S_UNKNOWN] Z80:11cyc, R800:3cyc
000759: 11 27 07

[	RET] Z80:11cyc, R800:5cyc
00075c: c9

[S_SST39SF010A :]
	label address: 0x00075d

[	DS "SST39SF010A"]
00075d: 53 53 54 33 39 53 46 30
000765: 31 30 41

[	DB 0]
000768: 00

[S_SST39SF020A :]
	label address: 0x000769

[	DS "SST39SF020A"]
000769: 53 53 54 33 39 53 46 30
000771: 32 30 41

[	DB 0]
000774: 00

[S_SST39SF040 :]
	label address: 0x000775

[	DS "SST39SF040"]
000775: 53 53 54 33 39 53 46 30
00077d: 34 30

[	DB 0]
00077f: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_FLASH_COMMAND]
	Scope path: SETUP_FLASH_COMMAND:

[SETUP_FLASH_COMMAND ::]
	global label address: 0x000780

[	LD DE , JUMP_TABLE] Z80:11cyc, R800:3cyc
000780: 11 90 07

[	LD BC , JUMP_TABLE_END - JUMP_TABLE] Z80:11cyc, R800:3cyc
000783: 01 0c 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000786: ed b0

[	RET] Z80:11cyc, R800:5cyc
000788: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE IS_ROM]
	Scope path: IS_ROM:

[IS_ROM ::]
	global label address: 0x000789

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000789: 7e

[	CPL] Z80:5cyc, R800:1cyc
00078a: 2f

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00078b: 77

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00078c: be

[	CPL] Z80:5cyc, R800:1cyc
00078d: 2f

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00078e: 77

[	RET] Z80:11cyc, R800:5cyc
00078f: c9

[	ENDSCOPE]
	Scope path: 

[JUMP_TABLE :]
	label address: 0x000790

[FLASH_CHIP_ERASE ::]
	global label address: 0x000790

[	JP 0] Z80:11cyc, R800:5cyc
000790: c3 00 00

[FLASH_WRITE_8KB ::]
	global label address: 0x000793

[	JP 0] Z80:11cyc, R800:5cyc
000793: c3 00 00

[FLASH_SET_BANK ::]
	global label address: 0x000796

[	JP 0] Z80:11cyc, R800:5cyc
000796: c3 00 00

[FLASH_GET_START_BANK ::]
	global label address: 0x000799

[	JP 0] Z80:11cyc, R800:5cyc
000799: c3 00 00

[JUMP_TABLE_END :]
	label address: 0x00079c

[	INCLUDE ".//flashrom.asm"] end

[	INCLUDE ".//scc.asm"] begin
[	SCOPE IS_SLOT_SCC]
	Scope path: IS_SLOT_SCC:

[IS_SLOT_SCC ::]
	global label address: 0x00079c

[	LD H , 0X80] Z80:8cyc, R800:2cyc
00079c: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
00079e: cd 24 00

[	LD A , 0X3F] Z80:8cyc, R800:2cyc
0007a1: 3e 3f

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
0007a3: 32 00 90

[	LD H , 0X98] Z80:8cyc, R800:2cyc
0007a6: 26 98

[	LD B , 0X80] Z80:8cyc, R800:2cyc
0007a8: 06 80

[L1 :]
	label address: 0x0007aa

[	DEC B] Z80:5cyc, R800:1cyc
0007aa: 05

[	LD L , B] Z80:5cyc, R800:2cyc
0007ab: 68

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
0007ac: cd 89 07

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0007af: c0

[	INC B] Z80:5cyc, R800:1cyc
0007b0: 04

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0007b1: 10 f7

[	LD H , 0X80] Z80:8cyc, R800:2cyc
0007b3: 26 80

[L2 :]
	label address: 0x0007b5

[	DEC B] Z80:5cyc, R800:1cyc
0007b5: 05

[	LD L , B] Z80:5cyc, R800:2cyc
0007b6: 68

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
0007b7: cd 89 07

[	JR Z , NOT_SCC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0007ba: 28 13

[	INC B] Z80:5cyc, R800:1cyc
0007bc: 04

[	DJNZ L2] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0007bd: 10 f6

[	LD A , B] Z80:5cyc, R800:2cyc
0007bf: 78

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
0007c0: 32 00 90

[L3 :]
	label address: 0x0007c3

[	DEC B] Z80:5cyc, R800:1cyc
0007c3: 05

[	LD L , B] Z80:5cyc, R800:2cyc
0007c4: 68

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
0007c5: cd 89 07

[	JR Z , NOT_SCC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0007c8: 28 05

[	INC B] Z80:5cyc, R800:1cyc
0007ca: 04

[	DJNZ L3] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0007cb: 10 f6

[	XOR A , A] Z80:5cyc, R800:1cyc
0007cd: af

[	RET] Z80:11cyc, R800:5cyc
0007ce: c9

[NOT_SCC :]
	label address: 0x0007cf

[	XOR A , A] Z80:5cyc, R800:1cyc
0007cf: af

[	INC A] Z80:5cyc, R800:1cyc
0007d0: 3c

[	RET] Z80:11cyc, R800:5cyc
0007d1: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_SLOT_SCC]
	Scope path: SETUP_SLOT_SCC:

[SETUP_SLOT_SCC ::]
	global label address: 0x0007d2

[	PUSH AF] Z80:12cyc, R800:6cyc
0007d2: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
0007d3: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0007d5: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
0007d8: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
0007d9: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0007db: cd 24 00

[	XOR A , A] Z80:5cyc, R800:1cyc
0007de: af

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
0007df: 32 00 50

[	LD [ SCC_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
0007e2: 32 00 70

[	INC A] Z80:5cyc, R800:1cyc
0007e5: 3c

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
0007e6: 32 00 90

[	LD A , 6] Z80:8cyc, R800:2cyc
0007e9: 3e 06

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
0007eb: 32 00 b0

[	LD HL , SCC_FLASH_JUMP_TABLE] Z80:11cyc, R800:3cyc
0007ee: 21 2b 08

[	CALL SETUP_FLASH_COMMAND] Z80:18cyc, R800:5cyc
0007f1: cd 80 07

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
0007f4: 21 00 40

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
0007f7: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0007f9: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
0007fc: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
0007fe: 32 aa 8a

[	LD A , 0X90] Z80:8cyc, R800:2cyc
000801: 3e 90

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000803: 32 55 a5

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
000806: 5e

[	INC HL] Z80:7cyc, R800:1cyc
000807: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
000808: 56

[	LD [ MANUFACTURE_ID ] , DE] Z80:22cyc, R800:8cyc
000809: ed 53 61 06

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00080d: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00080f: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000812: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000814: 32 aa 8a

[	LD A , 0XF0] Z80:8cyc, R800:2cyc
000817: 3e f0

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000819: 32 55 a5

[	LD A , [ MANUFACTURE_ID ]] Z80:14cyc, R800:6cyc
00081c: 3a 61 06

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
00081f: cd 19 07

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000822: c0

[	LD A , [ DEVICE_ID ]] Z80:14cyc, R800:6cyc
000823: 3a 62 06

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
000826: cd 2f 07

[	XOR A , A] Z80:5cyc, R800:1cyc
000829: af

[	RET] Z80:11cyc, R800:5cyc
00082a: c9

[SCC_FLASH_JUMP_TABLE :]
	label address: 0x00082b

[	JP SCC_FLASH_CHIP_ERASE] Z80:11cyc, R800:5cyc
00082b: c3 99 08

[	JP SCC_FLASH_WRITE_8KB] Z80:11cyc, R800:5cyc
00082e: c3 37 08

[	JP SCC_SET_BANK] Z80:11cyc, R800:5cyc
000831: c3 e0 08

[	JP SCC_GET_START_BANK] Z80:11cyc, R800:5cyc
000834: c3 e4 08

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_FLASH_WRITE_8KB]
	Scope path: SCC_FLASH_WRITE_8KB:

[SCC_FLASH_WRITE_8KB ::]
	global label address: 0x000837

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000837: 3a 5c 06

[	LD H , 0X40] Z80:8cyc, R800:2cyc
00083a: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
00083c: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00083f: 3a 5c 06

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000842: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000844: cd 24 00

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000847: 3a 65 06

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
00084a: 32 00 50

[	LD A , 1] Z80:8cyc, R800:2cyc
00084d: 3e 01

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
00084f: 32 00 90

[	LD A , 6] Z80:8cyc, R800:2cyc
000852: 3e 06

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000854: 32 00 b0

[	LD DE , 0X2000] Z80:11cyc, R800:3cyc
000857: 11 00 20

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
00085a: 21 00 40

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00085d: 01 00 20

[LOOP_OF_BC :]
	label address: 0x000860

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000860: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000862: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000865: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000867: 32 aa 8a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
00086a: 3e a0

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00086c: 32 55 a5

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00086f: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
000870: 77

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000871: 3a 65 06

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
000874: 32 00 50

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
000877: 1a

[	PUSH BC] Z80:12cyc, R800:6cyc
000878: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
000879: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x00087c

[	NOP] Z80:5cyc, R800:1cyc
00087c: 00

[	NOP] Z80:5cyc, R800:1cyc
00087d: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00087e: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00087f: 28 0b

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000881: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
000883: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000884: 20 f6

[WRITE_ERROR :]
	label address: 0x000886

[	POP BC] Z80:11cyc, R800:5cyc
000886: c1

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000887: cd 23 05

[	SCF] Z80:5cyc, R800:1cyc
00088a: 37

[	RET] Z80:11cyc, R800:5cyc
00088b: c9

[WRITE_COMPLETE :]
	label address: 0x00088c

[	POP BC] Z80:11cyc, R800:5cyc
00088c: c1

[	INC DE] Z80:7cyc, R800:1cyc
00088d: 13

[	INC HL] Z80:7cyc, R800:1cyc
00088e: 23

[	DEC BC] Z80:7cyc, R800:1cyc
00088f: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
000890: 78

[	OR A , C] Z80:5cyc, R800:1cyc
000891: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000892: 20 cc

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000894: cd 23 05

[	OR A , A] Z80:5cyc, R800:1cyc
000897: b7

[	RET] Z80:11cyc, R800:5cyc
000898: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_FLASH_CHIP_ERASE]
	Scope path: SCC_FLASH_CHIP_ERASE:

[SCC_FLASH_CHIP_ERASE ::]
	global label address: 0x000899

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000899: 3a 5c 06

[	LD H , 0X40] Z80:8cyc, R800:2cyc
00089c: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
00089e: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0008a1: 3a 5c 06

[	LD H , 0X80] Z80:8cyc, R800:2cyc
0008a4: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0008a6: cd 24 00

[	LD A , 1] Z80:8cyc, R800:2cyc
0008a9: 3e 01

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
0008ab: 32 00 90

[	LD A , 6] Z80:8cyc, R800:2cyc
0008ae: 3e 06

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
0008b0: 32 00 b0

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
0008b3: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0008b5: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
0008b8: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
0008ba: 32 aa 8a

[	LD A , 0X80] Z80:8cyc, R800:2cyc
0008bd: 3e 80

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0008bf: 32 55 a5

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
0008c2: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0008c4: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
0008c7: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
0008c9: 32 aa 8a

[	LD A , 0X10] Z80:8cyc, R800:2cyc
0008cc: 3e 10

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0008ce: 32 55 a5

[	LD HL , JIFFY] Z80:11cyc, R800:3cyc
0008d1: 21 9e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0008d4: 7e

[	ADD A , 10] Z80:8cyc, R800:2cyc
0008d5: c6 0a

[	EI] Z80:5cyc, R800:1cyc
0008d7: fb

[WAIT_L1 :]
	label address: 0x0008d8

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0008d8: be

[	JR NZ , WAIT_L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0008d9: 20 fd

[	DI] Z80:5cyc, R800:2cyc
0008db: f3

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
0008dc: cd 23 05

[	RET] Z80:11cyc, R800:5cyc
0008df: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_SET_BANK]
	Scope path: SCC_SET_BANK:

[SCC_SET_BANK ::]
	global label address: 0x0008e0

[	LD [ BANK_BACK ] , A] Z80:14cyc, R800:6cyc
0008e0: 32 65 06

[	RET] Z80:11cyc, R800:5cyc
0008e3: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_GET_START_BANK]
	Scope path: SCC_GET_START_BANK:

[SCC_GET_START_BANK ::]
	global label address: 0x0008e4

[	XOR A , A] Z80:5cyc, R800:1cyc
0008e4: af

[	RET] Z80:11cyc, R800:5cyc
0008e5: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_RESTORE_BANK]
	Scope path: SCC_RESTORE_BANK:

[SCC_RESTORE_BANK ::]
	global label address: 0x0008e6

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
0008e6: 3a 65 06

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
0008e9: 32 00 50

[	RET] Z80:11cyc, R800:5cyc
0008ec: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//scc.asm"] end

[	INCLUDE ".//ese_rc755.asm"] begin
[	SCOPE IS_SLOT_RC755]
	Scope path: IS_SLOT_RC755:

[NOT_RC755 :]
	label address: 0x0008ed

[	XOR A , A] Z80:5cyc, R800:1cyc
0008ed: af

[	INC A] Z80:5cyc, R800:1cyc
0008ee: 3c

[	RET] Z80:11cyc, R800:5cyc
0008ef: c9

[IS_SLOT_RC755 ::]
	global label address: 0x0008f0

[	PUSH AF] Z80:12cyc, R800:6cyc
0008f0: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
0008f1: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0008f3: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
0008f6: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
0008f7: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0008f9: cd 24 00

[	LD HL , 0X5000] Z80:11cyc, R800:3cyc
0008fc: 21 00 50

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
0008ff: cd 89 07

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000902: 28 e9

[	LD HL , 0X7000] Z80:11cyc, R800:3cyc
000904: 21 00 70

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000907: cd 89 07

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00090a: 28 e1

[	LD HL , 0X9000] Z80:11cyc, R800:3cyc
00090c: 21 00 90

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
00090f: cd 89 07

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000912: 28 d9

[	LD HL , 0XB000] Z80:11cyc, R800:3cyc
000914: 21 00 b0

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000917: cd 89 07

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00091a: 28 d1

[	XOR A , A] Z80:5cyc, R800:1cyc
00091c: af

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
00091d: 32 00 60

[	LD A , RC755_FLASH] Z80:8cyc, R800:2cyc
000920: 3e 80

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000922: 32 00 a0

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000925: 21 00 40

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000928: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00092a: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00092d: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00092f: 32 aa 4a

[	LD A , 0X90] Z80:8cyc, R800:2cyc
000932: 3e 90

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000934: 32 55 55

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
000937: 5e

[	INC HL] Z80:7cyc, R800:1cyc
000938: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
000939: 56

[	LD [ MANUFACTURE_ID ] , DE] Z80:22cyc, R800:8cyc
00093a: ed 53 61 06

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00093e: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000940: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000943: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000945: 32 aa 4a

[	LD A , 0XF0] Z80:8cyc, R800:2cyc
000948: 3e f0

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00094a: 32 55 55

[	LD A , 0X03] Z80:8cyc, R800:2cyc
00094d: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
00094f: 32 00 a0

[	LD A , E] Z80:5cyc, R800:2cyc
000952: 7b

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
000953: cd 19 07

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000956: c0

[	LD A , [ MANUFACTURE_ID + 1 ]] Z80:14cyc, R800:6cyc
000957: 3a 62 06

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
00095a: cd 2f 07

[	RET] Z80:11cyc, R800:5cyc
00095d: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_SLOT_RC755]
	Scope path: SETUP_SLOT_RC755:

[SETUP_SLOT_RC755 ::]
	global label address: 0x00095e

[	PUSH AF] Z80:12cyc, R800:6cyc
00095e: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
00095f: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000961: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
000964: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000965: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000967: cd 24 00

[	LD HL , RC755_FLASH_JUMP_TABLE] Z80:11cyc, R800:3cyc
00096a: 21 72 09

[	CALL SETUP_FLASH_COMMAND] Z80:18cyc, R800:5cyc
00096d: cd 80 07

[	XOR A , A] Z80:5cyc, R800:1cyc
000970: af

[	RET] Z80:11cyc, R800:5cyc
000971: c9

[RC755_FLASH_JUMP_TABLE :]
	label address: 0x000972

[	JP RC755_FLASH_CHIP_ERASE] Z80:11cyc, R800:5cyc
000972: c3 e0 09

[	JP RC755_FLASH_WRITE_8KB] Z80:11cyc, R800:5cyc
000975: c3 7e 09

[	JP RC755_SET_BANK] Z80:11cyc, R800:5cyc
000978: c3 27 0a

[	JP RC755_GET_START_BANK] Z80:11cyc, R800:5cyc
00097b: c3 2b 0a

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_FLASH_WRITE_8KB]
	Scope path: RC755_FLASH_WRITE_8KB:

[RC755_FLASH_WRITE_8KB ::]
	global label address: 0x00097e

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00097e: 3a 5c 06

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000981: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000983: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000986: 3a 5c 06

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000989: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
00098b: cd 24 00

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
00098e: 3a 65 06

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000991: 32 00 60

[	LD DE , 0X2000] Z80:11cyc, R800:3cyc
000994: 11 00 20

[	LD HL , 0X6000] Z80:11cyc, R800:3cyc
000997: 21 00 60

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00099a: 01 00 20

[	LD A , RC755_FLASH] Z80:8cyc, R800:2cyc
00099d: 3e 80

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
00099f: 32 00 a0

[LOOP_OF_BC :]
	label address: 0x0009a2

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
0009a2: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0009a4: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
0009a7: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
0009a9: 32 aa 4a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
0009ac: 3e a0

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0009ae: 32 55 55

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
0009b1: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
0009b2: 77

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
0009b3: 3a 65 06

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
0009b6: 32 00 60

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
0009b9: 1a

[	PUSH BC] Z80:12cyc, R800:6cyc
0009ba: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
0009bb: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x0009be

[	NOP] Z80:5cyc, R800:1cyc
0009be: 00

[	NOP] Z80:5cyc, R800:1cyc
0009bf: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0009c0: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0009c1: 28 0b

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0009c3: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
0009c5: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0009c6: 20 f6

[WRITE_ERROR :]
	label address: 0x0009c8

[	POP BC] Z80:11cyc, R800:5cyc
0009c8: c1

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
0009c9: cd 23 05

[	SCF] Z80:5cyc, R800:1cyc
0009cc: 37

[	RET] Z80:11cyc, R800:5cyc
0009cd: c9

[WRITE_COMPLETE :]
	label address: 0x0009ce

[	POP BC] Z80:11cyc, R800:5cyc
0009ce: c1

[	INC DE] Z80:7cyc, R800:1cyc
0009cf: 13

[	INC HL] Z80:7cyc, R800:1cyc
0009d0: 23

[	DEC BC] Z80:7cyc, R800:1cyc
0009d1: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
0009d2: 78

[	OR A , C] Z80:5cyc, R800:1cyc
0009d3: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0009d4: 20 cc

[	LD A , 0X03] Z80:8cyc, R800:2cyc
0009d6: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
0009d8: 32 00 a0

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
0009db: cd 23 05

[	OR A , A] Z80:5cyc, R800:1cyc
0009de: b7

[	RET] Z80:11cyc, R800:5cyc
0009df: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_FLASH_CHIP_ERASE]
	Scope path: RC755_FLASH_CHIP_ERASE:

[RC755_FLASH_CHIP_ERASE ::]
	global label address: 0x0009e0

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0009e0: 3a 5c 06

[	LD H , 0X40] Z80:8cyc, R800:2cyc
0009e3: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0009e5: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0009e8: 3a 5c 06

[	LD H , 0X80] Z80:8cyc, R800:2cyc
0009eb: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0009ed: cd 24 00

[	LD A , RC755_FLASH] Z80:8cyc, R800:2cyc
0009f0: 3e 80

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
0009f2: 32 00 a0

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
0009f5: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0009f7: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
0009fa: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
0009fc: 32 aa 4a

[	LD A , 0X80] Z80:8cyc, R800:2cyc
0009ff: 3e 80

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000a01: 32 55 55

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000a04: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000a06: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000a09: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000a0b: 32 aa 4a

[	LD A , 0X10] Z80:8cyc, R800:2cyc
000a0e: 3e 10

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000a10: 32 55 55

[	LD HL , JIFFY] Z80:11cyc, R800:3cyc
000a13: 21 9e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000a16: 7e

[	ADD A , 10] Z80:8cyc, R800:2cyc
000a17: c6 0a

[	EI] Z80:5cyc, R800:1cyc
000a19: fb

[WAIT_L1 :]
	label address: 0x000a1a

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
000a1a: be

[	JR NZ , WAIT_L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a1b: 20 fd

[	DI] Z80:5cyc, R800:2cyc
000a1d: f3

[	LD A , 0X03] Z80:8cyc, R800:2cyc
000a1e: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000a20: 32 00 a0

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000a23: cd 23 05

[	RET] Z80:11cyc, R800:5cyc
000a26: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_SET_BANK]
	Scope path: RC755_SET_BANK:

[RC755_SET_BANK ::]
	global label address: 0x000a27

[	LD [ BANK_BACK ] , A] Z80:14cyc, R800:6cyc
000a27: 32 65 06

[	RET] Z80:11cyc, R800:5cyc
000a2a: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_GET_START_BANK]
	Scope path: RC755_GET_START_BANK:

[RC755_GET_START_BANK ::]
	global label address: 0x000a2b

[	XOR A , A] Z80:5cyc, R800:1cyc
000a2b: af

[	RET] Z80:11cyc, R800:5cyc
000a2c: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_RESTORE_BANK]
	Scope path: RC755_RESTORE_BANK:

[RC755_RESTORE_BANK ::]
	global label address: 0x000a2d

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000a2d: 3a 65 06

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000a30: 32 00 60

[	RET] Z80:11cyc, R800:5cyc
000a33: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//ese_rc755.asm"] end

[	INCLUDE ".//simple64k.asm"] begin
[	SCOPE IS_SLOT_SIMPLE64K]
	Scope path: IS_SLOT_SIMPLE64K:

[IS_SLOT_SIMPLE64K ::]
	global label address: 0x000a34

[	OR A , A] Z80:5cyc, R800:1cyc
000a34: b7

[	JP M , NOT_SUPPORT_EXTENDED_SLOT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000a35: fa 98 0a

[	PUSH AF] Z80:12cyc, R800:6cyc
000a38: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000a39: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000a3b: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
000a3e: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000a3f: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000a41: cd 24 00

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000a44: 21 00 40

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000a47: cd 89 07

[	JR Z , NOT_SIMPLE64K] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a4a: 28 4c

[	LD HL , 0X5000] Z80:11cyc, R800:3cyc
000a4c: 21 00 50

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000a4f: cd 89 07

[	JR Z , NOT_SIMPLE64K] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a52: 28 44

[	LD HL , 0X6000] Z80:11cyc, R800:3cyc
000a54: 21 00 60

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000a57: cd 89 07

[	JR Z , NOT_SIMPLE64K] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a5a: 28 3c

[	LD HL , 0X7000] Z80:11cyc, R800:3cyc
000a5c: 21 00 70

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000a5f: cd 89 07

[	JR Z , NOT_SIMPLE64K] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a62: 28 34

[	LD HL , 0X8000] Z80:11cyc, R800:3cyc
000a64: 21 00 80

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000a67: cd 89 07

[	JR Z , NOT_SIMPLE64K] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a6a: 28 2c

[	LD HL , 0X9000] Z80:11cyc, R800:3cyc
000a6c: 21 00 90

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000a6f: cd 89 07

[	JR Z , NOT_SIMPLE64K] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a72: 28 24

[	LD HL , 0XA000] Z80:11cyc, R800:3cyc
000a74: 21 00 a0

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000a77: cd 89 07

[	JR Z , NOT_SIMPLE64K] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a7a: 28 1c

[	LD HL , 0XB000] Z80:11cyc, R800:3cyc
000a7c: 21 00 b0

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000a7f: cd 89 07

[	JR Z , NOT_SIMPLE64K] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a82: 28 14

[	CALL TRANSFER_TO_PAGE2] Z80:18cyc, R800:5cyc
000a84: cd c6 0a

[	CALL GET_ID_SIMPLE_64K] Z80:18cyc, R800:5cyc
000a87: cd 2c a0

[	LD A , [ MANUFACTURE_ID ]] Z80:14cyc, R800:6cyc
000a8a: 3a 61 06

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
000a8d: cd 19 07

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000a90: c0

[	LD A , [ MANUFACTURE_ID + 1 ]] Z80:14cyc, R800:6cyc
000a91: 3a 62 06

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
000a94: cd 2f 07

[	RET] Z80:11cyc, R800:5cyc
000a97: c9

[NOT_SIMPLE64K :]
	label address: 0x000a98

[NOT_SUPPORT_EXTENDED_SLOT :]
	label address: 0x000a98

[	XOR A , A] Z80:5cyc, R800:1cyc
000a98: af

[	INC A] Z80:5cyc, R800:1cyc
000a99: 3c

[	RET] Z80:11cyc, R800:5cyc
000a9a: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_SLOT_SIMPLE64K]
	Scope path: SETUP_SLOT_SIMPLE64K:

[SETUP_SLOT_SIMPLE64K ::]
	global label address: 0x000a9b

[	LD A , 64] Z80:8cyc, R800:2cyc
000a9b: 3e 40

[	LD [ ROM_SIZE ] , A] Z80:14cyc, R800:6cyc
000a9d: 32 5f 06

[	LD HL , SIMPLE64K_FLASH_JUMP_TABLE] Z80:11cyc, R800:3cyc
000aa0: 21 a8 0a

[	CALL SETUP_FLASH_COMMAND] Z80:18cyc, R800:5cyc
000aa3: cd 80 07

[	XOR A , A] Z80:5cyc, R800:1cyc
000aa6: af

[	RET] Z80:11cyc, R800:5cyc
000aa7: c9

[SIMPLE64K_FLASH_JUMP_TABLE :]
	label address: 0x000aa8

[	JP SIMPLE64K_FLASH_CHIP_ERASE] Z80:11cyc, R800:5cyc
000aa8: c3 68 a0

[	JP SIMPLE64K_FLASH_WRITE_8KB] Z80:11cyc, R800:5cyc
000aab: c3 01 0b

[	JP SIMPLE64K_SET_BANK] Z80:11cyc, R800:5cyc
000aae: c3 b4 0a

[	JP SIMPLE64K_GET_START_BANK] Z80:11cyc, R800:5cyc
000ab1: c3 b8 0a

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_SET_BANK]
	Scope path: SIMPLE64K_SET_BANK:

[SIMPLE64K_SET_BANK ::]
	global label address: 0x000ab4

[	LD [ BANK_BACK ] , A] Z80:14cyc, R800:6cyc
000ab4: 32 65 06

[	RET] Z80:11cyc, R800:5cyc
000ab7: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_GET_START_BANK]
	Scope path: SIMPLE64K_GET_START_BANK:

[SIMPLE64K_GET_START_BANK ::]
	global label address: 0x000ab8

[	LD A , H] Z80:5cyc, R800:2cyc
000ab8: 7c

[	OR A , A] Z80:5cyc, R800:1cyc
000ab9: b7

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000aba: c0

[	LD A , L] Z80:5cyc, R800:2cyc
000abb: 7d

[	CP A , 33] Z80:8cyc, R800:2cyc
000abc: fe 21

[	JR C , FILE_32KB] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000abe: 38 02

[FILE_48KB_OR_64KB :]
	label address: 0x000ac0

[	XOR A , A] Z80:5cyc, R800:1cyc
000ac0: af

[	RET] Z80:11cyc, R800:5cyc
000ac1: c9

[FILE_32KB :]
	label address: 0x000ac2

[	LD A , 4] Z80:8cyc, R800:2cyc
000ac2: 3e 04

[	OR A , A] Z80:5cyc, R800:1cyc
000ac4: b7

[	RET] Z80:11cyc, R800:5cyc
000ac5: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE TRANSFER_TO_PAGE2]
	Scope path: TRANSFER_TO_PAGE2:

[TRANSFER_TO_PAGE2 ::]
	global label address: 0x000ac6

[	LD HL , TRANSFER_TO_PAGE2_START] Z80:11cyc, R800:3cyc
000ac6: 21 1c 0b

[	LD DE , PAGE2_START] Z80:11cyc, R800:3cyc
000ac9: 11 00 a0

[	LD BC , PAGE2_END - PAGE2_START] Z80:11cyc, R800:3cyc
000acc: 01 ff 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000acf: ed b0

[	RET] Z80:11cyc, R800:5cyc
000ad1: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE TRANSFER_TO_PAGE3]
	Scope path: TRANSFER_TO_PAGE3:

[TRANSFER_TO_PAGE3 ::]
	global label address: 0x000ad2

[	DI] Z80:5cyc, R800:2cyc
000ad2: f3

[	LD HL , 0XC000] Z80:11cyc, R800:3cyc
000ad3: 21 00 c0

[	LD DE , 0X4000] Z80:11cyc, R800:3cyc
000ad6: 11 00 40

[	LD BC , 0X4000] Z80:11cyc, R800:3cyc
000ad9: 01 00 40

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000adc: ed b0

[	LD HL , TRANSFER_TO_PAGE3_START] Z80:11cyc, R800:3cyc
000ade: 21 1b 0c

[	LD DE , PAGE3_START] Z80:11cyc, R800:3cyc
000ae1: 11 00 e0

[	LD BC , PAGE3_END - PAGE3_START] Z80:11cyc, R800:3cyc
000ae4: 01 73 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000ae7: ed b0

[	LD HL , 0X2000] Z80:11cyc, R800:3cyc
000ae9: 21 00 20

[	LD DE , 0XC000] Z80:11cyc, R800:3cyc
000aec: 11 00 c0

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
000aef: 01 00 20

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000af2: ed b0

[	RET] Z80:11cyc, R800:5cyc
000af4: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RESTORE_PAGE3]
	Scope path: RESTORE_PAGE3:

[RESTORE_PAGE3 ::]
	global label address: 0x000af5

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000af5: 21 00 40

[	LD DE , 0XC000] Z80:11cyc, R800:3cyc
000af8: 11 00 c0

[	LD BC , 0X4000] Z80:11cyc, R800:3cyc
000afb: 01 00 40

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000afe: ed b0

[	RET] Z80:11cyc, R800:5cyc
000b00: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_FLASH_WRITE_8KB]
	Scope path: SIMPLE64K_FLASH_WRITE_8KB:

[SIMPLE64K_FLASH_WRITE_8KB ::]
	global label address: 0x000b01

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000b01: 3a 65 06

[	RRCA] Z80:5cyc, R800:1cyc
000b04: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000b05: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000b06: 0f

[	LD H , A] Z80:5cyc, R800:2cyc
000b07: 67

[	LD L , 0] Z80:8cyc, R800:2cyc
000b08: 2e 00

[	CP A , 0X80] Z80:8cyc, R800:2cyc
000b0a: fe 80

[	JR Z , PAGE3] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000b0c: 28 09

[	CP A , 0XA0] Z80:8cyc, R800:2cyc
000b0e: fe a0

[	JR Z , PAGE3] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000b10: 28 05

[PAGE2 :]
	label address: 0x000b12

[	CALL SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE2] Z80:18cyc, R800:5cyc
000b12: cd aa a0

[	XOR A , A] Z80:5cyc, R800:1cyc
000b15: af

[	RET] Z80:11cyc, R800:5cyc
000b16: c9

[PAGE3 :]
	label address: 0x000b17

[	CALL SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE3] Z80:18cyc, R800:5cyc
000b17: cd 1e e0

[	XOR A , A] Z80:5cyc, R800:1cyc
000b1a: af

[	RET] Z80:11cyc, R800:5cyc
000b1b: c9

[	ENDSCOPE]
	Scope path: 

[TRANSFER_TO_PAGE2_START ::]
	global label address: 0x000b1c

[	ORG 0XA000]
	code address: 0x00a000

[PAGE2_START ::]
	global label address: 0x00a000

[	SCOPE SETUP_SLOT_FOR_PAGE2]
	Scope path: SETUP_SLOT_FOR_PAGE2:

[SETUP_SLOT_FOR_PAGE2 ::]
	global label address: 0x00a000

[	LD [ P2_TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
00a000: 32 f7 a0

[	LD HL , [ RAMAD0 ]] Z80:17cyc, R800:7cyc
00a003: 2a 41 f3

[	LD [ P2_RAMAD0_SIMPLE64K ] , HL] Z80:17cyc, R800:7cyc
00a006: 22 fb a0

[	LD HL , [ RAMAD2 ]] Z80:17cyc, R800:7cyc
00a009: 2a 43 f3

[	LD [ P2_RAMAD2_SIMPLE64K ] , HL] Z80:17cyc, R800:7cyc
00a00c: 22 fd a0

[	AND A , 3] Z80:8cyc, R800:2cyc
00a00f: e6 03

[	LD B , A] Z80:5cyc, R800:2cyc
00a011: 47

[	RLCA] Z80:5cyc, R800:1cyc
00a012: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a013: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a014: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a015: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00a016: b0

[	RLCA] Z80:5cyc, R800:1cyc
00a017: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a018: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00a019: b0

[	LD B , A] Z80:5cyc, R800:2cyc
00a01a: 47

[	IN A , [ PPI_PRIMARY_SLOT ]] Z80:12cyc, R800:10 or 9cyc
00a01b: db a8

[	LD [ P2_SAVE_PRIMARY ] , A] Z80:14cyc, R800:6cyc
00a01d: 32 fa a0

[	AND A , 0B00110000] Z80:8cyc, R800:2cyc
00a020: e6 30

[	OR A , B] Z80:5cyc, R800:1cyc
00a022: b0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00a023: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00a025: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RESTORE_SLOT_FOR_PAGE2]
	Scope path: RESTORE_SLOT_FOR_PAGE2:

[RESTORE_SLOT_FOR_PAGE2 ::]
	global label address: 0x00a026

[	LD A , [ P2_SAVE_PRIMARY ]] Z80:14cyc, R800:6cyc
00a026: 3a fa a0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00a029: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00a02b: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE GET_ID_SIMPLE64K]
	Scope path: GET_ID_SIMPLE64K:

[GET_ID_SIMPLE_64K ::]
	global label address: 0x00a02c

[	DI] Z80:5cyc, R800:2cyc
00a02c: f3

[	LD [ P2_SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
00a02d: ed 73 f8 a0

[	LD SP , 0XBFFF] Z80:11cyc, R800:3cyc
00a031: 31 ff bf

[	CALL SETUP_SLOT_FOR_PAGE2] Z80:18cyc, R800:5cyc
00a034: cd 00 a0

[	LD HL , 0X0000] Z80:11cyc, R800:3cyc
00a037: 21 00 00

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a03a: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a03c: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a03f: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a041: 32 aa 2a

[	LD A , 0X90] Z80:8cyc, R800:2cyc
00a044: 3e 90

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a046: 32 55 55

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00a049: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00a04a: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00a04b: 56

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a04c: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a04e: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a051: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a053: 32 aa 2a

[	LD A , 0XF0] Z80:8cyc, R800:2cyc
00a056: 3e f0

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a058: 32 55 55

[	CALL RESTORE_SLOT_FOR_PAGE2] Z80:18cyc, R800:5cyc
00a05b: cd 26 a0

[	LD [ MANUFACTURE_ID ] , DE] Z80:22cyc, R800:8cyc
00a05e: ed 53 61 06

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a062: ed 7b f8 a0

[	EI] Z80:5cyc, R800:1cyc
00a066: fb

[	RET] Z80:11cyc, R800:5cyc
00a067: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_FLASH_CHIP_ERASE]
	Scope path: SIMPLE64K_FLASH_CHIP_ERASE:

[SIMPLE64K_FLASH_CHIP_ERASE ::]
	global label address: 0x00a068

[	DI] Z80:5cyc, R800:2cyc
00a068: f3

[	LD [ P2_SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
00a069: ed 73 f8 a0

[	LD SP , 0XBFFF] Z80:11cyc, R800:3cyc
00a06d: 31 ff bf

[	CALL SETUP_SLOT_FOR_PAGE2] Z80:18cyc, R800:5cyc
00a070: cd 00 a0

[	LD HL , 0X0000] Z80:11cyc, R800:3cyc
00a073: 21 00 00

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a076: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a078: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a07b: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a07d: 32 aa 2a

[	LD A , 0X80] Z80:8cyc, R800:2cyc
00a080: 3e 80

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a082: 32 55 55

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a085: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a087: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a08a: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a08c: 32 aa 2a

[	LD A , 0X10] Z80:8cyc, R800:2cyc
00a08f: 3e 10

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a091: 32 55 55

[	CALL RESTORE_SLOT_FOR_PAGE2] Z80:18cyc, R800:5cyc
00a094: cd 26 a0

[	LD [ MANUFACTURE_ID ] , DE] Z80:22cyc, R800:8cyc
00a097: ed 53 61 06

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a09b: ed 7b f8 a0

[	LD HL , JIFFY] Z80:11cyc, R800:3cyc
00a09f: 21 9e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00a0a2: 7e

[	ADD A , 10] Z80:8cyc, R800:2cyc
00a0a3: c6 0a

[	EI] Z80:5cyc, R800:1cyc
00a0a5: fb

[WAIT_L1 :]
	label address: 0x00a0a6

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00a0a6: be

[	JR NZ , WAIT_L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0a7: 20 fd

[	RET] Z80:11cyc, R800:5cyc
00a0a9: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE2]
	Scope path: SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE2:

[SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE2 ::]
	global label address: 0x00a0aa

[	DI] Z80:5cyc, R800:2cyc
00a0aa: f3

[	LD [ P2_SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
00a0ab: ed 73 f8 a0

[	LD SP , 0XBFFF] Z80:11cyc, R800:3cyc
00a0af: 31 ff bf

[	PUSH HL] Z80:12cyc, R800:6cyc
00a0b2: e5

[	CALL SETUP_SLOT_FOR_PAGE2] Z80:18cyc, R800:5cyc
00a0b3: cd 00 a0

[	POP HL] Z80:11cyc, R800:5cyc
00a0b6: e1

[	LD DE , 0X8000] Z80:11cyc, R800:3cyc
00a0b7: 11 00 80

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00a0ba: 01 00 20

[LOOP_OF_BC :]
	label address: 0x00a0bd

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a0bd: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a0bf: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a0c2: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a0c4: 32 aa 2a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
00a0c7: 3e a0

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a0c9: 32 55 55

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00a0cc: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00a0cd: 77

[	PUSH BC] Z80:12cyc, R800:6cyc
00a0ce: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
00a0cf: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x00a0d2

[	NOP] Z80:5cyc, R800:1cyc
00a0d2: 00

[	NOP] Z80:5cyc, R800:1cyc
00a0d3: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00a0d4: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0d5: 28 0f

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0d7: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
00a0d9: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0da: 20 f6

[WRITE_ERROR :]
	label address: 0x00a0dc

[	POP BC] Z80:11cyc, R800:5cyc
00a0dc: c1

[	CALL RESTORE_SLOT_FOR_PAGE2] Z80:18cyc, R800:5cyc
00a0dd: cd 26 a0

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a0e0: ed 7b f8 a0

[	SCF] Z80:5cyc, R800:1cyc
00a0e4: 37

[	RET] Z80:11cyc, R800:5cyc
00a0e5: c9

[WRITE_COMPLETE :]
	label address: 0x00a0e6

[	POP BC] Z80:11cyc, R800:5cyc
00a0e6: c1

[	INC DE] Z80:7cyc, R800:1cyc
00a0e7: 13

[	INC HL] Z80:7cyc, R800:1cyc
00a0e8: 23

[	DEC BC] Z80:7cyc, R800:1cyc
00a0e9: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
00a0ea: 78

[	OR A , C] Z80:5cyc, R800:1cyc
00a0eb: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0ec: 20 cf

[	CALL RESTORE_SLOT_FOR_PAGE2] Z80:18cyc, R800:5cyc
00a0ee: cd 26 a0

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a0f1: ed 7b f8 a0

[	OR A , A] Z80:5cyc, R800:1cyc
00a0f5: b7

[	RET] Z80:11cyc, R800:5cyc
00a0f6: c9

[	ENDSCOPE]
	Scope path: 

[P2_TARGET_SLOT ::]
	global label address: 0x00a0f7

[	DB 0]
00a0f7: 00

[P2_SAVE_SP ::]
	global label address: 0x00a0f8

[	DW 0]
00a0f8: 00 00

[P2_SAVE_PRIMARY ::]
	global label address: 0x00a0fa

[	DB 0]
00a0fa: 00

[P2_RAMAD0_SIMPLE64K ::]
	global label address: 0x00a0fb

[	DB 0]
00a0fb: 00

[P2_RAMAD1_SIMPLE64K ::]
	global label address: 0x00a0fc

[	DB 0]
00a0fc: 00

[P2_RAMAD2_SIMPLE64K ::]
	global label address: 0x00a0fd

[	DB 0]
00a0fd: 00

[P2_RAMAD3_SIMPLE64K ::]
	global label address: 0x00a0fe

[	DB 0]
00a0fe: 00

[PAGE2_END ::]
	global label address: 0x00a0ff

[	ORG TRANSFER_TO_PAGE2_START + PAGE2_END - PAGE2_START]
	code address: 0x000c1b

[TRANSFER_TO_PAGE2_END ::]
	global label address: 0x000c1b

[TRANSFER_TO_PAGE3_START ::]
	global label address: 0x000c1b

[	ORG 0XE000]
	code address: 0x00e000

[PAGE3_START ::]
	global label address: 0x00e000

[	SCOPE SETUP_SLOT_FOR_PAGE3]
	Scope path: SETUP_SLOT_FOR_PAGE3:

[SETUP_SLOT_FOR_PAGE3 ::]
	global label address: 0x00e000

[	LD [ P3_TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
00e000: 32 6b e0

[	AND A , 3] Z80:8cyc, R800:2cyc
00e003: e6 03

[	LD B , A] Z80:5cyc, R800:2cyc
00e005: 47

[	RLCA] Z80:5cyc, R800:1cyc
00e006: 07

[	RLCA] Z80:5cyc, R800:1cyc
00e007: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00e008: b0

[	RLCA] Z80:5cyc, R800:1cyc
00e009: 07

[	RLCA] Z80:5cyc, R800:1cyc
00e00a: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00e00b: b0

[	LD B , A] Z80:5cyc, R800:2cyc
00e00c: 47

[	IN A , [ PPI_PRIMARY_SLOT ]] Z80:12cyc, R800:10 or 9cyc
00e00d: db a8

[	LD [ P3_SAVE_PRIMARY ] , A] Z80:14cyc, R800:6cyc
00e00f: 32 6e e0

[	AND A , 0B11000000] Z80:8cyc, R800:2cyc
00e012: e6 c0

[	OR A , B] Z80:5cyc, R800:1cyc
00e014: b0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00e015: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00e017: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RESTORE_SLOT_FOR_PAGE3]
	Scope path: RESTORE_SLOT_FOR_PAGE3:

[RESTORE_SLOT_FOR_PAGE3 ::]
	global label address: 0x00e018

[	LD A , [ P3_SAVE_PRIMARY ]] Z80:14cyc, R800:6cyc
00e018: 3a 6e e0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00e01b: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00e01d: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE3]
	Scope path: SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE3:

[SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE3 ::]
	global label address: 0x00e01e

[	DI] Z80:5cyc, R800:2cyc
00e01e: f3

[	LD [ P3_SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
00e01f: ed 73 6c e0

[	LD SP , 0XFFFF] Z80:11cyc, R800:3cyc
00e023: 31 ff ff

[	PUSH HL] Z80:12cyc, R800:6cyc
00e026: e5

[	CALL SETUP_SLOT_FOR_PAGE3] Z80:18cyc, R800:5cyc
00e027: cd 00 e0

[	POP HL] Z80:11cyc, R800:5cyc
00e02a: e1

[	LD DE , 0XC000] Z80:11cyc, R800:3cyc
00e02b: 11 00 c0

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00e02e: 01 00 20

[LOOP_OF_BC :]
	label address: 0x00e031

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00e031: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00e033: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00e036: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00e038: 32 aa 2a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
00e03b: 3e a0

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00e03d: 32 55 55

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00e040: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00e041: 77

[	PUSH BC] Z80:12cyc, R800:6cyc
00e042: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
00e043: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x00e046

[	NOP] Z80:5cyc, R800:1cyc
00e046: 00

[	NOP] Z80:5cyc, R800:1cyc
00e047: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00e048: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e049: 28 0f

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e04b: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
00e04d: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e04e: 20 f6

[WRITE_ERROR :]
	label address: 0x00e050

[	POP BC] Z80:11cyc, R800:5cyc
00e050: c1

[	CALL RESTORE_SLOT_FOR_PAGE3] Z80:18cyc, R800:5cyc
00e051: cd 18 e0

[	LD SP , [ P3_SAVE_SP ]] Z80:22cyc, R800:8cyc
00e054: ed 7b 6c e0

[	SCF] Z80:5cyc, R800:1cyc
00e058: 37

[	RET] Z80:11cyc, R800:5cyc
00e059: c9

[WRITE_COMPLETE :]
	label address: 0x00e05a

[	POP BC] Z80:11cyc, R800:5cyc
00e05a: c1

[	INC DE] Z80:7cyc, R800:1cyc
00e05b: 13

[	INC HL] Z80:7cyc, R800:1cyc
00e05c: 23

[	DEC BC] Z80:7cyc, R800:1cyc
00e05d: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
00e05e: 78

[	OR A , C] Z80:5cyc, R800:1cyc
00e05f: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e060: 20 cf

[	CALL RESTORE_SLOT_FOR_PAGE2] Z80:18cyc, R800:5cyc
00e062: cd 26 a0

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00e065: ed 7b f8 a0

[	OR A , A] Z80:5cyc, R800:1cyc
00e069: b7

[	RET] Z80:11cyc, R800:5cyc
00e06a: c9

[	ENDSCOPE]
	Scope path: 

[P3_TARGET_SLOT ::]
	global label address: 0x00e06b

[	DB 0]
00e06b: 00

[P3_SAVE_SP ::]
	global label address: 0x00e06c

[	DW 0]
00e06c: 00 00

[P3_SAVE_PRIMARY ::]
	global label address: 0x00e06e

[	DB 0]
00e06e: 00

[P3_RAMAD0_SIMPLE64K ::]
	global label address: 0x00e06f

[	DB 0]
00e06f: 00

[P3_RAMAD1_SIMPLE64K ::]
	global label address: 0x00e070

[	DB 0]
00e070: 00

[P3_RAMAD2_SIMPLE64K ::]
	global label address: 0x00e071

[	DB 0]
00e071: 00

[P3_RAMAD3_SIMPLE64K ::]
	global label address: 0x00e072

[	DB 0]
00e072: 00

[PAGE3_END ::]
	global label address: 0x00e073

[	ORG TRANSFER_TO_PAGE3_START + PAGE3_END - PAGE3_START]
	code address: 0x000c8e

[TRANSFER_TO_PAGE3_END ::]
	global label address: 0x000c8e

[	INCLUDE ".//simple64k.asm"] end

<< label >>
BANK_BACK 1637 ( 0x665 )
BDOS 5 ( 0x5 )
CHECK_TARGET_SLOT 1252 ( 0x4e4 )
CHECK_TARGET_SLOT:BASIC_SLOT 1267 ( 0x4f3 )
CHECK_TARGET_SLOT:CONSTANT_TARGET 1311 ( 0x51f )
CHECK_TARGET_SLOT:EXPANDED_SLOT 1281 ( 0x501 )
CHECK_TARGET_SLOT:L1 1262 ( 0x4ee )
CHECK_TARGET_SLOT:NEXT_SLOT 1301 ( 0x515 )
COMMAND_LINE_OPTIONS 561 ( 0x231 )
COMMAND_LINE_OPTIONS:FILE_EXT 699 ( 0x2bb )
COMMAND_LINE_OPTIONS:FILE_NAME 663 ( 0x297 )
COMMAND_LINE_OPTIONS:FL1 678 ( 0x2a6 )
COMMAND_LINE_OPTIONS:FL2 707 ( 0x2c3 )
COMMAND_LINE_OPTIONS:GET_ONE 557 ( 0x22d )
COMMAND_LINE_OPTIONS:L1 571 ( 0x23b )
COMMAND_LINE_OPTIONS:L2 582 ( 0x246 )
COMMAND_LINE_OPTIONS:OPTION 594 ( 0x252 )
COMMAND_LINE_OPTIONS:OPTION_S 608 ( 0x260 )
DETECT_TARGET 1333 ( 0x535 )
DETECT_TARGET:CARTRIDGE_TYPE_MESSAGE 1535 ( 0x5ff )
DETECT_TARGET:CARTRIDGE_TYPE_TABLE 1622 ( 0x656 )
DETECT_TARGET:COMMON_PROCESS 1403 ( 0x57b )
DETECT_TARGET:DETECT_RC755 1375 ( 0x55f )
DETECT_TARGET:DETECT_SCC 1361 ( 0x551 )
DETECT_TARGET:DETECT_SIMPLE64K 1389 ( 0x56d )
DETECT_TARGET:DEVICE_ID_MESSAGE 1519 ( 0x5ef )
DETECT_TARGET:FILE_SIZE_MESSAGE 1551 ( 0x60f )
DETECT_TARGET:KB_MESSAGE 1583 ( 0x62f )
DETECT_TARGET:MANUFACTURE_ID_MESSAGE 1503 ( 0x5df )
DETECT_TARGET:MEGA_SCC_MESSAGE 1588 ( 0x634 )
DETECT_TARGET:RC755_MESSAGE 1598 ( 0x63e )
DETECT_TARGET:ROM_SIZE_MESSAGE 1567 ( 0x61f )
DETECT_TARGET:SIMPLE64K_MESSAGE 1610 ( 0x64a )
DEVICE_ID 1634 ( 0x662 )
DID_SST39SF010A 181 ( 0xb5 )
DID_SST39SF020A 182 ( 0xb6 )
DID_SST39SF040 183 ( 0xb7 )
DISPLAY_PROGRESS_BAR 726 ( 0x2d6 )
DISPLAY_PROGRESS_BAR:DIVIDE_LOOP 758 ( 0x2f6 )
DISPLAY_PROGRESS_BAR:PROGRESS 807 ( 0x327 )
DISPLAY_PROGRESS_BAR:PROGRESS_BAR 796 ( 0x31c )
DISPLAY_PROGRESS_BAR:SKIP_ADD 765 ( 0x2fd )
DISPLAY_PROGRESS_BAR:SKIP_FILL 789 ( 0x315 )
DISPLAY_TARGET_FNAME 1177 ( 0x499 )
DISPLAY_TARGET_FNAME:FNAME_MESSAGE 1236 ( 0x4d4 )
DISPLAY_TARGET_FNAME:L1 1188 ( 0x4a4 )
DISPLAY_TARGET_FNAME:L2 1218 ( 0x4c2 )
DISPLAY_TARGET_FNAME:S1 1206 ( 0x4b6 )
DISPLAY_TARGET_SLOT 1134 ( 0x46e )
DISPLAY_TARGET_SLOT:BAR_MESSAGE 1175 ( 0x497 )
DISPLAY_TARGET_SLOT:SLOT_MESSAGE 1169 ( 0x491 )
ENASLT 36 ( 0x24 )
ENTRY_POINT 256 ( 0x100 )
ENTRY_POINT:BLOCK_WRITE_LOOP 336 ( 0x150 )
ENTRY_POINT:COMPLETED_MESSAGE 488 ( 0x1e8 )
ENTRY_POINT:ERASE_MESSAGE 468 ( 0x1d4 )
ENTRY_POINT:NOT_DETECTED 397 ( 0x18d )
ENTRY_POINT:NOT_DETECTED_MESSAGE 503 ( 0x1f7 )
ENTRY_POINT:OK_MESSAGE 483 ( 0x1e3 )
ENTRY_POINT:PUTS_AND_EXIT 386 ( 0x182 )
ENTRY_POINT:TITLE_MESSAGE 402 ( 0x192 )
ENTRY_POINT:WRITE_ERROR_MESSAGE 539 ( 0x21b )
EXPTBL 64705 ( 0xfcc1 )
FCB 1638 ( 0x666 )
FCB_CLRCLS 1666 ( 0x682 )
FCB_CLSOFF 1668 ( 0x684 )
FCB_CR 1670 ( 0x686 )
FCB_DATE 1658 ( 0x67a )
FCB_DEVID 1662 ( 0x67e )
FCB_DIRLOC 1663 ( 0x67f )
FCB_DR 1638 ( 0x666 )
FCB_EX 1650 ( 0x672 )
FCB_FEXT 1647 ( 0x66f )
FCB_FILSIZ 1654 ( 0x676 )
FCB_FNAME 1639 ( 0x667 )
FCB_RC 1653 ( 0x675 )
FCB_RN 1671 ( 0x687 )
FCB_S1 1651 ( 0x673 )
FCB_S2 1652 ( 0x674 )
FCB_STRCLS 1664 ( 0x680 )
FCB_TIME 1660 ( 0x67c )
FILE_OPEN 826 ( 0x33a )
FILE_OPEN:CANNOT_OPEN_MESSAGE 897 ( 0x381 )
FILE_OPEN:IS_NOT_8KB_MESSAGE 917 ( 0x395 )
FILE_OPEN:IS_ZERO_MESSAGE 959 ( 0x3bf )
FILE_OPEN:PUT_ERROR 892 ( 0x37c )
FILE_SIZE 1629 ( 0x65d )
FLASH_CHIP_ERASE 1936 ( 0x790 )
FLASH_GET_START_BANK 1945 ( 0x799 )
FLASH_SET_BANK 1942 ( 0x796 )
FLASH_WRITE_8KB 1939 ( 0x793 )
GET_DEVICE_NAME 1839 ( 0x72f )
GET_DEVICE_NAME:S_SST39SF010A 1885 ( 0x75d )
GET_DEVICE_NAME:S_SST39SF020A 1897 ( 0x769 )
GET_DEVICE_NAME:S_SST39SF040 1909 ( 0x775 )
GET_ID_SIMPLE_64K 41004 ( 0xa02c )
GET_MANUFACTURE_NAME 1817 ( 0x719 )
GET_MANUFACTURE_NAME:S_SST 1827 ( 0x723 )
IS_ROM 1929 ( 0x789 )
IS_SLOT_RC755 2288 ( 0x8f0 )
IS_SLOT_RC755:NOT_RC755 2285 ( 0x8ed )
IS_SLOT_SCC 1948 ( 0x79c )
IS_SLOT_SCC:L1 1962 ( 0x7aa )
IS_SLOT_SCC:L2 1973 ( 0x7b5 )
IS_SLOT_SCC:L3 1987 ( 0x7c3 )
IS_SLOT_SCC:NOT_SCC 1999 ( 0x7cf )
IS_SLOT_SIMPLE64K 2612 ( 0xa34 )
IS_SLOT_SIMPLE64K:NOT_SIMPLE64K 2712 ( 0xa98 )
IS_SLOT_SIMPLE64K:NOT_SUPPORT_EXTENDED_SLOT 2712 ( 0xa98 )
JIFFY 64670 ( 0xfc9e )
JUMP_TABLE 1936 ( 0x790 )
JUMP_TABLE_END 1948 ( 0x79c )
MANUFACTURE_ID 1633 ( 0x661 )
MID_SST 191 ( 0xbf )
P2_RAMAD0_SIMPLE64K 41211 ( 0xa0fb )
P2_RAMAD1_SIMPLE64K 41212 ( 0xa0fc )
P2_RAMAD2_SIMPLE64K 41213 ( 0xa0fd )
P2_RAMAD3_SIMPLE64K 41214 ( 0xa0fe )
P2_SAVE_PRIMARY 41210 ( 0xa0fa )
P2_SAVE_SP 41208 ( 0xa0f8 )
P2_TARGET_SLOT 41207 ( 0xa0f7 )
P3_RAMAD0_SIMPLE64K 57455 ( 0xe06f )
P3_RAMAD1_SIMPLE64K 57456 ( 0xe070 )
P3_RAMAD2_SIMPLE64K 57457 ( 0xe071 )
P3_RAMAD3_SIMPLE64K 57458 ( 0xe072 )
P3_SAVE_PRIMARY 57454 ( 0xe06e )
P3_SAVE_SP 57452 ( 0xe06c )
P3_TARGET_SLOT 57451 ( 0xe06b )
PAGE2_END 41215 ( 0xa0ff )
PAGE2_START 40960 ( 0xa000 )
PAGE3_END 57459 ( 0xe073 )
PAGE3_START 57344 ( 0xe000 )
PPI_PRIMARY_SLOT 168 ( 0xa8 )
PROGRESS_MAX 1636 ( 0x664 )
PUTDEC 1742 ( 0x6ce )
PUTDEC:COUNT_SUB 1799 ( 0x707 )
PUTDEC:L1 1802 ( 0x70a )
PUTDEC:S1 1809 ( 0x711 )
PUTDEC:STR 1811 ( 0x713 )
PUTDEC:ZERO_SKIP 1789 ( 0x6fd )
PUTDEC:ZERO_SKIP_EXIT 1795 ( 0x703 )
PUTHEX16 1695 ( 0x69f )
PUTHEX8 1702 ( 0x6a6 )
PUTHEX8:HEX_CHARACTERS 1726 ( 0x6be )
PUTHEX_C 1711 ( 0x6af )
PUTS 1681 ( 0x691 )
PUTS_CRLF 1678 ( 0x68e )
PUTS_CRLF:CRLF 1675 ( 0x68b )
RAMAD0 62273 ( 0xf341 )
RAMAD1 62274 ( 0xf342 )
RAMAD2 62275 ( 0xf343 )
RAMAD3 62276 ( 0xf344 )
RC755_BANK1_SEL 24576 ( 0x6000 )
RC755_BANK2_SEL 32768 ( 0x8000 )
RC755_BANK3_SEL 40960 ( 0xa000 )
RC755_CMD_2AAA 19114 ( 0x4aaa )
RC755_CMD_5555 21845 ( 0x5555 )
RC755_FLASH 128 ( 0x80 )
RC755_FLASH_CHIP_ERASE 2528 ( 0x9e0 )
RC755_FLASH_CHIP_ERASE:WAIT_L1 2586 ( 0xa1a )
RC755_FLASH_WRITE_8KB 2430 ( 0x97e )
RC755_FLASH_WRITE_8KB:LOOP_OF_BC 2466 ( 0x9a2 )
RC755_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 2494 ( 0x9be )
RC755_FLASH_WRITE_8KB:WRITE_COMPLETE 2510 ( 0x9ce )
RC755_FLASH_WRITE_8KB:WRITE_ERROR 2504 ( 0x9c8 )
RC755_GET_START_BANK 2603 ( 0xa2b )
RC755_RESTORE_BANK 2605 ( 0xa2d )
RC755_SET_BANK 2599 ( 0xa27 )
RESTORE_DOS_SLOT 1315 ( 0x523 )
RESTORE_PAGE3 2805 ( 0xaf5 )
RESTORE_SLOT_FOR_PAGE2 40998 ( 0xa026 )
RESTORE_SLOT_FOR_PAGE3 57368 ( 0xe018 )
ROM_SIZE 1631 ( 0x65f )
ROM_TYPE 1635 ( 0x663 )
SCC_BANK0_SEL 20480 ( 0x5000 )
SCC_BANK1_SEL 28672 ( 0x7000 )
SCC_BANK2_SEL 36864 ( 0x9000 )
SCC_BANK3_SEL 45056 ( 0xb000 )
SCC_CMD_2AAA 35498 ( 0x8aaa )
SCC_CMD_5555 42325 ( 0xa555 )
SCC_FLASH_CHIP_ERASE 2201 ( 0x899 )
SCC_FLASH_CHIP_ERASE:WAIT_L1 2264 ( 0x8d8 )
SCC_FLASH_WRITE_8KB 2103 ( 0x837 )
SCC_FLASH_WRITE_8KB:LOOP_OF_BC 2144 ( 0x860 )
SCC_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 2172 ( 0x87c )
SCC_FLASH_WRITE_8KB:WRITE_COMPLETE 2188 ( 0x88c )
SCC_FLASH_WRITE_8KB:WRITE_ERROR 2182 ( 0x886 )
SCC_GET_START_BANK 2276 ( 0x8e4 )
SCC_RESTORE_BANK 2278 ( 0x8e6 )
SCC_SET_BANK 2272 ( 0x8e0 )
SETUP_FLASH_COMMAND 1920 ( 0x780 )
SETUP_SLOT_FOR_PAGE2 40960 ( 0xa000 )
SETUP_SLOT_FOR_PAGE3 57344 ( 0xe000 )
SETUP_SLOT_RC755 2398 ( 0x95e )
SETUP_SLOT_RC755:RC755_FLASH_JUMP_TABLE 2418 ( 0x972 )
SETUP_SLOT_SCC 2002 ( 0x7d2 )
SETUP_SLOT_SCC:SCC_FLASH_JUMP_TABLE 2091 ( 0x82b )
SETUP_SLOT_SIMPLE64K 2715 ( 0xa9b )
SETUP_SLOT_SIMPLE64K:SIMPLE64K_FLASH_JUMP_TABLE 2728 ( 0xaa8 )
SIMPLE64K_FLASH_CHIP_ERASE 41064 ( 0xa068 )
SIMPLE64K_FLASH_CHIP_ERASE:WAIT_L1 41126 ( 0xa0a6 )
SIMPLE64K_FLASH_WRITE_8KB 2817 ( 0xb01 )
SIMPLE64K_FLASH_WRITE_8KB:PAGE2 2834 ( 0xb12 )
SIMPLE64K_FLASH_WRITE_8KB:PAGE3 2839 ( 0xb17 )
SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE2 41130 ( 0xa0aa )
SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE2:LOOP_OF_BC 41149 ( 0xa0bd )
SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE2:WAIT_FOR_WRITE_COMPLETE 41170 ( 0xa0d2 )
SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE2:WRITE_COMPLETE 41190 ( 0xa0e6 )
SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE2:WRITE_ERROR 41180 ( 0xa0dc )
SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE3 57374 ( 0xe01e )
SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE3:LOOP_OF_BC 57393 ( 0xe031 )
SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE3:WAIT_FOR_WRITE_COMPLETE 57414 ( 0xe046 )
SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE3:WRITE_COMPLETE 57434 ( 0xe05a )
SIMPLE64K_FLASH_WRITE_8KB_ON_PAGE3:WRITE_ERROR 57424 ( 0xe050 )
SIMPLE64K_GET_START_BANK 2744 ( 0xab8 )
SIMPLE64K_GET_START_BANK:FILE_32KB 2754 ( 0xac2 )
SIMPLE64K_GET_START_BANK:FILE_48KB_OR_64KB 2752 ( 0xac0 )
SIMPLE64K_SET_BANK 2740 ( 0xab4 )
SIMPLE_CMD_2AAA 10922 ( 0x2aaa )
SIMPLE_CMD_5555 21845 ( 0x5555 )
S_UNKNOWN 1831 ( 0x727 )
TARGET_SLOT 1628 ( 0x65c )
TRANSFER_TO_PAGE2 2758 ( 0xac6 )
TRANSFER_TO_PAGE2_END 3099 ( 0xc1b )
TRANSFER_TO_PAGE2_START 2844 ( 0xb1c )
TRANSFER_TO_PAGE3 2770 ( 0xad2 )
TRANSFER_TO_PAGE3_END 3214 ( 0xc8e )
TRANSFER_TO_PAGE3_START 3099 ( 0xc1b )
USAGE 976 ( 0x3d0 )
USAGE:USAGE_MESSAGE 990 ( 0x3de )
_DIRIO 6 ( 0x6 )
_FCLOSE 16 ( 0x10 )
_FOPEN 15 ( 0xf )
_RDBLK 39 ( 0x27 )
_SETDTA 26 ( 0x1a )
_STROUT 9 ( 0x9 )
_TERM0 0 ( 0x0 )
