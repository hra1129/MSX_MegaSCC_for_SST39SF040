Z80 Macro Assembler ZMA v1.0.15
=====================================================
Programmed by t.hara

<< code >>
[	ORG 0X100]
	code address: 0x000100

[	SCOPE ENTRY_POINT]
	Scope path: ENTRY_POINT:

[ENTRY_POINT ::]
	global label address: 0x000100

[	LD DE , TITLE_MESSAGE] Z80:11cyc, R800:3cyc
000100: 11 a7 01

[	CALL PUTS] Z80:18cyc, R800:5cyc
000103: cd b3 07

[	CALL COMMAND_LINE_OPTIONS] Z80:18cyc, R800:5cyc
000106: cd 53 02

[	LD A , [ FCB_FNAME ]] Z80:14cyc, R800:6cyc
000109: 3a 89 07

[	CP A , 32] Z80:8cyc, R800:2cyc
00010c: fe 20

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00010e: ca 18 04

[	CALL DISPLAY_TARGET_FNAME] Z80:18cyc, R800:5cyc
000111: cd a2 05

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000114: cd b0 07

[	CALL FILE_OPEN] Z80:18cyc, R800:5cyc
000117: cd 82 03

[	CALL CHECK_TARGET_SLOT] Z80:18cyc, R800:5cyc
00011a: cd ed 05

[	JP NZ , NOT_DETECTED] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00011d: c2 a2 01

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000120: cd 2c 06

[	CALL DISPLAY_TARGET_SLOT] Z80:18cyc, R800:5cyc
000123: cd 77 05

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000126: cd b0 07

[	LD DE , ERASE_MESSAGE] Z80:11cyc, R800:3cyc
000129: 11 f6 01

[	CALL PUTS] Z80:18cyc, R800:5cyc
00012c: cd b3 07

[	CALL FLASH_CHIP_ERASE] Z80:18cyc, R800:5cyc
00012f: cd b2 08

[	LD DE , OK_MESSAGE] Z80:11cyc, R800:3cyc
000132: 11 05 02

[	CALL PUTS] Z80:18cyc, R800:5cyc
000135: cd b3 07

[	LD DE , BLOCK_MESSAGE] Z80:11cyc, R800:3cyc
000138: 11 e6 01

[	CALL PUTS] Z80:18cyc, R800:5cyc
00013b: cd b3 07

[	LD HL , [ FILE_SIZE ]] Z80:17cyc, R800:7cyc
00013e: 2a 7e 07

[	PUSH HL] Z80:12cyc, R800:6cyc
000141: e5

[	CALL FLASH_GET_START_BANK] Z80:18cyc, R800:5cyc
000142: cd bb 08

[	LD C , A] Z80:5cyc, R800:2cyc
000145: 4f

[	PUSH BC] Z80:12cyc, R800:6cyc
000146: c5

[	LD L , A] Z80:5cyc, R800:2cyc
000147: 6f

[	LD H , 0] Z80:8cyc, R800:2cyc
000148: 26 00

[	CALL PUTDEC] Z80:18cyc, R800:5cyc
00014a: cd f0 07

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
00014d: cd b0 07

[	POP BC] Z80:11cyc, R800:5cyc
000150: c1

[	POP HL] Z80:11cyc, R800:5cyc
000151: e1

[	PUSH HL] Z80:12cyc, R800:6cyc
000152: e5

[	SRL H] Z80:10cyc, R800:2cyc
000153: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
000155: cb 1d

[	SRL H] Z80:10cyc, R800:2cyc
000157: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
000159: cb 1d

[	SRL H] Z80:10cyc, R800:2cyc
00015b: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
00015d: cb 1d

[	LD B , L] Z80:5cyc, R800:2cyc
00015f: 45

[	LD A , L] Z80:5cyc, R800:2cyc
000160: 7d

[	LD [ PROGRESS_MAX ] , A] Z80:14cyc, R800:6cyc
000161: 32 86 07

[	POP HL] Z80:11cyc, R800:5cyc
000164: e1

[BLOCK_WRITE_LOOP :]
	label address: 0x000165

[	LD A , C] Z80:5cyc, R800:2cyc
000165: 79

[	PUSH BC] Z80:12cyc, R800:6cyc
000166: c5

[	CALL FLASH_SET_BANK] Z80:18cyc, R800:5cyc
000167: cd b8 08

[	LD A , B] Z80:5cyc, R800:2cyc
00016a: 78

[	CALL DISPLAY_PROGRESS_BAR] Z80:18cyc, R800:5cyc
00016b: cd 1e 03

[	LD C , _RDBLK] Z80:8cyc, R800:2cyc
00016e: 0e 27

[	LD DE , FCB] Z80:11cyc, R800:3cyc
000170: 11 88 07

[	LD HL , 8] Z80:11cyc, R800:3cyc
000173: 21 08 00

[	CALL BDOS] Z80:18cyc, R800:5cyc
000176: cd 05 00

[	CALL FLASH_WRITE_8KB] Z80:18cyc, R800:5cyc
000179: cd b5 08

[	POP BC] Z80:11cyc, R800:5cyc
00017c: c1

[	LD DE , WRITE_ERROR_MESSAGE] Z80:11cyc, R800:3cyc
00017d: 11 3d 02

[	JR C , PUTS_AND_EXIT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000180: 38 15

[	INC C] Z80:5cyc, R800:1cyc
000182: 0c

[	DJNZ BLOCK_WRITE_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000183: 10 e0

[	LD A , B] Z80:5cyc, R800:2cyc
000185: 78

[	CALL DISPLAY_PROGRESS_BAR] Z80:18cyc, R800:5cyc
000186: cd 1e 03

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000189: cd b0 07

[	LD C , _FCLOSE] Z80:8cyc, R800:2cyc
00018c: 0e 10

[	LD DE , FCB] Z80:11cyc, R800:3cyc
00018e: 11 88 07

[	CALL BDOS] Z80:18cyc, R800:5cyc
000191: cd 05 00

[	LD DE , COMPLETED_MESSAGE] Z80:11cyc, R800:3cyc
000194: 11 0a 02

[PUTS_AND_EXIT :]
	label address: 0x000197

[	CALL PUTS] Z80:18cyc, R800:5cyc
000197: cd b3 07

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
00019a: cd 2c 06

[	LD C , _TERM0] Z80:8cyc, R800:2cyc
00019d: 0e 00

[	JP BDOS] Z80:11cyc, R800:5cyc
00019f: c3 05 00

[NOT_DETECTED :]
	label address: 0x0001a2

[	LD DE , NOT_DETECTED_MESSAGE] Z80:11cyc, R800:3cyc
0001a2: 11 19 02

[	JR PUTS_AND_EXIT] Z80:13cyc, R800:3cyc
0001a5: 18 f0

[TITLE_MESSAGE :]
	label address: 0x0001a7

[	DS "WRTSST [SST FlashROM Writer] v1.00\r\n"]
0001a7: 57 52 54 53 53 54 20 5b
0001af: 53 53 54 20 46 6c 61 73
0001b7: 68 52 4f 4d 20 57 72 69
0001bf: 74 65 72 5d 20 76 31 2e
0001c7: 30 30 0d 0a

[	DS "Copyright (C)2022 HRA!\r\n\r\n"]
0001cb: 43 6f 70 79 72 69 67 68
0001d3: 74 20 28 43 29 32 30 32
0001db: 32 20 48 52 41 21 0d 0a
0001e3: 0d 0a

[	DB 0]
0001e5: 00

[BLOCK_MESSAGE :]
	label address: 0x0001e6

[	DS "BLOCK#        :"]
0001e6: 42 4c 4f 43 4b 23 20 20
0001ee: 20 20 20 20 20 20 3a

[	DB 0]
0001f5: 00

[ERASE_MESSAGE :]
	label address: 0x0001f6

[	DS "ERASE ROM ... "]
0001f6: 45 52 41 53 45 20 52 4f
0001fe: 4d 20 2e 2e 2e 20

[	DB 0]
000204: 00

[OK_MESSAGE :]
	label address: 0x000205

[	DS "OK\r\n"]
000205: 4f 4b 0d 0a

[	DB 0]
000209: 00

[COMPLETED_MESSAGE :]
	label address: 0x00020a

[	DS "\r\nCompleted.\r\n"]
00020a: 0d 0a 43 6f 6d 70 6c 65
000212: 74 65 64 2e 0d 0a

[	DB 0]
000218: 00

[NOT_DETECTED_MESSAGE :]
	label address: 0x000219

[	DS "Could not detect flash cartridge.\r\n"]
000219: 43 6f 75 6c 64 20 6e 6f
000221: 74 20 64 65 74 65 63 74
000229: 20 66 6c 61 73 68 20 63
000231: 61 72 74 72 69 64 67 65
000239: 2e 0d 0a

[	DB 0]
00023c: 00

[WRITE_ERROR_MESSAGE :]
	label address: 0x00023d

[	DS "\r\nWrite failed.\r\n"]
00023d: 0d 0a 57 72 69 74 65 20
000245: 66 61 69 6c 65 64 2e 0d
00024d: 0a

[	DB 0]
00024e: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE COMMAND_LINE_OPTIONS]
	Scope path: COMMAND_LINE_OPTIONS:

[GET_ONE :]
	label address: 0x00024f

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00024f: 7e

[	INC HL] Z80:7cyc, R800:1cyc
000250: 23

[	DEC B] Z80:5cyc, R800:1cyc
000251: 05

[	RET] Z80:11cyc, R800:5cyc
000252: c9

[COMMAND_LINE_OPTIONS ::]
	global label address: 0x000253

[	LD HL , 0X0080] Z80:11cyc, R800:3cyc
000253: 21 80 00

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000256: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
000257: b7

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000258: ca 18 04

[	LD B , A] Z80:5cyc, R800:2cyc
00025b: 47

[	INC HL] Z80:7cyc, R800:1cyc
00025c: 23

[L1 :]
	label address: 0x00025d

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
00025d: cd 4f 02

[	CP A , 47] Z80:8cyc, R800:2cyc
000260: fe 2f

[	JR Z , OPTION] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000262: 28 08

[	CP A , 32] Z80:8cyc, R800:2cyc
000264: fe 20

[	JR NZ , FILE_NAME] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000266: 20 4d

[L2 :]
	label address: 0x000268

[	INC B] Z80:5cyc, R800:1cyc
000268: 04

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000269: 10 f2

[	RET] Z80:11cyc, R800:5cyc
00026b: c9

[OPTION :]
	label address: 0x00026c

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
00026c: cd 4f 02

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00026f: ca 18 04

[	CP A , 83] Z80:8cyc, R800:2cyc
000272: fe 53

[	JP Z , OPTION_S] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000274: ca 84 02

[	CP A , 65] Z80:8cyc, R800:2cyc
000277: fe 41

[	JP Z , OPTION_A] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000279: ca fc 02

[	CP A , 84] Z80:8cyc, R800:2cyc
00027c: fe 54

[	JP Z , OPTION_T] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00027e: ca 0f 03

[	JP USAGE] Z80:11cyc, R800:5cyc
000281: c3 18 04

[OPTION_S :]
	label address: 0x000284

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
000284: cd 4f 02

[	SUB A , 48] Z80:8cyc, R800:2cyc
000287: d6 30

[	CP A , 4] Z80:8cyc, R800:2cyc
000289: fe 04

[	JP NC , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00028b: d2 18 04

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
00028e: 32 7d 07

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000291: 7e

[	CP A , 45] Z80:8cyc, R800:2cyc
000292: fe 2d

[	JP NZ , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000294: c2 5d 02

[	INC HL] Z80:7cyc, R800:1cyc
000297: 23

[	DEC B] Z80:5cyc, R800:1cyc
000298: 05

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000299: ca 18 04

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
00029c: cd 4f 02

[	SUB A , 48] Z80:8cyc, R800:2cyc
00029f: d6 30

[	CP A , 4] Z80:8cyc, R800:2cyc
0002a1: fe 04

[	JP NC , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002a3: d2 18 04

[	RLCA] Z80:5cyc, R800:1cyc
0002a6: 07

[	RLCA] Z80:5cyc, R800:1cyc
0002a7: 07

[	LD C , A] Z80:5cyc, R800:2cyc
0002a8: 4f

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0002a9: 3a 7d 07

[	OR A , C] Z80:5cyc, R800:1cyc
0002ac: b1

[	OR A , 0X80] Z80:8cyc, R800:2cyc
0002ad: f6 80

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
0002af: 32 7d 07

[	JP L1] Z80:11cyc, R800:5cyc
0002b2: c3 5d 02

[FILE_NAME :]
	label address: 0x0002b5

[	LD A , [ FCB_FNAME ]] Z80:14cyc, R800:6cyc
0002b5: 3a 89 07

[	CP A , 32] Z80:8cyc, R800:2cyc
0002b8: fe 20

[	JP NZ , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002ba: c2 18 04

[	LD C , 8] Z80:8cyc, R800:2cyc
0002bd: 0e 08

[	LD DE , FCB_FNAME] Z80:11cyc, R800:3cyc
0002bf: 11 89 07

[	DEC HL] Z80:7cyc, R800:1cyc
0002c2: 2b

[	INC B] Z80:5cyc, R800:1cyc
0002c3: 04

[FL1 :]
	label address: 0x0002c4

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
0002c4: cd 4f 02

[	CP A , 46] Z80:8cyc, R800:2cyc
0002c7: fe 2e

[	JP Z , FILE_EXT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002c9: ca e1 02

[	CP A , 32] Z80:8cyc, R800:2cyc
0002cc: fe 20

[	JP Z , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002ce: ca 5d 02

[	LD [ DE ] , A] Z80:8cyc, R800:4cyc
0002d1: 12

[	INC DE] Z80:7cyc, R800:1cyc
0002d2: 13

[	INC B] Z80:5cyc, R800:1cyc
0002d3: 04

[	DEC B] Z80:5cyc, R800:1cyc
0002d4: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0002d5: c8

[	DEC C] Z80:5cyc, R800:1cyc
0002d6: 0d

[	JR NZ , FL1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0002d7: 20 eb

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
0002d9: cd 4f 02

[	CP A , 46] Z80:8cyc, R800:2cyc
0002dc: fe 2e

[	JP NZ , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002de: c2 18 04

[FILE_EXT :]
	label address: 0x0002e1

[	INC B] Z80:5cyc, R800:1cyc
0002e1: 04

[	DEC B] Z80:5cyc, R800:1cyc
0002e2: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0002e3: c8

[	LD C , 3] Z80:8cyc, R800:2cyc
0002e4: 0e 03

[	LD DE , FCB_FEXT] Z80:11cyc, R800:3cyc
0002e6: 11 91 07

[FL2 :]
	label address: 0x0002e9

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
0002e9: cd 4f 02

[	CP A , 32] Z80:8cyc, R800:2cyc
0002ec: fe 20

[	JP Z , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002ee: ca 5d 02

[	LD [ DE ] , A] Z80:8cyc, R800:4cyc
0002f1: 12

[	INC DE] Z80:7cyc, R800:1cyc
0002f2: 13

[	INC B] Z80:5cyc, R800:1cyc
0002f3: 04

[	DEC B] Z80:5cyc, R800:1cyc
0002f4: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0002f5: c8

[	DEC C] Z80:5cyc, R800:1cyc
0002f6: 0d

[	JP Z , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002f7: ca 5d 02

[	JR FL2] Z80:13cyc, R800:3cyc
0002fa: 18 ed

[OPTION_A :]
	label address: 0x0002fc

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
0002fc: cd 4f 02

[	SUB A , 48] Z80:8cyc, R800:2cyc
0002ff: d6 30

[	CP A , 10] Z80:8cyc, R800:2cyc
000301: fe 0a

[	JP NC , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000303: d2 18 04

[	LD [ TARGET_BLOCK_FOR_SIMPLE64K ] , A] Z80:14cyc, R800:6cyc
000306: 32 82 07

[RETURN_TO_ARG_CHECK :]
	label address: 0x000309

[	INC B] Z80:5cyc, R800:1cyc
000309: 04

[	DEC B] Z80:5cyc, R800:1cyc
00030a: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00030b: c8

[	JP L1] Z80:11cyc, R800:5cyc
00030c: c3 5d 02

[OPTION_T :]
	label address: 0x00030f

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
00030f: cd 4f 02

[	SUB A , 48] Z80:8cyc, R800:2cyc
000312: d6 30

[	CP A , 3] Z80:8cyc, R800:2cyc
000314: fe 03

[	JP NC , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000316: d2 18 04

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
000319: 32 85 07

[	JR RETURN_TO_ARG_CHECK] Z80:13cyc, R800:3cyc
00031c: 18 eb

[	ENDSCOPE]
	Scope path: 

[	SCOPE DISPLAY_PROGRESS_BAR]
	Scope path: DISPLAY_PROGRESS_BAR:

[DISPLAY_PROGRESS_BAR ::]
	global label address: 0x00031e

[	PUSH AF] Z80:12cyc, R800:6cyc
00031e: f5

[	LD HL , PROGRESS] Z80:11cyc, R800:3cyc
00031f: 21 6f 03

[	LD DE , PROGRESS + 1] Z80:11cyc, R800:3cyc
000322: 11 70 03

[	LD BC , 16 - 1] Z80:11cyc, R800:3cyc
000325: 01 0f 00

[	LD A , 45] Z80:8cyc, R800:2cyc
000328: 3e 2d

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00032a: 77

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00032b: ed b0

[	POP AF] Z80:11cyc, R800:5cyc
00032d: f1

[	LD B , A] Z80:5cyc, R800:2cyc
00032e: 47

[	LD A , [ PROGRESS_MAX ]] Z80:14cyc, R800:6cyc
00032f: 3a 86 07

[	SUB A , B] Z80:5cyc, R800:1cyc
000332: 90

[	PUSH AF] Z80:12cyc, R800:6cyc
000333: f5

[	LD A , [ PROGRESS_MAX ]] Z80:14cyc, R800:6cyc
000334: 3a 86 07

[	LD E , A] Z80:5cyc, R800:2cyc
000337: 5f

[	POP AF] Z80:11cyc, R800:5cyc
000338: f1

[	LD C , A] Z80:5cyc, R800:2cyc
000339: 4f

[	XOR A , A] Z80:5cyc, R800:1cyc
00033a: af

[	LD D , A] Z80:5cyc, R800:2cyc
00033b: 57

[	LD B , 12] Z80:8cyc, R800:2cyc
00033c: 06 0c

[DIVIDE_LOOP :]
	label address: 0x00033e

[	SLA C] Z80:10cyc, R800:2cyc
00033e: cb 21

[	RLA] Z80:5cyc, R800:1cyc
000340: 17

[	SUB A , E] Z80:5cyc, R800:1cyc
000341: 93

[	JR NC , SKIP_ADD] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000342: 30 01

[	ADD A , E] Z80:5cyc, R800:1cyc
000344: 83

[SKIP_ADD :]
	label address: 0x000345

[	CCF] Z80:5cyc, R800:1cyc
000345: 3f

[	RL D] Z80:10cyc, R800:2cyc
000346: cb 12

[	DJNZ DIVIDE_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000348: 10 f4

[	LD A , D] Z80:5cyc, R800:2cyc
00034a: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
00034b: b7

[	JR Z , SKIP_FILL] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00034c: 28 0f

[	LD C , A] Z80:5cyc, R800:2cyc
00034e: 4f

[	LD HL , PROGRESS] Z80:11cyc, R800:3cyc
00034f: 21 6f 03

[	LD DE , PROGRESS + 1] Z80:11cyc, R800:3cyc
000352: 11 70 03

[	LD A , 35] Z80:8cyc, R800:2cyc
000355: 3e 23

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
000357: 77

[	DEC C] Z80:5cyc, R800:1cyc
000358: 0d

[	JR Z , SKIP_FILL] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000359: 28 02

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00035b: ed b0

[SKIP_FILL :]
	label address: 0x00035d

[	LD DE , PROGRESS_BAR] Z80:11cyc, R800:3cyc
00035d: 11 64 03

[	CALL PUTS] Z80:18cyc, R800:5cyc
000360: cd b3 07

[	RET] Z80:11cyc, R800:5cyc
000363: c9

[PROGRESS_BAR :]
	label address: 0x000364

[	DS "WRITE ROM |"]
000364: 57 52 49 54 45 20 52 4f
00036c: 4d 20 7c

[PROGRESS :]
	label address: 0x00036f

[SPACE 16 , 45]
	Allocate space: 16byte(s)
		Fill value: 45

[	DS "|\r"]
00037f: 7c 0d

[	DB 0]
000381: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE FILE_OPEN]
	Scope path: FILE_OPEN:

[FILE_OPEN ::]
	global label address: 0x000382

[	LD DE , FCB] Z80:11cyc, R800:3cyc
000382: 11 88 07

[	LD C , _FOPEN] Z80:8cyc, R800:2cyc
000385: 0e 0f

[	CALL BDOS] Z80:18cyc, R800:5cyc
000387: cd 05 00

[	OR A , A] Z80:5cyc, R800:1cyc
00038a: b7

[	LD DE , CANNOT_OPEN_MESSAGE] Z80:11cyc, R800:3cyc
00038b: 11 c9 03

[	JR NZ , PUT_ERROR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00038e: 20 34

[	LD HL , [ FCB_FILSIZ ]] Z80:17cyc, R800:7cyc
000390: 2a 98 07

[	LD A , H] Z80:5cyc, R800:2cyc
000393: 7c

[	AND A , 0X1F] Z80:8cyc, R800:2cyc
000394: e6 1f

[	OR A , L] Z80:5cyc, R800:1cyc
000396: b5

[	LD DE , IS_NOT_8KB_MESSAGE] Z80:11cyc, R800:3cyc
000397: 11 dd 03

[	JR NZ , PUT_ERROR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00039a: 20 28

[	LD A , H] Z80:5cyc, R800:2cyc
00039c: 7c

[	LD HL , [ FCB_FILSIZ + 2 ]] Z80:17cyc, R800:7cyc
00039d: 2a 9a 07

[	OR A , H] Z80:5cyc, R800:1cyc
0003a0: b4

[	OR A , L] Z80:5cyc, R800:1cyc
0003a1: b5

[	LD DE , IS_ZERO_MESSAGE] Z80:11cyc, R800:3cyc
0003a2: 11 07 04

[	JR Z , PUT_ERROR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0003a5: 28 1d

[	LD HL , [ FCB_FILSIZ + 1 ]] Z80:17cyc, R800:7cyc
0003a7: 2a 99 07

[	SRL H] Z80:10cyc, R800:2cyc
0003aa: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
0003ac: cb 1d

[	SRL H] Z80:10cyc, R800:2cyc
0003ae: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
0003b0: cb 1d

[	LD [ FILE_SIZE ] , HL] Z80:17cyc, R800:7cyc
0003b2: 22 7e 07

[	LD C , _SETDTA] Z80:8cyc, R800:2cyc
0003b5: 0e 1a

[	LD DE , 0X2000] Z80:11cyc, R800:3cyc
0003b7: 11 00 20

[	CALL BDOS] Z80:18cyc, R800:5cyc
0003ba: cd 05 00

[	LD HL , 1024] Z80:11cyc, R800:3cyc
0003bd: 21 00 04

[	LD [ FCB_S2 ] , HL] Z80:17cyc, R800:7cyc
0003c0: 22 96 07

[	RET] Z80:11cyc, R800:5cyc
0003c3: c9

[PUT_ERROR :]
	label address: 0x0003c4

[	CALL PUTS] Z80:18cyc, R800:5cyc
0003c4: cd b3 07

[	OR A , A] Z80:5cyc, R800:1cyc
0003c7: b7

[	RET] Z80:11cyc, R800:5cyc
0003c8: c9

[CANNOT_OPEN_MESSAGE :]
	label address: 0x0003c9

[	DS "Cannot open file.\r\n"]
0003c9: 43 61 6e 6e 6f 74 20 6f
0003d1: 70 65 6e 20 66 69 6c 65
0003d9: 2e 0d 0a

[	DB 0]
0003dc: 00

[IS_NOT_8KB_MESSAGE :]
	label address: 0x0003dd

[	DS "The file size is not a multiple of 8KB.\r\n"]
0003dd: 54 68 65 20 66 69 6c 65
0003e5: 20 73 69 7a 65 20 69 73
0003ed: 20 6e 6f 74 20 61 20 6d
0003f5: 75 6c 74 69 70 6c 65 20
0003fd: 6f 66 20 38 4b 42 2e 0d
000405: 0a

[	DB 0]
000406: 00

[IS_ZERO_MESSAGE :]
	label address: 0x000407

[	DS "File is empty.\r\n"]
000407: 46 69 6c 65 20 69 73 20
00040f: 65 6d 70 74 79 2e 0d 0a

[	DB 0]
000417: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE USAGE]
	Scope path: USAGE:

[USAGE ::]
	global label address: 0x000418

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000418: cd 2c 06

[	LD DE , USAGE_MESSAGE] Z80:11cyc, R800:3cyc
00041b: 11 26 04

[	CALL PUTS] Z80:18cyc, R800:5cyc
00041e: cd b3 07

[	LD C , _TERM0] Z80:8cyc, R800:2cyc
000421: 0e 00

[	JP BDOS] Z80:11cyc, R800:5cyc
000423: c3 05 00

[USAGE_MESSAGE :]
	label address: 0x000426

[	DS "Usage> WRTSST [options] file_name.rom\r\n"]
000426: 55 73 61 67 65 3e 20 57
00042e: 52 54 53 53 54 20 5b 6f
000436: 70 74 69 6f 6e 73 5d 20
00043e: 66 69 6c 65 5f 6e 61 6d
000446: 65 2e 72 6f 6d 0d 0a

[	DS " [options]\r\n"]
00044d: 20 5b 6f 70 74 69 6f 6e
000455: 73 5d 0d 0a

[	DS "  /Sx .... Set target slot for SLOT#x.\r\n"]
000459: 20 20 2f 53 78 20 2e 2e
000461: 2e 2e 20 53 65 74 20 74
000469: 61 72 67 65 74 20 73 6c
000471: 6f 74 20 66 6f 72 20 53
000479: 4c 4f 54 23 78 2e 0d 0a

[	DS "  /Sx-y .. Set target slot for SLOT#x-y.\r\n"]
000481: 20 20 2f 53 78 2d 79 20
000489: 2e 2e 20 53 65 74 20 74
000491: 61 72 67 65 74 20 73 6c
000499: 6f 74 20 66 6f 72 20 53
0004a1: 4c 4f 54 23 78 2d 79 2e
0004a9: 0d 0a

[	DS "  /Aa .... Set target address for S64K.\r\n"]
0004ab: 20 20 2f 41 61 20 2e 2e
0004b3: 2e 2e 20 53 65 74 20 74
0004bb: 61 72 67 65 74 20 61 64
0004c3: 64 72 65 73 73 20 66 6f
0004cb: 72 20 53 36 34 4b 2e 0d
0004d3: 0a

[	DS "    /A0 .. 0000h\r\n"]
0004d4: 20 20 20 20 2f 41 30 20
0004dc: 2e 2e 20 30 30 30 30 68
0004e4: 0d 0a

[	DS "    /A1 .. 2000h\r\n"]
0004e6: 20 20 20 20 2f 41 31 20
0004ee: 2e 2e 20 32 30 30 30 68
0004f6: 0d 0a

[	DS "     :\r\n"]
0004f8: 20 20 20 20 20 3a 0d 0a

[	DS "    /A7 .. E000h\r\n"]
000500: 20 20 20 20 2f 41 37 20
000508: 2e 2e 20 45 30 30 30 68
000510: 0d 0a

[	DS "  /Tt .... Specify cartridge type.\r\n"]
000512: 20 20 2f 54 74 20 2e 2e
00051a: 2e 2e 20 53 70 65 63 69
000522: 66 79 20 63 61 72 74 72
00052a: 69 64 67 65 20 74 79 70
000532: 65 2e 0d 0a

[	DS "    /T0 .. MegaSCC\r\n"]
000536: 20 20 20 20 2f 54 30 20
00053e: 2e 2e 20 4d 65 67 61 53
000546: 43 43 0d 0a

[	DS "    /T1 .. ESE-RC755\r\n"]
00054a: 20 20 20 20 2f 54 31 20
000552: 2e 2e 20 45 53 45 2d 52
00055a: 43 37 35 35 0d 0a

[	DS "    /T2 .. Simple64k\r\n"]
000560: 20 20 20 20 2f 54 32 20
000568: 2e 2e 20 53 69 6d 70 6c
000570: 65 36 34 6b 0d 0a

[	DB 0]
000576: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE DISPLAY_TARGET_SLOT]
	Scope path: DISPLAY_TARGET_SLOT:

[DISPLAY_TARGET_SLOT ::]
	global label address: 0x000577

[	LD DE , SLOT_MESSAGE] Z80:11cyc, R800:3cyc
000577: 11 9a 05

[	CALL PUTS] Z80:18cyc, R800:5cyc
00057a: cd b3 07

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00057d: 3a 7d 07

[	AND A , 3] Z80:8cyc, R800:2cyc
000580: e6 03

[	CALL PUTHEX_C] Z80:18cyc, R800:5cyc
000582: cd d1 07

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000585: 3a 7d 07

[	RLCA] Z80:5cyc, R800:1cyc
000588: 07

[	RET NC] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000589: d0

[	LD DE , BAR_MESSAGE] Z80:11cyc, R800:3cyc
00058a: 11 a0 05

[	CALL PUTS] Z80:18cyc, R800:5cyc
00058d: cd b3 07

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000590: 3a 7d 07

[	RRA] Z80:5cyc, R800:1cyc
000593: 1f

[	RRA] Z80:5cyc, R800:1cyc
000594: 1f

[	AND A , 3] Z80:8cyc, R800:2cyc
000595: e6 03

[	JP PUTHEX_C] Z80:11cyc, R800:5cyc
000597: c3 d1 07

[SLOT_MESSAGE :]
	label address: 0x00059a

[	DS "SLOT#"]
00059a: 53 4c 4f 54 23

[	DB 0]
00059f: 00

[BAR_MESSAGE :]
	label address: 0x0005a0

[	DS "-"]
0005a0: 2d

[	DB 0]
0005a1: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE DISPLAY_TARGET_FNAME]
	Scope path: DISPLAY_TARGET_FNAME:

[DISPLAY_TARGET_FNAME ::]
	global label address: 0x0005a2

[	LD DE , FNAME_MESSAGE] Z80:11cyc, R800:3cyc
0005a2: 11 dd 05

[	CALL PUTS] Z80:18cyc, R800:5cyc
0005a5: cd b3 07

[	LD HL , FCB_FNAME] Z80:11cyc, R800:3cyc
0005a8: 21 89 07

[	LD B , 8] Z80:8cyc, R800:2cyc
0005ab: 06 08

[L1 :]
	label address: 0x0005ad

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0005ad: 7e

[	INC HL] Z80:7cyc, R800:1cyc
0005ae: 23

[	CP A , 32] Z80:8cyc, R800:2cyc
0005af: fe 20

[	JR Z , S1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0005b1: 28 0c

[	PUSH HL] Z80:12cyc, R800:6cyc
0005b3: e5

[	PUSH BC] Z80:12cyc, R800:6cyc
0005b4: c5

[	LD E , A] Z80:5cyc, R800:2cyc
0005b5: 5f

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0005b6: 0e 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
0005b8: cd 05 00

[	POP BC] Z80:11cyc, R800:5cyc
0005bb: c1

[	POP HL] Z80:11cyc, R800:5cyc
0005bc: e1

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0005bd: 10 ee

[S1 :]
	label address: 0x0005bf

[	LD E , 46] Z80:8cyc, R800:2cyc
0005bf: 1e 2e

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0005c1: 0e 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
0005c3: cd 05 00

[	LD HL , FCB_FEXT] Z80:11cyc, R800:3cyc
0005c6: 21 91 07

[	LD B , 3] Z80:8cyc, R800:2cyc
0005c9: 06 03

[L2 :]
	label address: 0x0005cb

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0005cb: 7e

[	INC HL] Z80:7cyc, R800:1cyc
0005cc: 23

[	CP A , 32] Z80:8cyc, R800:2cyc
0005cd: fe 20

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0005cf: c8

[	PUSH HL] Z80:12cyc, R800:6cyc
0005d0: e5

[	PUSH BC] Z80:12cyc, R800:6cyc
0005d1: c5

[	LD E , A] Z80:5cyc, R800:2cyc
0005d2: 5f

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0005d3: 0e 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
0005d5: cd 05 00

[	POP BC] Z80:11cyc, R800:5cyc
0005d8: c1

[	POP HL] Z80:11cyc, R800:5cyc
0005d9: e1

[	DJNZ L2] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0005da: 10 ef

[	RET] Z80:11cyc, R800:5cyc
0005dc: c9

[FNAME_MESSAGE :]
	label address: 0x0005dd

[	DS "FILE NAME     :"]
0005dd: 46 49 4c 45 20 4e 41 4d
0005e5: 45 20 20 20 20 20 3a

[	DB 0]
0005ec: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE CHECK_TARGET_SLOT]
	Scope path: CHECK_TARGET_SLOT:

[CHECK_TARGET_SLOT ::]
	global label address: 0x0005ed

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0005ed: 3a 7d 07

[	INC A] Z80:5cyc, R800:1cyc
0005f0: 3c

[	JP NZ , CONSTANT_TARGET] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0005f1: c2 28 06

[	LD HL , EXPTBL] Z80:11cyc, R800:3cyc
0005f4: 21 c1 fc

[L1 :]
	label address: 0x0005f7

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0005f7: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
0005f8: b7

[	JP M , EXPANDED_SLOT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0005f9: fa 0a 06

[BASIC_SLOT :]
	label address: 0x0005fc

[	LD A , L] Z80:5cyc, R800:2cyc
0005fc: 7d

[	SUB A , EXPTBL & 255] Z80:8cyc, R800:2cyc
0005fd: d6 c1

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
0005ff: 32 7d 07

[	PUSH HL] Z80:12cyc, R800:6cyc
000602: e5

[	CALL DETECT_TARGET] Z80:18cyc, R800:5cyc
000603: cd 3e 06

[	POP HL] Z80:11cyc, R800:5cyc
000606: e1

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000607: c8

[	JR NEXT_SLOT] Z80:13cyc, R800:3cyc
000608: 18 14

[EXPANDED_SLOT :]
	label address: 0x00060a

[	OR A , 0X80] Z80:8cyc, R800:2cyc
00060a: f6 80

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
00060c: 32 7d 07

[	PUSH HL] Z80:12cyc, R800:6cyc
00060f: e5

[	CALL DETECT_TARGET] Z80:18cyc, R800:5cyc
000610: cd 3e 06

[	POP HL] Z80:11cyc, R800:5cyc
000613: e1

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000614: c8

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000615: 3a 7d 07

[	ADD A , 0X04] Z80:8cyc, R800:2cyc
000618: c6 04

[	CP A , 0X90] Z80:8cyc, R800:2cyc
00061a: fe 90

[	JR C , EXPANDED_SLOT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00061c: 38 ec

[NEXT_SLOT :]
	label address: 0x00061e

[	LD A , L] Z80:5cyc, R800:2cyc
00061e: 7d

[	INC A] Z80:5cyc, R800:1cyc
00061f: 3c

[	LD L , A] Z80:5cyc, R800:2cyc
000620: 6f

[	CP A , ( EXPTBL & 255 ) + 4] Z80:8cyc, R800:2cyc
000621: fe c5

[	JR C , L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000623: 38 d2

[	XOR A , A] Z80:5cyc, R800:1cyc
000625: af

[	INC A] Z80:5cyc, R800:1cyc
000626: 3c

[	RET] Z80:11cyc, R800:5cyc
000627: c9

[CONSTANT_TARGET :]
	label address: 0x000628

[	DEC A] Z80:5cyc, R800:1cyc
000628: 3d

[	JP DETECT_TARGET] Z80:11cyc, R800:5cyc
000629: c3 3e 06

[	ENDSCOPE]
	Scope path: 

[	SCOPE RESTORE_DOS_SLOT]
	Scope path: RESTORE_DOS_SLOT:

[RESTORE_DOS_SLOT ::]
	global label address: 0x00062c

[	LD A , [ RAMAD1 ]] Z80:14cyc, R800:6cyc
00062c: 3a 42 f3

[	LD H , 0X40] Z80:8cyc, R800:2cyc
00062f: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000631: cd 24 00

[	LD A , [ RAMAD2 ]] Z80:14cyc, R800:6cyc
000634: 3a 43 f3

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000637: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000639: cd 24 00

[	EI] Z80:5cyc, R800:1cyc
00063c: fb

[	RET] Z80:11cyc, R800:5cyc
00063d: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE DETECT_TARGET]
	Scope path: DETECT_TARGET:

[DETECT_TARGET ::]
	global label address: 0x00063e

[	LD A , [ ROM_TYPE ]] Z80:14cyc, R800:6cyc
00063e: 3a 85 07

[	INC A] Z80:5cyc, R800:1cyc
000641: 3c

[	JR Z , CHECK_ALL] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000642: 28 08

[	DEC A] Z80:5cyc, R800:1cyc
000644: 3d

[	JR Z , CHECK_MEGASCC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000645: 28 0d

[	DEC A] Z80:5cyc, R800:1cyc
000647: 3d

[	JR Z , CHECK_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000648: 28 14

[	JR CHECK_SIMPLE64K] Z80:13cyc, R800:3cyc
00064a: 18 1c

[CHECK_ALL :]
	label address: 0x00064c

[	CALL CHECK_MEGASCC] Z80:18cyc, R800:5cyc
00064c: cd 54 06

[	CALL CHECK_RC755] Z80:18cyc, R800:5cyc
00064f: cd 5e 06

[	JR CHECK_SIMPLE64K] Z80:13cyc, R800:3cyc
000652: 18 14

[CHECK_MEGASCC :]
	label address: 0x000654

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000654: 3a 7d 07

[	CALL IS_SLOT_SCC] Z80:18cyc, R800:5cyc
000657: cd be 08

[	JP Z , DETECT_SCC] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00065a: ca 72 06

[	RET] Z80:11cyc, R800:5cyc
00065d: c9

[CHECK_RC755 :]
	label address: 0x00065e

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00065e: 3a 7d 07

[	CALL IS_SLOT_RC755] Z80:18cyc, R800:5cyc
000661: cd 12 0a

[	JP Z , DETECT_RC755] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000664: ca 80 06

[	RET] Z80:11cyc, R800:5cyc
000667: c9

[CHECK_SIMPLE64K :]
	label address: 0x000668

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000668: 3a 7d 07

[	CALL IS_SLOT_SIMPLE64K] Z80:18cyc, R800:5cyc
00066b: cd 56 0b

[	JP Z , DETECT_SIMPLE64K] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00066e: ca 8e 06

[	RET] Z80:11cyc, R800:5cyc
000671: c9

[DETECT_SCC :]
	label address: 0x000672

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000672: 3a 7d 07

[	CALL SETUP_SLOT_SCC] Z80:18cyc, R800:5cyc
000675: cd f4 08

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000678: c0

[	XOR A , A] Z80:5cyc, R800:1cyc
000679: af

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
00067a: 32 85 07

[	JP COMMON_PROCESS] Z80:11cyc, R800:5cyc
00067d: c3 9c 06

[DETECT_RC755 :]
	label address: 0x000680

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000680: 3a 7d 07

[	CALL SETUP_SLOT_RC755] Z80:18cyc, R800:5cyc
000683: cd 80 0a

[	LD A , 1] Z80:8cyc, R800:2cyc
000686: 3e 01

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
000688: 32 85 07

[	JP COMMON_PROCESS] Z80:11cyc, R800:5cyc
00068b: c3 9c 06

[DETECT_SIMPLE64K :]
	label address: 0x00068e

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00068e: 3a 7d 07

[	CALL SETUP_SLOT_SIMPLE64K] Z80:18cyc, R800:5cyc
000691: cd 90 0b

[	LD A , 2] Z80:8cyc, R800:2cyc
000694: 3e 02

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
000696: 32 85 07

[	JP COMMON_PROCESS] Z80:11cyc, R800:5cyc
000699: c3 9c 06

[COMMON_PROCESS :]
	label address: 0x00069c

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
00069c: cd 2c 06

[	LD DE , MANUFACTURE_ID_MESSAGE] Z80:11cyc, R800:3cyc
00069f: 11 00 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006a2: cd b3 07

[	LD A , [ MANUFACTURE_ID ]] Z80:14cyc, R800:6cyc
0006a5: 3a 83 07

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
0006a8: cd 3b 08

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006ab: cd b3 07

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
0006ae: cd b0 07

[	LD DE , DEVICE_ID_MESSAGE] Z80:11cyc, R800:3cyc
0006b1: 11 10 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006b4: cd b3 07

[	LD A , [ DEVICE_ID ]] Z80:14cyc, R800:6cyc
0006b7: 3a 84 07

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
0006ba: cd 51 08

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006bd: cd b3 07

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
0006c0: cd b0 07

[	LD DE , CARTRIDGE_TYPE_MESSAGE] Z80:11cyc, R800:3cyc
0006c3: 11 20 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006c6: cd b3 07

[	LD HL , CARTRIDGE_TYPE_TABLE] Z80:11cyc, R800:3cyc
0006c9: 21 77 07

[	LD A , [ ROM_TYPE ]] Z80:14cyc, R800:6cyc
0006cc: 3a 85 07

[	ADD A , A] Z80:5cyc, R800:1cyc
0006cf: 87

[	LD E , A] Z80:5cyc, R800:2cyc
0006d0: 5f

[	LD D , 0] Z80:8cyc, R800:2cyc
0006d1: 16 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0006d3: 19

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
0006d4: 5e

[	INC HL] Z80:7cyc, R800:1cyc
0006d5: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
0006d6: 56

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006d7: cd b3 07

[	LD DE , FILE_SIZE_MESSAGE] Z80:11cyc, R800:3cyc
0006da: 11 30 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006dd: cd b3 07

[	LD HL , [ FILE_SIZE ]] Z80:17cyc, R800:7cyc
0006e0: 2a 7e 07

[	CALL PUTDEC] Z80:18cyc, R800:5cyc
0006e3: cd f0 07

[	LD DE , KB_MESSAGE] Z80:11cyc, R800:3cyc
0006e6: 11 50 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006e9: cd b3 07

[	LD DE , ROM_SIZE_MESSAGE] Z80:11cyc, R800:3cyc
0006ec: 11 40 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006ef: cd b3 07

[	LD HL , [ ROM_SIZE ]] Z80:17cyc, R800:7cyc
0006f2: 2a 80 07

[	CALL PUTDEC] Z80:18cyc, R800:5cyc
0006f5: cd f0 07

[	LD DE , KB_MESSAGE] Z80:11cyc, R800:3cyc
0006f8: 11 50 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006fb: cd b3 07

[	XOR A , A] Z80:5cyc, R800:1cyc
0006fe: af

[	RET] Z80:11cyc, R800:5cyc
0006ff: c9

[MANUFACTURE_ID_MESSAGE :]
	label address: 0x000700

[	DS "MANUFACTURE ID:"]
000700: 4d 41 4e 55 46 41 43 54
000708: 55 52 45 20 49 44 3a

[	DB 0]
00070f: 00

[DEVICE_ID_MESSAGE :]
	label address: 0x000710

[	DS "DEVICE ID     :"]
000710: 44 45 56 49 43 45 20 49
000718: 44 20 20 20 20 20 3a

[	DB 0]
00071f: 00

[CARTRIDGE_TYPE_MESSAGE :]
	label address: 0x000720

[	DS "CARTRIDGE TYPE:"]
000720: 43 41 52 54 52 49 44 47
000728: 45 20 54 59 50 45 3a

[	DB 0]
00072f: 00

[FILE_SIZE_MESSAGE :]
	label address: 0x000730

[	DS "FILE SIZE     :"]
000730: 46 49 4c 45 20 53 49 5a
000738: 45 20 20 20 20 20 3a

[	DB 0]
00073f: 00

[ROM_SIZE_MESSAGE :]
	label address: 0x000740

[	DS "ROM SIZE      :"]
000740: 52 4f 4d 20 53 49 5a 45
000748: 20 20 20 20 20 20 3a

[	DB 0]
00074f: 00

[KB_MESSAGE :]
	label address: 0x000750

[	DS "KB\r\n"]
000750: 4b 42 0d 0a

[	DB 0]
000754: 00

[MEGA_SCC_MESSAGE :]
	label address: 0x000755

[	DS "MegaSCC\r\n"]
000755: 4d 65 67 61 53 43 43 0d
00075d: 0a

[	DB 0]
00075e: 00

[RC755_MESSAGE :]
	label address: 0x00075f

[	DS "ESE-RC755\r\n"]
00075f: 45 53 45 2d 52 43 37 35
000767: 35 0d 0a

[	DB 0]
00076a: 00

[SIMPLE64K_MESSAGE :]
	label address: 0x00076b

[	DS "Simple64K\r\n"]
00076b: 53 69 6d 70 6c 65 36 34
000773: 4b 0d 0a

[	DB 0]
000776: 00

[CARTRIDGE_TYPE_TABLE :]
	label address: 0x000777

[	DW MEGA_SCC_MESSAGE]
000777: 55 07

[	DW RC755_MESSAGE]
000779: 5f 07

[	DW SIMPLE64K_MESSAGE]
00077b: 6b 07

[	ENDSCOPE]
	Scope path: 

[TARGET_SLOT ::]
	global label address: 0x00077d

[	DB 0XFF]
00077d: ff

[FILE_SIZE ::]
	global label address: 0x00077e

[	DW 0]
00077e: 00 00

[ROM_SIZE ::]
	global label address: 0x000780

[	DW 0]
000780: 00 00

[TARGET_BLOCK_FOR_SIMPLE64K :]
	label address: 0x000782

[	DB 255]
000782: ff

[MANUFACTURE_ID ::]
	global label address: 0x000783

[	DB 0]
000783: 00

[DEVICE_ID ::]
	global label address: 0x000784

[	DB 0]
000784: 00

[ROM_TYPE ::]
	global label address: 0x000785

[	DB 255]
000785: ff

[PROGRESS_MAX ::]
	global label address: 0x000786

[	DB 0]
000786: 00

[BANK_BACK :]
	label address: 0x000787

[	DB 0]
000787: 00

[FCB ::]
	global label address: 0x000788

[FCB_DR ::]
	global label address: 0x000788

[	DB 0]
000788: 00

[FCB_FNAME ::]
	global label address: 0x000789

[	DS "        "]
000789: 20 20 20 20 20 20 20 20

[FCB_FEXT ::]
	global label address: 0x000791

[	DS "   "]
000791: 20 20 20

[FCB_EX ::]
	global label address: 0x000794

[	DB 0]
000794: 00

[FCB_S1 ::]
	global label address: 0x000795

[	DB 0]
000795: 00

[FCB_S2 ::]
	global label address: 0x000796

[	DB 0]
000796: 00

[FCB_RC ::]
	global label address: 0x000797

[	DB 0]
000797: 00

[FCB_FILSIZ ::]
	global label address: 0x000798

[	DW 0 , 0]
000798: 00 00 00 00

[FCB_DATE ::]
	global label address: 0x00079c

[	DW 0]
00079c: 00 00

[FCB_TIME ::]
	global label address: 0x00079e

[	DW 0]
00079e: 00 00

[FCB_DEVID ::]
	global label address: 0x0007a0

[	DB 0]
0007a0: 00

[FCB_DIRLOC ::]
	global label address: 0x0007a1

[	DB 0]
0007a1: 00

[FCB_STRCLS ::]
	global label address: 0x0007a2

[	DW 0]
0007a2: 00 00

[FCB_CLRCLS ::]
	global label address: 0x0007a4

[	DW 0]
0007a4: 00 00

[FCB_CLSOFF ::]
	global label address: 0x0007a6

[	DW 0]
0007a6: 00 00

[FCB_CR ::]
	global label address: 0x0007a8

[	DB 0]
0007a8: 00

[FCB_RN ::]
	global label address: 0x0007a9

[	DW 0 , 0]
0007a9: 00 00 00 00

[	INCLUDE ".//stdio.asm"] begin
[	SCOPE PUTS_CRLF]
	Scope path: PUTS_CRLF:

[CRLF :]
	label address: 0x0007ad

[	DS "\r\n"]
0007ad: 0d 0a

[	DB 0]
0007af: 00

[PUTS_CRLF ::]
	global label address: 0x0007b0

[	LD DE , CRLF] Z80:11cyc, R800:3cyc
0007b0: 11 ad 07

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTS]
	Scope path: PUTS:

[PUTS ::]
	global label address: 0x0007b3

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
0007b3: 1a

[	INC DE] Z80:7cyc, R800:1cyc
0007b4: 13

[	OR A , A] Z80:5cyc, R800:1cyc
0007b5: b7

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0007b6: c8

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0007b7: 0e 06

[	PUSH DE] Z80:12cyc, R800:6cyc
0007b9: d5

[	LD E , A] Z80:5cyc, R800:2cyc
0007ba: 5f

[	CALL BDOS] Z80:18cyc, R800:5cyc
0007bb: cd 05 00

[	POP DE] Z80:11cyc, R800:5cyc
0007be: d1

[	JR PUTS] Z80:13cyc, R800:3cyc
0007bf: 18 f2

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTHEX16]
	Scope path: PUTHEX16:

[PUTHEX16 ::]
	global label address: 0x0007c1

[	PUSH HL] Z80:12cyc, R800:6cyc
0007c1: e5

[	LD A , H] Z80:5cyc, R800:2cyc
0007c2: 7c

[	CALL PUTHEX8] Z80:18cyc, R800:5cyc
0007c3: cd c8 07

[	POP HL] Z80:11cyc, R800:5cyc
0007c6: e1

[	LD A , L] Z80:5cyc, R800:2cyc
0007c7: 7d

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTHEX8]
	Scope path: PUTHEX8:

[PUTHEX8 ::]
	global label address: 0x0007c8

[	PUSH AF] Z80:12cyc, R800:6cyc
0007c8: f5

[	RRCA] Z80:5cyc, R800:1cyc
0007c9: 0f

[	RRCA] Z80:5cyc, R800:1cyc
0007ca: 0f

[	RRCA] Z80:5cyc, R800:1cyc
0007cb: 0f

[	RRCA] Z80:5cyc, R800:1cyc
0007cc: 0f

[	CALL PUTHEX_C] Z80:18cyc, R800:5cyc
0007cd: cd d1 07

[	POP AF] Z80:11cyc, R800:5cyc
0007d0: f1

[PUTHEX_C ::]
	global label address: 0x0007d1

[	AND A , 0X0F] Z80:8cyc, R800:2cyc
0007d1: e6 0f

[	LD HL , HEX_CHARACTERS] Z80:11cyc, R800:3cyc
0007d3: 21 e0 07

[	LD D , 0] Z80:8cyc, R800:2cyc
0007d6: 16 00

[	LD E , A] Z80:5cyc, R800:2cyc
0007d8: 5f

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0007d9: 19

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
0007da: 5e

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0007db: 0e 06

[	JP BDOS] Z80:11cyc, R800:5cyc
0007dd: c3 05 00

[HEX_CHARACTERS :]
	label address: 0x0007e0

[	DS "0123456789ABCDEF"]
0007e0: 30 31 32 33 34 35 36 37
0007e8: 38 39 41 42 43 44 45 46

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTDEC]
	Scope path: PUTDEC:

[PUTDEC ::]
	global label address: 0x0007f0

[	LD BC , STR] Z80:11cyc, R800:3cyc
0007f0: 01 35 08

[	LD DE , 10000] Z80:11cyc, R800:3cyc
0007f3: 11 10 27

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
0007f6: cd 29 08

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
0007f9: 02

[	INC BC] Z80:7cyc, R800:1cyc
0007fa: 03

[	LD DE , 1000] Z80:11cyc, R800:3cyc
0007fb: 11 e8 03

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
0007fe: cd 29 08

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
000801: 02

[	INC BC] Z80:7cyc, R800:1cyc
000802: 03

[	LD DE , 100] Z80:11cyc, R800:3cyc
000803: 11 64 00

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
000806: cd 29 08

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
000809: 02

[	INC BC] Z80:7cyc, R800:1cyc
00080a: 03

[	LD DE , 10] Z80:11cyc, R800:3cyc
00080b: 11 0a 00

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
00080e: cd 29 08

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
000811: 02

[	INC BC] Z80:7cyc, R800:1cyc
000812: 03

[	LD DE , 1] Z80:11cyc, R800:3cyc
000813: 11 01 00

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
000816: cd 29 08

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
000819: 02

[	LD HL , STR] Z80:11cyc, R800:3cyc
00081a: 21 35 08

[	LD A , 48] Z80:8cyc, R800:2cyc
00081d: 3e 30

[ZERO_SKIP :]
	label address: 0x00081f

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00081f: be

[	JR NZ , ZERO_SKIP_EXIT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000820: 20 03

[	INC HL] Z80:7cyc, R800:1cyc
000822: 23

[	JR ZERO_SKIP] Z80:13cyc, R800:3cyc
000823: 18 fa

[ZERO_SKIP_EXIT :]
	label address: 0x000825

[	EX DE , HL] Z80:5cyc, R800:1cyc
000825: eb

[	JP PUTS] Z80:11cyc, R800:5cyc
000826: c3 b3 07

[COUNT_SUB :]
	label address: 0x000829

[	XOR A , A] Z80:5cyc, R800:1cyc
000829: af

[	LD A , 48] Z80:8cyc, R800:2cyc
00082a: 3e 30

[L1 :]
	label address: 0x00082c

[	SBC HL , DE] Z80:17cyc, R800:2cyc
00082c: ed 52

[	JR C , S1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00082e: 38 03

[	INC A] Z80:5cyc, R800:1cyc
000830: 3c

[	JR L1] Z80:13cyc, R800:3cyc
000831: 18 f9

[S1 :]
	label address: 0x000833

[	ADD HL , DE] Z80:12cyc, R800:1cyc
000833: 19

[	RET] Z80:11cyc, R800:5cyc
000834: c9

[STR :]
	label address: 0x000835

[	DS "00000"]
000835: 30 30 30 30 30

[	DB 0]
00083a: 00

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//stdio.asm"] end

[	INCLUDE ".//flashrom.asm"] begin
[	SCOPE GET_MANUFACTURE_NAME]
	Scope path: GET_MANUFACTURE_NAME:

[GET_MANUFACTURE_NAME ::]
	global label address: 0x00083b

[	CP A , MID_SST] Z80:8cyc, R800:2cyc
00083b: fe bf

[	LD DE , S_SST] Z80:11cyc, R800:3cyc
00083d: 11 45 08

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000840: c8

[	LD DE , S_UNKNOWN] Z80:11cyc, R800:3cyc
000841: 11 49 08

[	RET] Z80:11cyc, R800:5cyc
000844: c9

[S_SST :]
	label address: 0x000845

[	DS "SST"]
000845: 53 53 54

[	DB 0]
000848: 00

[S_UNKNOWN ::]
	global label address: 0x000849

[	DS "Unknown"]
000849: 55 6e 6b 6e 6f 77 6e

[	DB 0]
000850: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE GET_DEVICE_NAME]
	Scope path: GET_DEVICE_NAME:

[GET_DEVICE_NAME ::]
	global label address: 0x000851

[	LD HL , 512] Z80:11cyc, R800:3cyc
000851: 21 00 02

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
000854: 22 80 07

[	CP A , DID_SST39SF040] Z80:8cyc, R800:2cyc
000857: fe b7

[	LD DE , S_SST39SF040] Z80:11cyc, R800:3cyc
000859: 11 97 08

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00085c: c8

[	LD HL , 256] Z80:11cyc, R800:3cyc
00085d: 21 00 01

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
000860: 22 80 07

[	CP A , DID_SST39SF020A] Z80:8cyc, R800:2cyc
000863: fe b6

[	LD DE , S_SST39SF020A] Z80:11cyc, R800:3cyc
000865: 11 8b 08

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000868: c8

[	LD HL , 128] Z80:11cyc, R800:3cyc
000869: 21 80 00

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
00086c: 22 80 07

[	CP A , DID_SST39SF010A] Z80:8cyc, R800:2cyc
00086f: fe b5

[	LD DE , S_SST39SF010A] Z80:11cyc, R800:3cyc
000871: 11 7f 08

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000874: c8

[	LD HL , 0] Z80:11cyc, R800:3cyc
000875: 21 00 00

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
000878: 22 80 07

[	LD DE , S_UNKNOWN] Z80:11cyc, R800:3cyc
00087b: 11 49 08

[	RET] Z80:11cyc, R800:5cyc
00087e: c9

[S_SST39SF010A :]
	label address: 0x00087f

[	DS "SST39SF010A"]
00087f: 53 53 54 33 39 53 46 30
000887: 31 30 41

[	DB 0]
00088a: 00

[S_SST39SF020A :]
	label address: 0x00088b

[	DS "SST39SF020A"]
00088b: 53 53 54 33 39 53 46 30
000893: 32 30 41

[	DB 0]
000896: 00

[S_SST39SF040 :]
	label address: 0x000897

[	DS "SST39SF040"]
000897: 53 53 54 33 39 53 46 30
00089f: 34 30

[	DB 0]
0008a1: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_FLASH_COMMAND]
	Scope path: SETUP_FLASH_COMMAND:

[SETUP_FLASH_COMMAND ::]
	global label address: 0x0008a2

[	LD DE , JUMP_TABLE] Z80:11cyc, R800:3cyc
0008a2: 11 b2 08

[	LD BC , JUMP_TABLE_END - JUMP_TABLE] Z80:11cyc, R800:3cyc
0008a5: 01 0c 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
0008a8: ed b0

[	RET] Z80:11cyc, R800:5cyc
0008aa: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE IS_ROM]
	Scope path: IS_ROM:

[IS_ROM ::]
	global label address: 0x0008ab

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0008ab: 7e

[	CPL] Z80:5cyc, R800:1cyc
0008ac: 2f

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
0008ad: 77

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0008ae: be

[	CPL] Z80:5cyc, R800:1cyc
0008af: 2f

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
0008b0: 77

[	RET] Z80:11cyc, R800:5cyc
0008b1: c9

[	ENDSCOPE]
	Scope path: 

[JUMP_TABLE :]
	label address: 0x0008b2

[FLASH_CHIP_ERASE ::]
	global label address: 0x0008b2

[	JP 0] Z80:11cyc, R800:5cyc
0008b2: c3 00 00

[FLASH_WRITE_8KB ::]
	global label address: 0x0008b5

[	JP 0] Z80:11cyc, R800:5cyc
0008b5: c3 00 00

[FLASH_SET_BANK ::]
	global label address: 0x0008b8

[	JP 0] Z80:11cyc, R800:5cyc
0008b8: c3 00 00

[FLASH_GET_START_BANK ::]
	global label address: 0x0008bb

[	JP 0] Z80:11cyc, R800:5cyc
0008bb: c3 00 00

[JUMP_TABLE_END :]
	label address: 0x0008be

[	INCLUDE ".//flashrom.asm"] end

[	INCLUDE ".//scc.asm"] begin
[	SCOPE IS_SLOT_SCC]
	Scope path: IS_SLOT_SCC:

[IS_SLOT_SCC ::]
	global label address: 0x0008be

[	LD H , 0X80] Z80:8cyc, R800:2cyc
0008be: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0008c0: cd 24 00

[	LD A , 0X3F] Z80:8cyc, R800:2cyc
0008c3: 3e 3f

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
0008c5: 32 00 90

[	LD H , 0X98] Z80:8cyc, R800:2cyc
0008c8: 26 98

[	LD B , 0X80] Z80:8cyc, R800:2cyc
0008ca: 06 80

[L1 :]
	label address: 0x0008cc

[	DEC B] Z80:5cyc, R800:1cyc
0008cc: 05

[	LD L , B] Z80:5cyc, R800:2cyc
0008cd: 68

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
0008ce: cd ab 08

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0008d1: c0

[	INC B] Z80:5cyc, R800:1cyc
0008d2: 04

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0008d3: 10 f7

[	LD H , 0X80] Z80:8cyc, R800:2cyc
0008d5: 26 80

[L2 :]
	label address: 0x0008d7

[	DEC B] Z80:5cyc, R800:1cyc
0008d7: 05

[	LD L , B] Z80:5cyc, R800:2cyc
0008d8: 68

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
0008d9: cd ab 08

[	JR Z , NOT_SCC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0008dc: 28 13

[	INC B] Z80:5cyc, R800:1cyc
0008de: 04

[	DJNZ L2] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0008df: 10 f6

[	LD A , B] Z80:5cyc, R800:2cyc
0008e1: 78

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
0008e2: 32 00 90

[L3 :]
	label address: 0x0008e5

[	DEC B] Z80:5cyc, R800:1cyc
0008e5: 05

[	LD L , B] Z80:5cyc, R800:2cyc
0008e6: 68

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
0008e7: cd ab 08

[	JR Z , NOT_SCC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0008ea: 28 05

[	INC B] Z80:5cyc, R800:1cyc
0008ec: 04

[	DJNZ L3] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0008ed: 10 f6

[	XOR A , A] Z80:5cyc, R800:1cyc
0008ef: af

[	RET] Z80:11cyc, R800:5cyc
0008f0: c9

[NOT_SCC :]
	label address: 0x0008f1

[	XOR A , A] Z80:5cyc, R800:1cyc
0008f1: af

[	INC A] Z80:5cyc, R800:1cyc
0008f2: 3c

[	RET] Z80:11cyc, R800:5cyc
0008f3: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_SLOT_SCC]
	Scope path: SETUP_SLOT_SCC:

[SETUP_SLOT_SCC ::]
	global label address: 0x0008f4

[	PUSH AF] Z80:12cyc, R800:6cyc
0008f4: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
0008f5: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0008f7: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
0008fa: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
0008fb: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0008fd: cd 24 00

[	XOR A , A] Z80:5cyc, R800:1cyc
000900: af

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
000901: 32 00 50

[	LD [ SCC_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000904: 32 00 70

[	INC A] Z80:5cyc, R800:1cyc
000907: 3c

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
000908: 32 00 90

[	LD A , 6] Z80:8cyc, R800:2cyc
00090b: 3e 06

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
00090d: 32 00 b0

[	LD HL , SCC_FLASH_JUMP_TABLE] Z80:11cyc, R800:3cyc
000910: 21 4d 09

[	CALL SETUP_FLASH_COMMAND] Z80:18cyc, R800:5cyc
000913: cd a2 08

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000916: 21 00 40

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000919: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00091b: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00091e: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000920: 32 aa 8a

[	LD A , 0X90] Z80:8cyc, R800:2cyc
000923: 3e 90

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000925: 32 55 a5

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
000928: 5e

[	INC HL] Z80:7cyc, R800:1cyc
000929: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00092a: 56

[	LD [ MANUFACTURE_ID ] , DE] Z80:22cyc, R800:8cyc
00092b: ed 53 83 07

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00092f: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000931: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000934: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000936: 32 aa 8a

[	LD A , 0XF0] Z80:8cyc, R800:2cyc
000939: 3e f0

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00093b: 32 55 a5

[	LD A , [ MANUFACTURE_ID ]] Z80:14cyc, R800:6cyc
00093e: 3a 83 07

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
000941: cd 3b 08

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000944: c0

[	LD A , [ DEVICE_ID ]] Z80:14cyc, R800:6cyc
000945: 3a 84 07

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
000948: cd 51 08

[	XOR A , A] Z80:5cyc, R800:1cyc
00094b: af

[	RET] Z80:11cyc, R800:5cyc
00094c: c9

[SCC_FLASH_JUMP_TABLE :]
	label address: 0x00094d

[	JP SCC_FLASH_CHIP_ERASE] Z80:11cyc, R800:5cyc
00094d: c3 bb 09

[	JP SCC_FLASH_WRITE_8KB] Z80:11cyc, R800:5cyc
000950: c3 59 09

[	JP SCC_SET_BANK] Z80:11cyc, R800:5cyc
000953: c3 02 0a

[	JP SCC_GET_START_BANK] Z80:11cyc, R800:5cyc
000956: c3 06 0a

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_FLASH_WRITE_8KB]
	Scope path: SCC_FLASH_WRITE_8KB:

[SCC_FLASH_WRITE_8KB ::]
	global label address: 0x000959

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000959: 3a 7d 07

[	LD H , 0X40] Z80:8cyc, R800:2cyc
00095c: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
00095e: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000961: 3a 7d 07

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000964: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000966: cd 24 00

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000969: 3a 87 07

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
00096c: 32 00 50

[	LD A , 1] Z80:8cyc, R800:2cyc
00096f: 3e 01

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
000971: 32 00 90

[	LD A , 6] Z80:8cyc, R800:2cyc
000974: 3e 06

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000976: 32 00 b0

[	LD DE , 0X2000] Z80:11cyc, R800:3cyc
000979: 11 00 20

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
00097c: 21 00 40

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00097f: 01 00 20

[LOOP_OF_BC :]
	label address: 0x000982

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000982: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000984: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000987: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000989: 32 aa 8a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
00098c: 3e a0

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00098e: 32 55 a5

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
000991: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
000992: 77

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000993: 3a 87 07

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
000996: 32 00 50

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
000999: 1a

[	PUSH BC] Z80:12cyc, R800:6cyc
00099a: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
00099b: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x00099e

[	NOP] Z80:5cyc, R800:1cyc
00099e: 00

[	NOP] Z80:5cyc, R800:1cyc
00099f: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0009a0: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0009a1: 28 0b

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0009a3: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
0009a5: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0009a6: 20 f6

[WRITE_ERROR :]
	label address: 0x0009a8

[	POP BC] Z80:11cyc, R800:5cyc
0009a8: c1

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
0009a9: cd 2c 06

[	SCF] Z80:5cyc, R800:1cyc
0009ac: 37

[	RET] Z80:11cyc, R800:5cyc
0009ad: c9

[WRITE_COMPLETE :]
	label address: 0x0009ae

[	POP BC] Z80:11cyc, R800:5cyc
0009ae: c1

[	INC DE] Z80:7cyc, R800:1cyc
0009af: 13

[	INC HL] Z80:7cyc, R800:1cyc
0009b0: 23

[	DEC BC] Z80:7cyc, R800:1cyc
0009b1: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
0009b2: 78

[	OR A , C] Z80:5cyc, R800:1cyc
0009b3: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0009b4: 20 cc

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
0009b6: cd 2c 06

[	OR A , A] Z80:5cyc, R800:1cyc
0009b9: b7

[	RET] Z80:11cyc, R800:5cyc
0009ba: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_FLASH_CHIP_ERASE]
	Scope path: SCC_FLASH_CHIP_ERASE:

[SCC_FLASH_CHIP_ERASE ::]
	global label address: 0x0009bb

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0009bb: 3a 7d 07

[	LD H , 0X40] Z80:8cyc, R800:2cyc
0009be: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0009c0: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0009c3: 3a 7d 07

[	LD H , 0X80] Z80:8cyc, R800:2cyc
0009c6: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0009c8: cd 24 00

[	LD A , 1] Z80:8cyc, R800:2cyc
0009cb: 3e 01

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
0009cd: 32 00 90

[	LD A , 6] Z80:8cyc, R800:2cyc
0009d0: 3e 06

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
0009d2: 32 00 b0

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
0009d5: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0009d7: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
0009da: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
0009dc: 32 aa 8a

[	LD A , 0X80] Z80:8cyc, R800:2cyc
0009df: 3e 80

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0009e1: 32 55 a5

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
0009e4: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0009e6: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
0009e9: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
0009eb: 32 aa 8a

[	LD A , 0X10] Z80:8cyc, R800:2cyc
0009ee: 3e 10

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0009f0: 32 55 a5

[	LD HL , JIFFY] Z80:11cyc, R800:3cyc
0009f3: 21 9e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0009f6: 7e

[	ADD A , 10] Z80:8cyc, R800:2cyc
0009f7: c6 0a

[	EI] Z80:5cyc, R800:1cyc
0009f9: fb

[WAIT_L1 :]
	label address: 0x0009fa

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0009fa: be

[	JR NZ , WAIT_L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0009fb: 20 fd

[	DI] Z80:5cyc, R800:2cyc
0009fd: f3

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
0009fe: cd 2c 06

[	RET] Z80:11cyc, R800:5cyc
000a01: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_SET_BANK]
	Scope path: SCC_SET_BANK:

[SCC_SET_BANK ::]
	global label address: 0x000a02

[	LD [ BANK_BACK ] , A] Z80:14cyc, R800:6cyc
000a02: 32 87 07

[	RET] Z80:11cyc, R800:5cyc
000a05: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_GET_START_BANK]
	Scope path: SCC_GET_START_BANK:

[SCC_GET_START_BANK ::]
	global label address: 0x000a06

[	XOR A , A] Z80:5cyc, R800:1cyc
000a06: af

[	RET] Z80:11cyc, R800:5cyc
000a07: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_RESTORE_BANK]
	Scope path: SCC_RESTORE_BANK:

[SCC_RESTORE_BANK ::]
	global label address: 0x000a08

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000a08: 3a 87 07

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
000a0b: 32 00 50

[	RET] Z80:11cyc, R800:5cyc
000a0e: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//scc.asm"] end

[	INCLUDE ".//ese_rc755.asm"] begin
[	SCOPE IS_SLOT_RC755]
	Scope path: IS_SLOT_RC755:

[NOT_RC755 :]
	label address: 0x000a0f

[	XOR A , A] Z80:5cyc, R800:1cyc
000a0f: af

[	INC A] Z80:5cyc, R800:1cyc
000a10: 3c

[	RET] Z80:11cyc, R800:5cyc
000a11: c9

[IS_SLOT_RC755 ::]
	global label address: 0x000a12

[	PUSH AF] Z80:12cyc, R800:6cyc
000a12: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000a13: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000a15: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
000a18: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000a19: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000a1b: cd 24 00

[	LD HL , 0X5000] Z80:11cyc, R800:3cyc
000a1e: 21 00 50

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000a21: cd ab 08

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a24: 28 e9

[	LD HL , 0X7000] Z80:11cyc, R800:3cyc
000a26: 21 00 70

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000a29: cd ab 08

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a2c: 28 e1

[	LD HL , 0X9000] Z80:11cyc, R800:3cyc
000a2e: 21 00 90

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000a31: cd ab 08

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a34: 28 d9

[	LD HL , 0XB000] Z80:11cyc, R800:3cyc
000a36: 21 00 b0

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000a39: cd ab 08

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a3c: 28 d1

[	XOR A , A] Z80:5cyc, R800:1cyc
000a3e: af

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000a3f: 32 00 60

[	LD A , RC755_FLASH] Z80:8cyc, R800:2cyc
000a42: 3e 80

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000a44: 32 00 a0

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000a47: 21 00 40

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000a4a: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000a4c: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000a4f: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000a51: 32 aa 4a

[	LD A , 0X90] Z80:8cyc, R800:2cyc
000a54: 3e 90

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000a56: 32 55 55

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
000a59: 5e

[	INC HL] Z80:7cyc, R800:1cyc
000a5a: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
000a5b: 56

[	LD [ MANUFACTURE_ID ] , DE] Z80:22cyc, R800:8cyc
000a5c: ed 53 83 07

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000a60: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000a62: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000a65: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000a67: 32 aa 4a

[	LD A , 0XF0] Z80:8cyc, R800:2cyc
000a6a: 3e f0

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000a6c: 32 55 55

[	LD A , 0X03] Z80:8cyc, R800:2cyc
000a6f: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000a71: 32 00 a0

[	LD A , E] Z80:5cyc, R800:2cyc
000a74: 7b

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
000a75: cd 3b 08

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000a78: c0

[	LD A , [ MANUFACTURE_ID + 1 ]] Z80:14cyc, R800:6cyc
000a79: 3a 84 07

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
000a7c: cd 51 08

[	RET] Z80:11cyc, R800:5cyc
000a7f: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_SLOT_RC755]
	Scope path: SETUP_SLOT_RC755:

[SETUP_SLOT_RC755 ::]
	global label address: 0x000a80

[	PUSH AF] Z80:12cyc, R800:6cyc
000a80: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000a81: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000a83: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
000a86: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000a87: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000a89: cd 24 00

[	LD HL , RC755_FLASH_JUMP_TABLE] Z80:11cyc, R800:3cyc
000a8c: 21 94 0a

[	CALL SETUP_FLASH_COMMAND] Z80:18cyc, R800:5cyc
000a8f: cd a2 08

[	XOR A , A] Z80:5cyc, R800:1cyc
000a92: af

[	RET] Z80:11cyc, R800:5cyc
000a93: c9

[RC755_FLASH_JUMP_TABLE :]
	label address: 0x000a94

[	JP RC755_FLASH_CHIP_ERASE] Z80:11cyc, R800:5cyc
000a94: c3 02 0b

[	JP RC755_FLASH_WRITE_8KB] Z80:11cyc, R800:5cyc
000a97: c3 a0 0a

[	JP RC755_SET_BANK] Z80:11cyc, R800:5cyc
000a9a: c3 49 0b

[	JP RC755_GET_START_BANK] Z80:11cyc, R800:5cyc
000a9d: c3 4d 0b

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_FLASH_WRITE_8KB]
	Scope path: RC755_FLASH_WRITE_8KB:

[RC755_FLASH_WRITE_8KB ::]
	global label address: 0x000aa0

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000aa0: 3a 7d 07

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000aa3: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000aa5: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000aa8: 3a 7d 07

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000aab: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000aad: cd 24 00

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000ab0: 3a 87 07

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000ab3: 32 00 60

[	LD DE , 0X2000] Z80:11cyc, R800:3cyc
000ab6: 11 00 20

[	LD HL , 0X6000] Z80:11cyc, R800:3cyc
000ab9: 21 00 60

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
000abc: 01 00 20

[	LD A , RC755_FLASH] Z80:8cyc, R800:2cyc
000abf: 3e 80

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000ac1: 32 00 a0

[LOOP_OF_BC :]
	label address: 0x000ac4

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000ac4: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000ac6: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000ac9: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000acb: 32 aa 4a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
000ace: 3e a0

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000ad0: 32 55 55

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
000ad3: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
000ad4: 77

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000ad5: 3a 87 07

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000ad8: 32 00 60

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
000adb: 1a

[	PUSH BC] Z80:12cyc, R800:6cyc
000adc: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
000add: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x000ae0

[	NOP] Z80:5cyc, R800:1cyc
000ae0: 00

[	NOP] Z80:5cyc, R800:1cyc
000ae1: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
000ae2: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000ae3: 28 0b

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000ae5: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
000ae7: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000ae8: 20 f6

[WRITE_ERROR :]
	label address: 0x000aea

[	POP BC] Z80:11cyc, R800:5cyc
000aea: c1

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000aeb: cd 2c 06

[	SCF] Z80:5cyc, R800:1cyc
000aee: 37

[	RET] Z80:11cyc, R800:5cyc
000aef: c9

[WRITE_COMPLETE :]
	label address: 0x000af0

[	POP BC] Z80:11cyc, R800:5cyc
000af0: c1

[	INC DE] Z80:7cyc, R800:1cyc
000af1: 13

[	INC HL] Z80:7cyc, R800:1cyc
000af2: 23

[	DEC BC] Z80:7cyc, R800:1cyc
000af3: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
000af4: 78

[	OR A , C] Z80:5cyc, R800:1cyc
000af5: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000af6: 20 cc

[	LD A , 0X03] Z80:8cyc, R800:2cyc
000af8: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000afa: 32 00 a0

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000afd: cd 2c 06

[	OR A , A] Z80:5cyc, R800:1cyc
000b00: b7

[	RET] Z80:11cyc, R800:5cyc
000b01: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_FLASH_CHIP_ERASE]
	Scope path: RC755_FLASH_CHIP_ERASE:

[RC755_FLASH_CHIP_ERASE ::]
	global label address: 0x000b02

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000b02: 3a 7d 07

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000b05: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000b07: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000b0a: 3a 7d 07

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000b0d: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000b0f: cd 24 00

[	LD A , RC755_FLASH] Z80:8cyc, R800:2cyc
000b12: 3e 80

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000b14: 32 00 a0

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000b17: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000b19: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000b1c: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000b1e: 32 aa 4a

[	LD A , 0X80] Z80:8cyc, R800:2cyc
000b21: 3e 80

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000b23: 32 55 55

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000b26: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000b28: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000b2b: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000b2d: 32 aa 4a

[	LD A , 0X10] Z80:8cyc, R800:2cyc
000b30: 3e 10

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000b32: 32 55 55

[	LD HL , JIFFY] Z80:11cyc, R800:3cyc
000b35: 21 9e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000b38: 7e

[	ADD A , 10] Z80:8cyc, R800:2cyc
000b39: c6 0a

[	EI] Z80:5cyc, R800:1cyc
000b3b: fb

[WAIT_L1 :]
	label address: 0x000b3c

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
000b3c: be

[	JR NZ , WAIT_L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000b3d: 20 fd

[	DI] Z80:5cyc, R800:2cyc
000b3f: f3

[	LD A , 0X03] Z80:8cyc, R800:2cyc
000b40: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000b42: 32 00 a0

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000b45: cd 2c 06

[	RET] Z80:11cyc, R800:5cyc
000b48: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_SET_BANK]
	Scope path: RC755_SET_BANK:

[RC755_SET_BANK ::]
	global label address: 0x000b49

[	LD [ BANK_BACK ] , A] Z80:14cyc, R800:6cyc
000b49: 32 87 07

[	RET] Z80:11cyc, R800:5cyc
000b4c: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_GET_START_BANK]
	Scope path: RC755_GET_START_BANK:

[RC755_GET_START_BANK ::]
	global label address: 0x000b4d

[	XOR A , A] Z80:5cyc, R800:1cyc
000b4d: af

[	RET] Z80:11cyc, R800:5cyc
000b4e: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_RESTORE_BANK]
	Scope path: RC755_RESTORE_BANK:

[RC755_RESTORE_BANK ::]
	global label address: 0x000b4f

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000b4f: 3a 87 07

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000b52: 32 00 60

[	RET] Z80:11cyc, R800:5cyc
000b55: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//ese_rc755.asm"] end

[	INCLUDE ".//simple64k.asm"] begin
[	SCOPE IS_SLOT_SIMPLE64K]
	Scope path: IS_SLOT_SIMPLE64K:

[IS_SLOT_SIMPLE64K ::]
	global label address: 0x000b56

[	OR A , A] Z80:5cyc, R800:1cyc
000b56: b7

[	JP M , NOT_SUPPORT_EXTENDED_SLOT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000b57: fa 8d 0b

[	PUSH AF] Z80:12cyc, R800:6cyc
000b5a: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000b5b: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000b5d: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
000b60: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000b61: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000b63: cd 24 00

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000b66: 21 00 40

[	LD DE , 0X0100] Z80:11cyc, R800:3cyc
000b69: 11 00 01

[	LD B , 0X80] Z80:8cyc, R800:2cyc
000b6c: 06 80

[L1 :]
	label address: 0x000b6e

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000b6e: cd ab 08

[	JR Z , NOT_SIMPLE64K] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000b71: 28 1a

[	ADD HL , DE] Z80:12cyc, R800:1cyc
000b73: 19

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000b74: 10 f8

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000b76: cd 2c 06

[	CALL TRANSFER_TO_PAGE2] Z80:18cyc, R800:5cyc
000b79: cd da 0b

[	CALL SIMPLE64K_P2_GET_ID] Z80:18cyc, R800:5cyc
000b7c: cd 20 a0

[	LD A , [ MANUFACTURE_ID ]] Z80:14cyc, R800:6cyc
000b7f: 3a 83 07

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
000b82: cd 3b 08

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000b85: c0

[	LD A , [ MANUFACTURE_ID + 1 ]] Z80:14cyc, R800:6cyc
000b86: 3a 84 07

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
000b89: cd 51 08

[	RET] Z80:11cyc, R800:5cyc
000b8c: c9

[NOT_SIMPLE64K :]
	label address: 0x000b8d

[NOT_SUPPORT_EXTENDED_SLOT :]
	label address: 0x000b8d

[	XOR A , A] Z80:5cyc, R800:1cyc
000b8d: af

[	INC A] Z80:5cyc, R800:1cyc
000b8e: 3c

[	RET] Z80:11cyc, R800:5cyc
000b8f: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_SLOT_SIMPLE64K]
	Scope path: SETUP_SLOT_SIMPLE64K:

[SETUP_SLOT_SIMPLE64K ::]
	global label address: 0x000b90

[	LD A , 64] Z80:8cyc, R800:2cyc
000b90: 3e 40

[	LD [ ROM_SIZE ] , A] Z80:14cyc, R800:6cyc
000b92: 32 80 07

[	LD HL , SIMPLE64K_FLASH_JUMP_TABLE] Z80:11cyc, R800:3cyc
000b95: 21 9d 0b

[	CALL SETUP_FLASH_COMMAND] Z80:18cyc, R800:5cyc
000b98: cd a2 08

[	XOR A , A] Z80:5cyc, R800:1cyc
000b9b: af

[	RET] Z80:11cyc, R800:5cyc
000b9c: c9

[SIMPLE64K_FLASH_JUMP_TABLE :]
	label address: 0x000b9d

[	JP SIMPLE64K_P2_FLASH_CHIP_ERASE] Z80:11cyc, R800:5cyc
000b9d: c3 5c a0

[	JP SIMPLE64K_FLASH_WRITE_8KB] Z80:11cyc, R800:5cyc
000ba0: c3 e6 0b

[	JP SIMPLE64K_SET_BANK] Z80:11cyc, R800:5cyc
000ba3: c3 a9 0b

[	JP SIMPLE64K_GET_START_BANK] Z80:11cyc, R800:5cyc
000ba6: c3 ad 0b

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_SET_BANK]
	Scope path: SIMPLE64K_SET_BANK:

[SIMPLE64K_SET_BANK ::]
	global label address: 0x000ba9

[	LD [ BANK_BACK ] , A] Z80:14cyc, R800:6cyc
000ba9: 32 87 07

[	RET] Z80:11cyc, R800:5cyc
000bac: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_GET_START_BANK]
	Scope path: SIMPLE64K_GET_START_BANK:

[SIMPLE64K_GET_START_BANK ::]
	global label address: 0x000bad

[	LD A , H] Z80:5cyc, R800:2cyc
000bad: 7c

[	OR A , A] Z80:5cyc, R800:1cyc
000bae: b7

[	SCF] Z80:5cyc, R800:1cyc
000baf: 37

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000bb0: c0

[	LD A , L] Z80:5cyc, R800:2cyc
000bb1: 7d

[	CP A , 65] Z80:8cyc, R800:2cyc
000bb2: fe 41

[	CCF] Z80:5cyc, R800:1cyc
000bb4: 3f

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000bb5: d8

[	LD A , [ TARGET_BLOCK_FOR_SIMPLE64K ]] Z80:14cyc, R800:6cyc
000bb6: 3a 82 07

[	INC A] Z80:5cyc, R800:1cyc
000bb9: 3c

[	JR NZ , TARGET_ADDRESS_REQUEST] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000bba: 20 11

[	LD A , L] Z80:5cyc, R800:2cyc
000bbc: 7d

[	CP A , 33] Z80:8cyc, R800:2cyc
000bbd: fe 21

[	JR C , FILE_UNDER_32KB] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000bbf: 38 05

[FILE_33KB_TO_64KB :]
	label address: 0x000bc1

[	XOR A , A] Z80:5cyc, R800:1cyc
000bc1: af

[	LD [ TARGET_BLOCK_FOR_SIMPLE64K ] , A] Z80:14cyc, R800:6cyc
000bc2: 32 82 07

[	RET] Z80:11cyc, R800:5cyc
000bc5: c9

[FILE_UNDER_32KB :]
	label address: 0x000bc6

[	LD A , 2] Z80:8cyc, R800:2cyc
000bc6: 3e 02

[	LD [ TARGET_BLOCK_FOR_SIMPLE64K ] , A] Z80:14cyc, R800:6cyc
000bc8: 32 82 07

[	OR A , A] Z80:5cyc, R800:1cyc
000bcb: b7

[	RET] Z80:11cyc, R800:5cyc
000bcc: c9

[TARGET_ADDRESS_REQUEST :]
	label address: 0x000bcd

[	DEC A] Z80:5cyc, R800:1cyc
000bcd: 3d

[	LD B , A] Z80:5cyc, R800:2cyc
000bce: 47

[	LD A , L] Z80:5cyc, R800:2cyc
000bcf: 7d

[	RRCA] Z80:5cyc, R800:1cyc
000bd0: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000bd1: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000bd2: 0f

[	ADD A , B] Z80:5cyc, R800:1cyc
000bd3: 80

[	CP A , 9] Z80:8cyc, R800:2cyc
000bd4: fe 09

[	CCF] Z80:5cyc, R800:1cyc
000bd6: 3f

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000bd7: d8

[	LD A , B] Z80:5cyc, R800:2cyc
000bd8: 78

[	RET] Z80:11cyc, R800:5cyc
000bd9: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE TRANSFER_TO_PAGE2]
	Scope path: TRANSFER_TO_PAGE2:

[TRANSFER_TO_PAGE2 ::]
	global label address: 0x000bda

[	LD HL , TRANSFER_TO_PAGE2_START] Z80:11cyc, R800:3cyc
000bda: 21 3c 0c

[	LD DE , PAGE2_START] Z80:11cyc, R800:3cyc
000bdd: 11 00 a0

[	LD BC , PAGE2_END - PAGE2_START] Z80:11cyc, R800:3cyc
000be0: 01 f7 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000be3: ed b0

[	RET] Z80:11cyc, R800:5cyc
000be5: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_FLASH_WRITE_8KB]
	Scope path: SIMPLE64K_FLASH_WRITE_8KB:

[SIMPLE64K_FLASH_WRITE_8KB ::]
	global label address: 0x000be6

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000be6: 3a 87 07

[	RRCA] Z80:5cyc, R800:1cyc
000be9: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000bea: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000beb: 0f

[	LD H , A] Z80:5cyc, R800:2cyc
000bec: 67

[	LD L , 0] Z80:8cyc, R800:2cyc
000bed: 2e 00

[	CP A , 0X80] Z80:8cyc, R800:2cyc
000bef: fe 80

[	JR Z , PAGE3] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000bf1: 28 08

[	CP A , 0XA0] Z80:8cyc, R800:2cyc
000bf3: fe a0

[	JR Z , PAGE3] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000bf5: 28 04

[PAGE2 :]
	label address: 0x000bf7

[	CALL SIMPLE64K_P2_FLASH_WRITE_8KB] Z80:18cyc, R800:5cyc
000bf7: cd 9a a0

[	RET] Z80:11cyc, R800:5cyc
000bfa: c9

[PAGE3 :]
	label address: 0x000bfb

[	DI] Z80:5cyc, R800:2cyc
000bfb: f3

[	EXX] Z80:5cyc, R800:1cyc
000bfc: d9

[	LD HL , 0XC000] Z80:11cyc, R800:3cyc
000bfd: 21 00 c0

[	LD DE , 0X4000] Z80:11cyc, R800:3cyc
000c00: 11 00 40

[	LD BC , 0X4000] Z80:11cyc, R800:3cyc
000c03: 01 00 40

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000c06: ed b0

[	LD HL , TRANSFER_TO_PAGE3_START] Z80:11cyc, R800:3cyc
000c08: 21 33 0d

[	LD DE , PAGE3_START] Z80:11cyc, R800:3cyc
000c0b: 11 00 e0

[	LD BC , PAGE3_END - PAGE3_START] Z80:11cyc, R800:3cyc
000c0e: 01 5a 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000c11: ed b0

[	LD HL , 0X2000] Z80:11cyc, R800:3cyc
000c13: 21 00 20

[	LD DE , 0XC000] Z80:11cyc, R800:3cyc
000c16: 11 00 c0

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
000c19: 01 00 20

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000c1c: ed b0

[	EXX] Z80:5cyc, R800:1cyc
000c1e: d9

[	LD [ SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
000c1f: ed 73 3a 0c

[	LD SP , 0XFFFF] Z80:11cyc, R800:3cyc
000c23: 31 ff ff

[	CALL SIMPLE64K_P3_FLASH_WRITE_8KB] Z80:18cyc, R800:5cyc
000c26: cd 1e e0

[	LD SP , [ SAVE_SP ]] Z80:22cyc, R800:8cyc
000c29: ed 7b 3a 0c

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000c2d: 21 00 40

[	LD DE , 0XC000] Z80:11cyc, R800:3cyc
000c30: 11 00 c0

[	LD BC , 0X3FFF] Z80:11cyc, R800:3cyc
000c33: 01 ff 3f

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000c36: ed b0

[	EI] Z80:5cyc, R800:1cyc
000c38: fb

[	RET] Z80:11cyc, R800:5cyc
000c39: c9

[SAVE_SP :]
	label address: 0x000c3a

[	DW 0]
000c3a: 00 00

[	ENDSCOPE]
	Scope path: 

[TRANSFER_TO_PAGE2_START ::]
	global label address: 0x000c3c

[	ORG 0XA000]
	code address: 0x00a000

[PAGE2_START ::]
	global label address: 0x00a000

[	SCOPE SIMPLE64K_P2_SETUP_SLOT]
	Scope path: SIMPLE64K_P2_SETUP_SLOT:

[SIMPLE64K_P2_SETUP_SLOT ::]
	global label address: 0x00a000

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00a000: 3a 7d 07

[	AND A , 3] Z80:8cyc, R800:2cyc
00a003: e6 03

[	LD B , A] Z80:5cyc, R800:2cyc
00a005: 47

[	RLCA] Z80:5cyc, R800:1cyc
00a006: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a007: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a008: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a009: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00a00a: b0

[	RLCA] Z80:5cyc, R800:1cyc
00a00b: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a00c: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00a00d: b0

[	LD B , A] Z80:5cyc, R800:2cyc
00a00e: 47

[	IN A , [ PPI_PRIMARY_SLOT ]] Z80:12cyc, R800:10 or 9cyc
00a00f: db a8

[	LD [ P2_SAVE_PRIMARY ] , A] Z80:14cyc, R800:6cyc
00a011: 32 f6 a0

[	AND A , 0B00110000] Z80:8cyc, R800:2cyc
00a014: e6 30

[	OR A , B] Z80:5cyc, R800:1cyc
00a016: b0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00a017: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00a019: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P2_RESTORE_SLOT]
	Scope path: SIMPLE64K_P2_RESTORE_SLOT:

[SIMPLE64K_P2_RESTORE_SLOT ::]
	global label address: 0x00a01a

[	LD A , [ P2_SAVE_PRIMARY ]] Z80:14cyc, R800:6cyc
00a01a: 3a f6 a0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00a01d: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00a01f: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P2_GET_ID]
	Scope path: SIMPLE64K_P2_GET_ID:

[SIMPLE64K_P2_GET_ID ::]
	global label address: 0x00a020

[	DI] Z80:5cyc, R800:2cyc
00a020: f3

[	LD [ P2_SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
00a021: ed 73 f4 a0

[	LD SP , 0XBFFF] Z80:11cyc, R800:3cyc
00a025: 31 ff bf

[	CALL SIMPLE64K_P2_SETUP_SLOT] Z80:18cyc, R800:5cyc
00a028: cd 00 a0

[	LD HL , 0X0000] Z80:11cyc, R800:3cyc
00a02b: 21 00 00

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a02e: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a030: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a033: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a035: 32 aa 2a

[	LD A , 0X90] Z80:8cyc, R800:2cyc
00a038: 3e 90

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a03a: 32 55 55

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00a03d: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00a03e: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00a03f: 56

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a040: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a042: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a045: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a047: 32 aa 2a

[	LD A , 0XF0] Z80:8cyc, R800:2cyc
00a04a: 3e f0

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a04c: 32 55 55

[	CALL SIMPLE64K_P2_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00a04f: cd 1a a0

[	LD [ MANUFACTURE_ID ] , DE] Z80:22cyc, R800:8cyc
00a052: ed 53 83 07

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a056: ed 7b f4 a0

[	EI] Z80:5cyc, R800:1cyc
00a05a: fb

[	RET] Z80:11cyc, R800:5cyc
00a05b: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P2_FLASH_CHIP_ERASE]
	Scope path: SIMPLE64K_P2_FLASH_CHIP_ERASE:

[SIMPLE64K_P2_FLASH_CHIP_ERASE ::]
	global label address: 0x00a05c

[	DI] Z80:5cyc, R800:2cyc
00a05c: f3

[	LD [ P2_SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
00a05d: ed 73 f4 a0

[	LD SP , 0XBFFF] Z80:11cyc, R800:3cyc
00a061: 31 ff bf

[	CALL SIMPLE64K_P2_SETUP_SLOT] Z80:18cyc, R800:5cyc
00a064: cd 00 a0

[	LD HL , 0X0000] Z80:11cyc, R800:3cyc
00a067: 21 00 00

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a06a: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a06c: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a06f: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a071: 32 aa 2a

[	LD A , 0X80] Z80:8cyc, R800:2cyc
00a074: 3e 80

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a076: 32 55 55

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a079: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a07b: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a07e: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a080: 32 aa 2a

[	LD A , 0X10] Z80:8cyc, R800:2cyc
00a083: 3e 10

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a085: 32 55 55

[	CALL SIMPLE64K_P2_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00a088: cd 1a a0

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a08b: ed 7b f4 a0

[	LD HL , JIFFY] Z80:11cyc, R800:3cyc
00a08f: 21 9e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00a092: 7e

[	ADD A , 10] Z80:8cyc, R800:2cyc
00a093: c6 0a

[	EI] Z80:5cyc, R800:1cyc
00a095: fb

[WAIT_L1 :]
	label address: 0x00a096

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00a096: be

[	JR NZ , WAIT_L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a097: 20 fd

[	RET] Z80:11cyc, R800:5cyc
00a099: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P2_FLASH_WRITE_8KB]
	Scope path: SIMPLE64K_P2_FLASH_WRITE_8KB:

[SIMPLE64K_P2_FLASH_WRITE_8KB ::]
	global label address: 0x00a09a

[	DI] Z80:5cyc, R800:2cyc
00a09a: f3

[	LD [ P2_SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
00a09b: ed 73 f4 a0

[	LD SP , 0XBFFF] Z80:11cyc, R800:3cyc
00a09f: 31 ff bf

[	PUSH HL] Z80:12cyc, R800:6cyc
00a0a2: e5

[	LD HL , 0X2000] Z80:11cyc, R800:3cyc
00a0a3: 21 00 20

[	LD DE , 0X8000] Z80:11cyc, R800:3cyc
00a0a6: 11 00 80

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00a0a9: 01 00 20

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00a0ac: ed b0

[	CALL SIMPLE64K_P2_SETUP_SLOT] Z80:18cyc, R800:5cyc
00a0ae: cd 00 a0

[	POP HL] Z80:11cyc, R800:5cyc
00a0b1: e1

[	LD DE , 0X8000] Z80:11cyc, R800:3cyc
00a0b2: 11 00 80

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00a0b5: 01 00 20

[LOOP_OF_BC :]
	label address: 0x00a0b8

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a0b8: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a0ba: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a0bd: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a0bf: 32 aa 2a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
00a0c2: 3e a0

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a0c4: 32 55 55

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00a0c7: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00a0c8: 77

[	PUSH BC] Z80:12cyc, R800:6cyc
00a0c9: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
00a0ca: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x00a0cd

[	NOP] Z80:5cyc, R800:1cyc
00a0cd: 00

[	NOP] Z80:5cyc, R800:1cyc
00a0ce: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00a0cf: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0d0: 28 10

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0d2: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
00a0d4: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0d5: 20 f6

[WRITE_ERROR :]
	label address: 0x00a0d7

[	POP BC] Z80:11cyc, R800:5cyc
00a0d7: c1

[	CALL SIMPLE64K_P2_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00a0d8: cd 1a a0

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a0db: ed 7b f4 a0

[	EI] Z80:5cyc, R800:1cyc
00a0df: fb

[	SCF] Z80:5cyc, R800:1cyc
00a0e0: 37

[	RET] Z80:11cyc, R800:5cyc
00a0e1: c9

[WRITE_COMPLETE :]
	label address: 0x00a0e2

[	POP BC] Z80:11cyc, R800:5cyc
00a0e2: c1

[	INC DE] Z80:7cyc, R800:1cyc
00a0e3: 13

[	INC HL] Z80:7cyc, R800:1cyc
00a0e4: 23

[	DEC BC] Z80:7cyc, R800:1cyc
00a0e5: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
00a0e6: 78

[	OR A , C] Z80:5cyc, R800:1cyc
00a0e7: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0e8: 20 ce

[	CALL SIMPLE64K_P2_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00a0ea: cd 1a a0

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a0ed: ed 7b f4 a0

[	EI] Z80:5cyc, R800:1cyc
00a0f1: fb

[	OR A , A] Z80:5cyc, R800:1cyc
00a0f2: b7

[	RET] Z80:11cyc, R800:5cyc
00a0f3: c9

[	ENDSCOPE]
	Scope path: 

[P2_SAVE_SP ::]
	global label address: 0x00a0f4

[	DW 0]
00a0f4: 00 00

[P2_SAVE_PRIMARY ::]
	global label address: 0x00a0f6

[	DB 0]
00a0f6: 00

[PAGE2_END ::]
	global label address: 0x00a0f7

[	ORG TRANSFER_TO_PAGE2_START + PAGE2_END - PAGE2_START]
	code address: 0x000d33

[TRANSFER_TO_PAGE2_END ::]
	global label address: 0x000d33

[TRANSFER_TO_PAGE3_START ::]
	global label address: 0x000d33

[	ORG 0XE000]
	code address: 0x00e000

[PAGE3_START ::]
	global label address: 0x00e000

[	SCOPE SIMPLE64K_P3_SETUP_SLOT]
	Scope path: SIMPLE64K_P3_SETUP_SLOT:

[SIMPLE64K_P3_SETUP_SLOT ::]
	global label address: 0x00e000

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00e000: 3a 7d 07

[	AND A , 3] Z80:8cyc, R800:2cyc
00e003: e6 03

[	LD B , A] Z80:5cyc, R800:2cyc
00e005: 47

[	RLCA] Z80:5cyc, R800:1cyc
00e006: 07

[	RLCA] Z80:5cyc, R800:1cyc
00e007: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00e008: b0

[	RLCA] Z80:5cyc, R800:1cyc
00e009: 07

[	RLCA] Z80:5cyc, R800:1cyc
00e00a: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00e00b: b0

[	LD B , A] Z80:5cyc, R800:2cyc
00e00c: 47

[	IN A , [ PPI_PRIMARY_SLOT ]] Z80:12cyc, R800:10 or 9cyc
00e00d: db a8

[	LD [ P3_SAVE_PRIMARY ] , A] Z80:14cyc, R800:6cyc
00e00f: 32 59 e0

[	AND A , 0B11000000] Z80:8cyc, R800:2cyc
00e012: e6 c0

[	OR A , B] Z80:5cyc, R800:1cyc
00e014: b0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00e015: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00e017: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P3_RESTORE_SLOT]
	Scope path: SIMPLE64K_P3_RESTORE_SLOT:

[SIMPLE64K_P3_RESTORE_SLOT ::]
	global label address: 0x00e018

[	LD A , [ P3_SAVE_PRIMARY ]] Z80:14cyc, R800:6cyc
00e018: 3a 59 e0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00e01b: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00e01d: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P3_FLASH_WRITE_8KB]
	Scope path: SIMPLE64K_P3_FLASH_WRITE_8KB:

[SIMPLE64K_P3_FLASH_WRITE_8KB ::]
	global label address: 0x00e01e

[	CALL SIMPLE64K_P3_SETUP_SLOT] Z80:18cyc, R800:5cyc
00e01e: cd 00 e0

[	LD DE , 0XC000] Z80:11cyc, R800:3cyc
00e021: 11 00 c0

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00e024: 01 00 20

[LOOP_OF_BC :]
	label address: 0x00e027

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00e027: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00e029: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00e02c: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00e02e: 32 aa 2a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
00e031: 3e a0

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00e033: 32 55 55

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00e036: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00e037: 77

[	PUSH BC] Z80:12cyc, R800:6cyc
00e038: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
00e039: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x00e03c

[	NOP] Z80:5cyc, R800:1cyc
00e03c: 00

[	NOP] Z80:5cyc, R800:1cyc
00e03d: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00e03e: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e03f: 28 0b

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e041: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
00e043: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e044: 20 f6

[WRITE_ERROR :]
	label address: 0x00e046

[	POP BC] Z80:11cyc, R800:5cyc
00e046: c1

[	CALL SIMPLE64K_P3_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00e047: cd 18 e0

[	SCF] Z80:5cyc, R800:1cyc
00e04a: 37

[	RET] Z80:11cyc, R800:5cyc
00e04b: c9

[WRITE_COMPLETE :]
	label address: 0x00e04c

[	POP BC] Z80:11cyc, R800:5cyc
00e04c: c1

[	INC DE] Z80:7cyc, R800:1cyc
00e04d: 13

[	INC HL] Z80:7cyc, R800:1cyc
00e04e: 23

[	DEC BC] Z80:7cyc, R800:1cyc
00e04f: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
00e050: 78

[	OR A , C] Z80:5cyc, R800:1cyc
00e051: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e052: 20 d3

[	CALL SIMPLE64K_P3_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00e054: cd 18 e0

[	OR A , A] Z80:5cyc, R800:1cyc
00e057: b7

[	RET] Z80:11cyc, R800:5cyc
00e058: c9

[	ENDSCOPE]
	Scope path: 

[P3_SAVE_PRIMARY ::]
	global label address: 0x00e059

[	DB 0]
00e059: 00

[PAGE3_END ::]
	global label address: 0x00e05a

[	ORG TRANSFER_TO_PAGE3_START + PAGE3_END - PAGE3_START]
	code address: 0x000d8d

[TRANSFER_TO_PAGE3_END ::]
	global label address: 0x000d8d

[	INCLUDE ".//simple64k.asm"] end

<< label >>
BANK_BACK 1927 ( 0x787 )
BDOS 5 ( 0x5 )
CHECK_TARGET_SLOT 1517 ( 0x5ed )
CHECK_TARGET_SLOT:BASIC_SLOT 1532 ( 0x5fc )
CHECK_TARGET_SLOT:CONSTANT_TARGET 1576 ( 0x628 )
CHECK_TARGET_SLOT:EXPANDED_SLOT 1546 ( 0x60a )
CHECK_TARGET_SLOT:L1 1527 ( 0x5f7 )
CHECK_TARGET_SLOT:NEXT_SLOT 1566 ( 0x61e )
COMMAND_LINE_OPTIONS 595 ( 0x253 )
COMMAND_LINE_OPTIONS:FILE_EXT 737 ( 0x2e1 )
COMMAND_LINE_OPTIONS:FILE_NAME 693 ( 0x2b5 )
COMMAND_LINE_OPTIONS:FL1 708 ( 0x2c4 )
COMMAND_LINE_OPTIONS:FL2 745 ( 0x2e9 )
COMMAND_LINE_OPTIONS:GET_ONE 591 ( 0x24f )
COMMAND_LINE_OPTIONS:L1 605 ( 0x25d )
COMMAND_LINE_OPTIONS:L2 616 ( 0x268 )
COMMAND_LINE_OPTIONS:OPTION 620 ( 0x26c )
COMMAND_LINE_OPTIONS:OPTION_A 764 ( 0x2fc )
COMMAND_LINE_OPTIONS:OPTION_S 644 ( 0x284 )
COMMAND_LINE_OPTIONS:OPTION_T 783 ( 0x30f )
COMMAND_LINE_OPTIONS:RETURN_TO_ARG_CHECK 777 ( 0x309 )
DETECT_TARGET 1598 ( 0x63e )
DETECT_TARGET:CARTRIDGE_TYPE_MESSAGE 1824 ( 0x720 )
DETECT_TARGET:CARTRIDGE_TYPE_TABLE 1911 ( 0x777 )
DETECT_TARGET:CHECK_ALL 1612 ( 0x64c )
DETECT_TARGET:CHECK_MEGASCC 1620 ( 0x654 )
DETECT_TARGET:CHECK_RC755 1630 ( 0x65e )
DETECT_TARGET:CHECK_SIMPLE64K 1640 ( 0x668 )
DETECT_TARGET:COMMON_PROCESS 1692 ( 0x69c )
DETECT_TARGET:DETECT_RC755 1664 ( 0x680 )
DETECT_TARGET:DETECT_SCC 1650 ( 0x672 )
DETECT_TARGET:DETECT_SIMPLE64K 1678 ( 0x68e )
DETECT_TARGET:DEVICE_ID_MESSAGE 1808 ( 0x710 )
DETECT_TARGET:FILE_SIZE_MESSAGE 1840 ( 0x730 )
DETECT_TARGET:KB_MESSAGE 1872 ( 0x750 )
DETECT_TARGET:MANUFACTURE_ID_MESSAGE 1792 ( 0x700 )
DETECT_TARGET:MEGA_SCC_MESSAGE 1877 ( 0x755 )
DETECT_TARGET:RC755_MESSAGE 1887 ( 0x75f )
DETECT_TARGET:ROM_SIZE_MESSAGE 1856 ( 0x740 )
DETECT_TARGET:SIMPLE64K_MESSAGE 1899 ( 0x76b )
DEVICE_ID 1924 ( 0x784 )
DID_SST39SF010A 181 ( 0xb5 )
DID_SST39SF020A 182 ( 0xb6 )
DID_SST39SF040 183 ( 0xb7 )
DISPLAY_PROGRESS_BAR 798 ( 0x31e )
DISPLAY_PROGRESS_BAR:DIVIDE_LOOP 830 ( 0x33e )
DISPLAY_PROGRESS_BAR:PROGRESS 879 ( 0x36f )
DISPLAY_PROGRESS_BAR:PROGRESS_BAR 868 ( 0x364 )
DISPLAY_PROGRESS_BAR:SKIP_ADD 837 ( 0x345 )
DISPLAY_PROGRESS_BAR:SKIP_FILL 861 ( 0x35d )
DISPLAY_TARGET_FNAME 1442 ( 0x5a2 )
DISPLAY_TARGET_FNAME:FNAME_MESSAGE 1501 ( 0x5dd )
DISPLAY_TARGET_FNAME:L1 1453 ( 0x5ad )
DISPLAY_TARGET_FNAME:L2 1483 ( 0x5cb )
DISPLAY_TARGET_FNAME:S1 1471 ( 0x5bf )
DISPLAY_TARGET_SLOT 1399 ( 0x577 )
DISPLAY_TARGET_SLOT:BAR_MESSAGE 1440 ( 0x5a0 )
DISPLAY_TARGET_SLOT:SLOT_MESSAGE 1434 ( 0x59a )
ENASLT 36 ( 0x24 )
ENTRY_POINT 256 ( 0x100 )
ENTRY_POINT:BLOCK_MESSAGE 486 ( 0x1e6 )
ENTRY_POINT:BLOCK_WRITE_LOOP 357 ( 0x165 )
ENTRY_POINT:COMPLETED_MESSAGE 522 ( 0x20a )
ENTRY_POINT:ERASE_MESSAGE 502 ( 0x1f6 )
ENTRY_POINT:NOT_DETECTED 418 ( 0x1a2 )
ENTRY_POINT:NOT_DETECTED_MESSAGE 537 ( 0x219 )
ENTRY_POINT:OK_MESSAGE 517 ( 0x205 )
ENTRY_POINT:PUTS_AND_EXIT 407 ( 0x197 )
ENTRY_POINT:TITLE_MESSAGE 423 ( 0x1a7 )
ENTRY_POINT:WRITE_ERROR_MESSAGE 573 ( 0x23d )
EXPTBL 64705 ( 0xfcc1 )
FCB 1928 ( 0x788 )
FCB_CLRCLS 1956 ( 0x7a4 )
FCB_CLSOFF 1958 ( 0x7a6 )
FCB_CR 1960 ( 0x7a8 )
FCB_DATE 1948 ( 0x79c )
FCB_DEVID 1952 ( 0x7a0 )
FCB_DIRLOC 1953 ( 0x7a1 )
FCB_DR 1928 ( 0x788 )
FCB_EX 1940 ( 0x794 )
FCB_FEXT 1937 ( 0x791 )
FCB_FILSIZ 1944 ( 0x798 )
FCB_FNAME 1929 ( 0x789 )
FCB_RC 1943 ( 0x797 )
FCB_RN 1961 ( 0x7a9 )
FCB_S1 1941 ( 0x795 )
FCB_S2 1942 ( 0x796 )
FCB_STRCLS 1954 ( 0x7a2 )
FCB_TIME 1950 ( 0x79e )
FILE_OPEN 898 ( 0x382 )
FILE_OPEN:CANNOT_OPEN_MESSAGE 969 ( 0x3c9 )
FILE_OPEN:IS_NOT_8KB_MESSAGE 989 ( 0x3dd )
FILE_OPEN:IS_ZERO_MESSAGE 1031 ( 0x407 )
FILE_OPEN:PUT_ERROR 964 ( 0x3c4 )
FILE_SIZE 1918 ( 0x77e )
FLASH_CHIP_ERASE 2226 ( 0x8b2 )
FLASH_GET_START_BANK 2235 ( 0x8bb )
FLASH_SET_BANK 2232 ( 0x8b8 )
FLASH_WRITE_8KB 2229 ( 0x8b5 )
GET_DEVICE_NAME 2129 ( 0x851 )
GET_DEVICE_NAME:S_SST39SF010A 2175 ( 0x87f )
GET_DEVICE_NAME:S_SST39SF020A 2187 ( 0x88b )
GET_DEVICE_NAME:S_SST39SF040 2199 ( 0x897 )
GET_MANUFACTURE_NAME 2107 ( 0x83b )
GET_MANUFACTURE_NAME:S_SST 2117 ( 0x845 )
IS_ROM 2219 ( 0x8ab )
IS_SLOT_RC755 2578 ( 0xa12 )
IS_SLOT_RC755:NOT_RC755 2575 ( 0xa0f )
IS_SLOT_SCC 2238 ( 0x8be )
IS_SLOT_SCC:L1 2252 ( 0x8cc )
IS_SLOT_SCC:L2 2263 ( 0x8d7 )
IS_SLOT_SCC:L3 2277 ( 0x8e5 )
IS_SLOT_SCC:NOT_SCC 2289 ( 0x8f1 )
IS_SLOT_SIMPLE64K 2902 ( 0xb56 )
IS_SLOT_SIMPLE64K:L1 2926 ( 0xb6e )
IS_SLOT_SIMPLE64K:NOT_SIMPLE64K 2957 ( 0xb8d )
IS_SLOT_SIMPLE64K:NOT_SUPPORT_EXTENDED_SLOT 2957 ( 0xb8d )
JIFFY 64670 ( 0xfc9e )
JUMP_TABLE 2226 ( 0x8b2 )
JUMP_TABLE_END 2238 ( 0x8be )
MANUFACTURE_ID 1923 ( 0x783 )
MID_SST 191 ( 0xbf )
P2_SAVE_PRIMARY 41206 ( 0xa0f6 )
P2_SAVE_SP 41204 ( 0xa0f4 )
P3_SAVE_PRIMARY 57433 ( 0xe059 )
PAGE2_END 41207 ( 0xa0f7 )
PAGE2_START 40960 ( 0xa000 )
PAGE3_END 57434 ( 0xe05a )
PAGE3_START 57344 ( 0xe000 )
PPI_PRIMARY_SLOT 168 ( 0xa8 )
PROGRESS_MAX 1926 ( 0x786 )
PUTDEC 2032 ( 0x7f0 )
PUTDEC:COUNT_SUB 2089 ( 0x829 )
PUTDEC:L1 2092 ( 0x82c )
PUTDEC:S1 2099 ( 0x833 )
PUTDEC:STR 2101 ( 0x835 )
PUTDEC:ZERO_SKIP 2079 ( 0x81f )
PUTDEC:ZERO_SKIP_EXIT 2085 ( 0x825 )
PUTHEX16 1985 ( 0x7c1 )
PUTHEX8 1992 ( 0x7c8 )
PUTHEX8:HEX_CHARACTERS 2016 ( 0x7e0 )
PUTHEX_C 2001 ( 0x7d1 )
PUTS 1971 ( 0x7b3 )
PUTS_CRLF 1968 ( 0x7b0 )
PUTS_CRLF:CRLF 1965 ( 0x7ad )
RAMAD0 62273 ( 0xf341 )
RAMAD1 62274 ( 0xf342 )
RAMAD2 62275 ( 0xf343 )
RAMAD3 62276 ( 0xf344 )
RC755_BANK1_SEL 24576 ( 0x6000 )
RC755_BANK2_SEL 32768 ( 0x8000 )
RC755_BANK3_SEL 40960 ( 0xa000 )
RC755_CMD_2AAA 19114 ( 0x4aaa )
RC755_CMD_5555 21845 ( 0x5555 )
RC755_FLASH 128 ( 0x80 )
RC755_FLASH_CHIP_ERASE 2818 ( 0xb02 )
RC755_FLASH_CHIP_ERASE:WAIT_L1 2876 ( 0xb3c )
RC755_FLASH_WRITE_8KB 2720 ( 0xaa0 )
RC755_FLASH_WRITE_8KB:LOOP_OF_BC 2756 ( 0xac4 )
RC755_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 2784 ( 0xae0 )
RC755_FLASH_WRITE_8KB:WRITE_COMPLETE 2800 ( 0xaf0 )
RC755_FLASH_WRITE_8KB:WRITE_ERROR 2794 ( 0xaea )
RC755_GET_START_BANK 2893 ( 0xb4d )
RC755_RESTORE_BANK 2895 ( 0xb4f )
RC755_SET_BANK 2889 ( 0xb49 )
RESTORE_DOS_SLOT 1580 ( 0x62c )
ROM_SIZE 1920 ( 0x780 )
ROM_TYPE 1925 ( 0x785 )
SCC_BANK0_SEL 20480 ( 0x5000 )
SCC_BANK1_SEL 28672 ( 0x7000 )
SCC_BANK2_SEL 36864 ( 0x9000 )
SCC_BANK3_SEL 45056 ( 0xb000 )
SCC_CMD_2AAA 35498 ( 0x8aaa )
SCC_CMD_5555 42325 ( 0xa555 )
SCC_FLASH_CHIP_ERASE 2491 ( 0x9bb )
SCC_FLASH_CHIP_ERASE:WAIT_L1 2554 ( 0x9fa )
SCC_FLASH_WRITE_8KB 2393 ( 0x959 )
SCC_FLASH_WRITE_8KB:LOOP_OF_BC 2434 ( 0x982 )
SCC_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 2462 ( 0x99e )
SCC_FLASH_WRITE_8KB:WRITE_COMPLETE 2478 ( 0x9ae )
SCC_FLASH_WRITE_8KB:WRITE_ERROR 2472 ( 0x9a8 )
SCC_GET_START_BANK 2566 ( 0xa06 )
SCC_RESTORE_BANK 2568 ( 0xa08 )
SCC_SET_BANK 2562 ( 0xa02 )
SETUP_FLASH_COMMAND 2210 ( 0x8a2 )
SETUP_SLOT_RC755 2688 ( 0xa80 )
SETUP_SLOT_RC755:RC755_FLASH_JUMP_TABLE 2708 ( 0xa94 )
SETUP_SLOT_SCC 2292 ( 0x8f4 )
SETUP_SLOT_SCC:SCC_FLASH_JUMP_TABLE 2381 ( 0x94d )
SETUP_SLOT_SIMPLE64K 2960 ( 0xb90 )
SETUP_SLOT_SIMPLE64K:SIMPLE64K_FLASH_JUMP_TABLE 2973 ( 0xb9d )
SIMPLE64K_FLASH_WRITE_8KB 3046 ( 0xbe6 )
SIMPLE64K_FLASH_WRITE_8KB:PAGE2 3063 ( 0xbf7 )
SIMPLE64K_FLASH_WRITE_8KB:PAGE3 3067 ( 0xbfb )
SIMPLE64K_FLASH_WRITE_8KB:SAVE_SP 3130 ( 0xc3a )
SIMPLE64K_GET_START_BANK 2989 ( 0xbad )
SIMPLE64K_GET_START_BANK:FILE_33KB_TO_64KB 3009 ( 0xbc1 )
SIMPLE64K_GET_START_BANK:FILE_UNDER_32KB 3014 ( 0xbc6 )
SIMPLE64K_GET_START_BANK:TARGET_ADDRESS_REQUEST 3021 ( 0xbcd )
SIMPLE64K_P2_FLASH_CHIP_ERASE 41052 ( 0xa05c )
SIMPLE64K_P2_FLASH_CHIP_ERASE:WAIT_L1 41110 ( 0xa096 )
SIMPLE64K_P2_FLASH_WRITE_8KB 41114 ( 0xa09a )
SIMPLE64K_P2_FLASH_WRITE_8KB:LOOP_OF_BC 41144 ( 0xa0b8 )
SIMPLE64K_P2_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 41165 ( 0xa0cd )
SIMPLE64K_P2_FLASH_WRITE_8KB:WRITE_COMPLETE 41186 ( 0xa0e2 )
SIMPLE64K_P2_FLASH_WRITE_8KB:WRITE_ERROR 41175 ( 0xa0d7 )
SIMPLE64K_P2_GET_ID 40992 ( 0xa020 )
SIMPLE64K_P2_RESTORE_SLOT 40986 ( 0xa01a )
SIMPLE64K_P2_SETUP_SLOT 40960 ( 0xa000 )
SIMPLE64K_P3_FLASH_WRITE_8KB 57374 ( 0xe01e )
SIMPLE64K_P3_FLASH_WRITE_8KB:LOOP_OF_BC 57383 ( 0xe027 )
SIMPLE64K_P3_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 57404 ( 0xe03c )
SIMPLE64K_P3_FLASH_WRITE_8KB:WRITE_COMPLETE 57420 ( 0xe04c )
SIMPLE64K_P3_FLASH_WRITE_8KB:WRITE_ERROR 57414 ( 0xe046 )
SIMPLE64K_P3_RESTORE_SLOT 57368 ( 0xe018 )
SIMPLE64K_P3_SETUP_SLOT 57344 ( 0xe000 )
SIMPLE64K_SET_BANK 2985 ( 0xba9 )
SIMPLE_CMD_2AAA 10922 ( 0x2aaa )
SIMPLE_CMD_5555 21845 ( 0x5555 )
S_UNKNOWN 2121 ( 0x849 )
TARGET_BLOCK_FOR_SIMPLE64K 1922 ( 0x782 )
TARGET_SLOT 1917 ( 0x77d )
TRANSFER_TO_PAGE2 3034 ( 0xbda )
TRANSFER_TO_PAGE2_END 3379 ( 0xd33 )
TRANSFER_TO_PAGE2_START 3132 ( 0xc3c )
TRANSFER_TO_PAGE3_END 3469 ( 0xd8d )
TRANSFER_TO_PAGE3_START 3379 ( 0xd33 )
USAGE 1048 ( 0x418 )
USAGE:USAGE_MESSAGE 1062 ( 0x426 )
_DIRIO 6 ( 0x6 )
_FCLOSE 16 ( 0x10 )
_FOPEN 15 ( 0xf )
_RDBLK 39 ( 0x27 )
_SETDTA 26 ( 0x1a )
_STROUT 9 ( 0x9 )
_TERM0 0 ( 0x0 )
