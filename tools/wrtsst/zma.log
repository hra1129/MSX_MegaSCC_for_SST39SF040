Z80 Macro Assembler ZMA v1.0.15
=====================================================
Programmed by t.hara

<< code >>
[	ORG 0X100]
	code address: 0x000100

[	SCOPE ENTRY_POINT]
	Scope path: ENTRY_POINT:

[ENTRY_POINT ::]
	global label address: 0x000100

[	LD DE , TITLE_MESSAGE] Z80:11cyc, R800:3cyc
000100: 11 bc 01

[	CALL PUTS] Z80:18cyc, R800:5cyc
000103: cd 20 08

[	CALL COMMAND_LINE_OPTIONS] Z80:18cyc, R800:5cyc
000106: cd 6d 02

[	LD A , [ FCB_FNAME ]] Z80:14cyc, R800:6cyc
000109: 3a f6 07

[	CP A , 32] Z80:8cyc, R800:2cyc
00010c: fe 20

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00010e: ca 11 04

[	CALL DISPLAY_TARGET_FNAME] Z80:18cyc, R800:5cyc
000111: cd bc 05

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000114: cd 1d 08

[	CALL FILE_OPEN] Z80:18cyc, R800:5cyc
000117: cd 9c 03

[	JP Z , PUTS_AND_EXIT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00011a: ca a7 01

[	CALL CHECK_TARGET_SLOT] Z80:18cyc, R800:5cyc
00011d: cd 07 06

[	JP NZ , NOT_DETECTED] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000120: c2 b7 01

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000123: cd 4a 06

[	CALL DISPLAY_TARGET_SLOT] Z80:18cyc, R800:5cyc
000126: cd 91 05

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000129: cd 1d 08

[	LD DE , ERASE_MESSAGE] Z80:11cyc, R800:3cyc
00012c: 11 10 02

[	CALL PUTS] Z80:18cyc, R800:5cyc
00012f: cd 20 08

[	CALL FLASH_CHIP_ERASE] Z80:18cyc, R800:5cyc
000132: cd 1f 09

[	LD DE , OK_MESSAGE] Z80:11cyc, R800:3cyc
000135: 11 1f 02

[	CALL PUTS] Z80:18cyc, R800:5cyc
000138: cd 20 08

[	LD DE , BLOCK_MESSAGE] Z80:11cyc, R800:3cyc
00013b: 11 00 02

[	CALL PUTS] Z80:18cyc, R800:5cyc
00013e: cd 20 08

[	LD HL , [ FILE_SIZE ]] Z80:17cyc, R800:7cyc
000141: 2a eb 07

[	PUSH HL] Z80:12cyc, R800:6cyc
000144: e5

[	CALL FLASH_GET_START_BANK] Z80:18cyc, R800:5cyc
000145: cd 28 09

[	LD C , A] Z80:5cyc, R800:2cyc
000148: 4f

[	PUSH BC] Z80:12cyc, R800:6cyc
000149: c5

[	LD L , A] Z80:5cyc, R800:2cyc
00014a: 6f

[	LD H , 0] Z80:8cyc, R800:2cyc
00014b: 26 00

[	CALL PUTDEC] Z80:18cyc, R800:5cyc
00014d: cd 5d 08

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000150: cd 1d 08

[	POP BC] Z80:11cyc, R800:5cyc
000153: c1

[	POP HL] Z80:11cyc, R800:5cyc
000154: e1

[	PUSH HL] Z80:12cyc, R800:6cyc
000155: e5

[	SRL H] Z80:10cyc, R800:2cyc
000156: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
000158: cb 1d

[	SRL H] Z80:10cyc, R800:2cyc
00015a: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
00015c: cb 1d

[	SRL H] Z80:10cyc, R800:2cyc
00015e: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
000160: cb 1d

[	LD B , L] Z80:5cyc, R800:2cyc
000162: 45

[	LD A , L] Z80:5cyc, R800:2cyc
000163: 7d

[	LD [ PROGRESS_MAX ] , A] Z80:14cyc, R800:6cyc
000164: 32 f3 07

[	POP HL] Z80:11cyc, R800:5cyc
000167: e1

[BLOCK_WRITE_LOOP :]
	label address: 0x000168

[	LD A , C] Z80:5cyc, R800:2cyc
000168: 79

[	PUSH BC] Z80:12cyc, R800:6cyc
000169: c5

[	CALL FLASH_SET_BANK] Z80:18cyc, R800:5cyc
00016a: cd 25 09

[	LD A , B] Z80:5cyc, R800:2cyc
00016d: 78

[	CALL DISPLAY_PROGRESS_BAR] Z80:18cyc, R800:5cyc
00016e: cd 38 03

[	LD HL , NEW_DTA] Z80:11cyc, R800:3cyc
000171: 21 00 20

[	LD DE , NEW_DTA + 1] Z80:11cyc, R800:3cyc
000174: 11 01 20

[	LD BC , 8192 - 1] Z80:11cyc, R800:3cyc
000177: 01 ff 1f

[	LD [ HL ] , 0XFF] Z80:11cyc, R800:5cyc
00017a: 36 ff

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00017c: ed b0

[	LD C , _RDBLK] Z80:8cyc, R800:2cyc
00017e: 0e 27

[	LD DE , FCB] Z80:11cyc, R800:3cyc
000180: 11 f5 07

[	LD HL , 8] Z80:11cyc, R800:3cyc
000183: 21 08 00

[	CALL BDOS] Z80:18cyc, R800:5cyc
000186: cd 05 00

[	CALL FLASH_WRITE_8KB] Z80:18cyc, R800:5cyc
000189: cd 22 09

[	POP BC] Z80:11cyc, R800:5cyc
00018c: c1

[	LD DE , WRITE_ERROR_MESSAGE] Z80:11cyc, R800:3cyc
00018d: 11 57 02

[	JR C , PUTS_AND_EXIT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000190: 38 15

[	INC C] Z80:5cyc, R800:1cyc
000192: 0c

[	DJNZ BLOCK_WRITE_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000193: 10 d3

[	LD A , B] Z80:5cyc, R800:2cyc
000195: 78

[	CALL DISPLAY_PROGRESS_BAR] Z80:18cyc, R800:5cyc
000196: cd 38 03

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000199: cd 1d 08

[	LD C , _FCLOSE] Z80:8cyc, R800:2cyc
00019c: 0e 10

[	LD DE , FCB] Z80:11cyc, R800:3cyc
00019e: 11 f5 07

[	CALL BDOS] Z80:18cyc, R800:5cyc
0001a1: cd 05 00

[	LD DE , COMPLETED_MESSAGE] Z80:11cyc, R800:3cyc
0001a4: 11 24 02

[PUTS_AND_EXIT :]
	label address: 0x0001a7

[	PUSH DE] Z80:12cyc, R800:6cyc
0001a7: d5

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
0001a8: cd 4a 06

[	CALL FLASH_FINISH] Z80:18cyc, R800:5cyc
0001ab: cd 2b 09

[	POP DE] Z80:11cyc, R800:5cyc
0001ae: d1

[	CALL PUTS] Z80:18cyc, R800:5cyc
0001af: cd 20 08

[	LD C , _TERM0] Z80:8cyc, R800:2cyc
0001b2: 0e 00

[	JP BDOS] Z80:11cyc, R800:5cyc
0001b4: c3 05 00

[NOT_DETECTED :]
	label address: 0x0001b7

[	LD DE , NOT_DETECTED_MESSAGE] Z80:11cyc, R800:3cyc
0001b7: 11 33 02

[	JR PUTS_AND_EXIT] Z80:13cyc, R800:3cyc
0001ba: 18 eb

[TITLE_MESSAGE :]
	label address: 0x0001bc

[	DS "WRTSST [SST FlashROM Writer] v1.03\r\n"]
0001bc: 57 52 54 53 53 54 20 5b
0001c4: 53 53 54 20 46 6c 61 73
0001cc: 68 52 4f 4d 20 57 72 69
0001d4: 74 65 72 5d 20 76 31 2e
0001dc: 30 33 0d 0a

[	DS "Copyright (C)2022-2023 HRA!\r\n\r\n"]
0001e0: 43 6f 70 79 72 69 67 68
0001e8: 74 20 28 43 29 32 30 32
0001f0: 32 2d 32 30 32 33 20 48
0001f8: 52 41 21 0d 0a 0d 0a

[	DB 0]
0001ff: 00

[BLOCK_MESSAGE :]
	label address: 0x000200

[	DS "BLOCK#        :"]
000200: 42 4c 4f 43 4b 23 20 20
000208: 20 20 20 20 20 20 3a

[	DB 0]
00020f: 00

[ERASE_MESSAGE :]
	label address: 0x000210

[	DS "ERASE ROM ... "]
000210: 45 52 41 53 45 20 52 4f
000218: 4d 20 2e 2e 2e 20

[	DB 0]
00021e: 00

[OK_MESSAGE :]
	label address: 0x00021f

[	DS "OK\r\n"]
00021f: 4f 4b 0d 0a

[	DB 0]
000223: 00

[COMPLETED_MESSAGE :]
	label address: 0x000224

[	DS "\r\nCompleted.\r\n"]
000224: 0d 0a 43 6f 6d 70 6c 65
00022c: 74 65 64 2e 0d 0a

[	DB 0]
000232: 00

[NOT_DETECTED_MESSAGE :]
	label address: 0x000233

[	DS "Could not detect flash cartridge.\r\n"]
000233: 43 6f 75 6c 64 20 6e 6f
00023b: 74 20 64 65 74 65 63 74
000243: 20 66 6c 61 73 68 20 63
00024b: 61 72 74 72 69 64 67 65
000253: 2e 0d 0a

[	DB 0]
000256: 00

[WRITE_ERROR_MESSAGE :]
	label address: 0x000257

[	DS "\r\nWrite failed.\r\n"]
000257: 0d 0a 57 72 69 74 65 20
00025f: 66 61 69 6c 65 64 2e 0d
000267: 0a

[	DB 0]
000268: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE COMMAND_LINE_OPTIONS]
	Scope path: COMMAND_LINE_OPTIONS:

[GET_ONE :]
	label address: 0x000269

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000269: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00026a: 23

[	DEC B] Z80:5cyc, R800:1cyc
00026b: 05

[	RET] Z80:11cyc, R800:5cyc
00026c: c9

[COMMAND_LINE_OPTIONS ::]
	global label address: 0x00026d

[	LD HL , 0X0080] Z80:11cyc, R800:3cyc
00026d: 21 80 00

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000270: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
000271: b7

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000272: ca 11 04

[	LD B , A] Z80:5cyc, R800:2cyc
000275: 47

[	INC HL] Z80:7cyc, R800:1cyc
000276: 23

[L1 :]
	label address: 0x000277

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
000277: cd 69 02

[	CP A , 47] Z80:8cyc, R800:2cyc
00027a: fe 2f

[	JR Z , OPTION] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00027c: 28 08

[	CP A , 32] Z80:8cyc, R800:2cyc
00027e: fe 20

[	JR NZ , FILE_NAME] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000280: 20 4d

[L2 :]
	label address: 0x000282

[	INC B] Z80:5cyc, R800:1cyc
000282: 04

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000283: 10 f2

[	RET] Z80:11cyc, R800:5cyc
000285: c9

[OPTION :]
	label address: 0x000286

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
000286: cd 69 02

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000289: ca 11 04

[	CP A , 83] Z80:8cyc, R800:2cyc
00028c: fe 53

[	JP Z , OPTION_S] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00028e: ca 9e 02

[	CP A , 65] Z80:8cyc, R800:2cyc
000291: fe 41

[	JP Z , OPTION_A] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000293: ca 16 03

[	CP A , 84] Z80:8cyc, R800:2cyc
000296: fe 54

[	JP Z , OPTION_T] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000298: ca 29 03

[	JP USAGE] Z80:11cyc, R800:5cyc
00029b: c3 11 04

[OPTION_S :]
	label address: 0x00029e

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
00029e: cd 69 02

[	SUB A , 48] Z80:8cyc, R800:2cyc
0002a1: d6 30

[	CP A , 4] Z80:8cyc, R800:2cyc
0002a3: fe 04

[	JP NC , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002a5: d2 11 04

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
0002a8: 32 ea 07

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0002ab: 7e

[	CP A , 45] Z80:8cyc, R800:2cyc
0002ac: fe 2d

[	JP NZ , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002ae: c2 77 02

[	INC HL] Z80:7cyc, R800:1cyc
0002b1: 23

[	DEC B] Z80:5cyc, R800:1cyc
0002b2: 05

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002b3: ca 11 04

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
0002b6: cd 69 02

[	SUB A , 48] Z80:8cyc, R800:2cyc
0002b9: d6 30

[	CP A , 4] Z80:8cyc, R800:2cyc
0002bb: fe 04

[	JP NC , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002bd: d2 11 04

[	RLCA] Z80:5cyc, R800:1cyc
0002c0: 07

[	RLCA] Z80:5cyc, R800:1cyc
0002c1: 07

[	LD C , A] Z80:5cyc, R800:2cyc
0002c2: 4f

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0002c3: 3a ea 07

[	OR A , C] Z80:5cyc, R800:1cyc
0002c6: b1

[	OR A , 0X80] Z80:8cyc, R800:2cyc
0002c7: f6 80

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
0002c9: 32 ea 07

[	JP L1] Z80:11cyc, R800:5cyc
0002cc: c3 77 02

[FILE_NAME :]
	label address: 0x0002cf

[	LD A , [ FCB_FNAME ]] Z80:14cyc, R800:6cyc
0002cf: 3a f6 07

[	CP A , 32] Z80:8cyc, R800:2cyc
0002d2: fe 20

[	JP NZ , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002d4: c2 11 04

[	LD C , 8] Z80:8cyc, R800:2cyc
0002d7: 0e 08

[	LD DE , FCB_FNAME] Z80:11cyc, R800:3cyc
0002d9: 11 f6 07

[	DEC HL] Z80:7cyc, R800:1cyc
0002dc: 2b

[	INC B] Z80:5cyc, R800:1cyc
0002dd: 04

[FL1 :]
	label address: 0x0002de

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
0002de: cd 69 02

[	CP A , 46] Z80:8cyc, R800:2cyc
0002e1: fe 2e

[	JP Z , FILE_EXT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002e3: ca fb 02

[	CP A , 32] Z80:8cyc, R800:2cyc
0002e6: fe 20

[	JP Z , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002e8: ca 77 02

[	LD [ DE ] , A] Z80:8cyc, R800:4cyc
0002eb: 12

[	INC DE] Z80:7cyc, R800:1cyc
0002ec: 13

[	INC B] Z80:5cyc, R800:1cyc
0002ed: 04

[	DEC B] Z80:5cyc, R800:1cyc
0002ee: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0002ef: c8

[	DEC C] Z80:5cyc, R800:1cyc
0002f0: 0d

[	JR NZ , FL1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0002f1: 20 eb

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
0002f3: cd 69 02

[	CP A , 46] Z80:8cyc, R800:2cyc
0002f6: fe 2e

[	JP NZ , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002f8: c2 11 04

[FILE_EXT :]
	label address: 0x0002fb

[	INC B] Z80:5cyc, R800:1cyc
0002fb: 04

[	DEC B] Z80:5cyc, R800:1cyc
0002fc: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0002fd: c8

[	LD C , 3] Z80:8cyc, R800:2cyc
0002fe: 0e 03

[	LD DE , FCB_FEXT] Z80:11cyc, R800:3cyc
000300: 11 fe 07

[FL2 :]
	label address: 0x000303

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
000303: cd 69 02

[	CP A , 32] Z80:8cyc, R800:2cyc
000306: fe 20

[	JP Z , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000308: ca 77 02

[	LD [ DE ] , A] Z80:8cyc, R800:4cyc
00030b: 12

[	INC DE] Z80:7cyc, R800:1cyc
00030c: 13

[	INC B] Z80:5cyc, R800:1cyc
00030d: 04

[	DEC B] Z80:5cyc, R800:1cyc
00030e: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00030f: c8

[	DEC C] Z80:5cyc, R800:1cyc
000310: 0d

[	JP Z , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000311: ca 77 02

[	JR FL2] Z80:13cyc, R800:3cyc
000314: 18 ed

[OPTION_A :]
	label address: 0x000316

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
000316: cd 69 02

[	SUB A , 48] Z80:8cyc, R800:2cyc
000319: d6 30

[	CP A , 10] Z80:8cyc, R800:2cyc
00031b: fe 0a

[	JP NC , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00031d: d2 11 04

[	LD [ TARGET_BLOCK_FOR_SIMPLE_ROM ] , A] Z80:14cyc, R800:6cyc
000320: 32 ef 07

[RETURN_TO_ARG_CHECK :]
	label address: 0x000323

[	INC B] Z80:5cyc, R800:1cyc
000323: 04

[	DEC B] Z80:5cyc, R800:1cyc
000324: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000325: c8

[	JP L1] Z80:11cyc, R800:5cyc
000326: c3 77 02

[OPTION_T :]
	label address: 0x000329

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
000329: cd 69 02

[	SUB A , 48] Z80:8cyc, R800:2cyc
00032c: d6 30

[	CP A , 4] Z80:8cyc, R800:2cyc
00032e: fe 04

[	JP NC , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000330: d2 11 04

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
000333: 32 f2 07

[	JR RETURN_TO_ARG_CHECK] Z80:13cyc, R800:3cyc
000336: 18 eb

[	ENDSCOPE]
	Scope path: 

[	SCOPE DISPLAY_PROGRESS_BAR]
	Scope path: DISPLAY_PROGRESS_BAR:

[DISPLAY_PROGRESS_BAR ::]
	global label address: 0x000338

[	PUSH AF] Z80:12cyc, R800:6cyc
000338: f5

[	LD HL , PROGRESS] Z80:11cyc, R800:3cyc
000339: 21 89 03

[	LD DE , PROGRESS + 1] Z80:11cyc, R800:3cyc
00033c: 11 8a 03

[	LD BC , 16 - 1] Z80:11cyc, R800:3cyc
00033f: 01 0f 00

[	LD A , 45] Z80:8cyc, R800:2cyc
000342: 3e 2d

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
000344: 77

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000345: ed b0

[	POP AF] Z80:11cyc, R800:5cyc
000347: f1

[	LD B , A] Z80:5cyc, R800:2cyc
000348: 47

[	LD A , [ PROGRESS_MAX ]] Z80:14cyc, R800:6cyc
000349: 3a f3 07

[	SUB A , B] Z80:5cyc, R800:1cyc
00034c: 90

[	PUSH AF] Z80:12cyc, R800:6cyc
00034d: f5

[	LD A , [ PROGRESS_MAX ]] Z80:14cyc, R800:6cyc
00034e: 3a f3 07

[	LD E , A] Z80:5cyc, R800:2cyc
000351: 5f

[	POP AF] Z80:11cyc, R800:5cyc
000352: f1

[	LD C , A] Z80:5cyc, R800:2cyc
000353: 4f

[	XOR A , A] Z80:5cyc, R800:1cyc
000354: af

[	LD D , A] Z80:5cyc, R800:2cyc
000355: 57

[	LD B , 12] Z80:8cyc, R800:2cyc
000356: 06 0c

[DIVIDE_LOOP :]
	label address: 0x000358

[	SLA C] Z80:10cyc, R800:2cyc
000358: cb 21

[	RLA] Z80:5cyc, R800:1cyc
00035a: 17

[	SUB A , E] Z80:5cyc, R800:1cyc
00035b: 93

[	JR NC , SKIP_ADD] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00035c: 30 01

[	ADD A , E] Z80:5cyc, R800:1cyc
00035e: 83

[SKIP_ADD :]
	label address: 0x00035f

[	CCF] Z80:5cyc, R800:1cyc
00035f: 3f

[	RL D] Z80:10cyc, R800:2cyc
000360: cb 12

[	DJNZ DIVIDE_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000362: 10 f4

[	LD A , D] Z80:5cyc, R800:2cyc
000364: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
000365: b7

[	JR Z , SKIP_FILL] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000366: 28 0f

[	LD C , A] Z80:5cyc, R800:2cyc
000368: 4f

[	LD HL , PROGRESS] Z80:11cyc, R800:3cyc
000369: 21 89 03

[	LD DE , PROGRESS + 1] Z80:11cyc, R800:3cyc
00036c: 11 8a 03

[	LD A , 35] Z80:8cyc, R800:2cyc
00036f: 3e 23

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
000371: 77

[	DEC C] Z80:5cyc, R800:1cyc
000372: 0d

[	JR Z , SKIP_FILL] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000373: 28 02

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000375: ed b0

[SKIP_FILL :]
	label address: 0x000377

[	LD DE , PROGRESS_BAR] Z80:11cyc, R800:3cyc
000377: 11 7e 03

[	CALL PUTS] Z80:18cyc, R800:5cyc
00037a: cd 20 08

[	RET] Z80:11cyc, R800:5cyc
00037d: c9

[PROGRESS_BAR :]
	label address: 0x00037e

[	DS "WRITE ROM |"]
00037e: 57 52 49 54 45 20 52 4f
000386: 4d 20 7c

[PROGRESS :]
	label address: 0x000389

[SPACE 16 , 45]
	Allocate space: 16byte(s)
		Fill value: 45

[	DS "|\r"]
000399: 7c 0d

[	DB 0]
00039b: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE FILE_OPEN]
	Scope path: FILE_OPEN:

[FILE_OPEN ::]
	global label address: 0x00039c

[	LD DE , FCB] Z80:11cyc, R800:3cyc
00039c: 11 f5 07

[	LD C , _FOPEN] Z80:8cyc, R800:2cyc
00039f: 0e 0f

[	CALL BDOS] Z80:18cyc, R800:5cyc
0003a1: cd 05 00

[	OR A , A] Z80:5cyc, R800:1cyc
0003a4: b7

[	LD DE , CANNOT_OPEN_MESSAGE] Z80:11cyc, R800:3cyc
0003a5: 11 ec 03

[	JR NZ , PUT_ERROR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0003a8: 20 40

[	LD HL , FCB_FILSIZ] Z80:11cyc, R800:3cyc
0003aa: 21 05 08

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0003ad: 7e

[	LD B , A] Z80:5cyc, R800:2cyc
0003ae: 47

[	INC HL] Z80:7cyc, R800:1cyc
0003af: 23

[	OR A , [ HL ]] Z80:8cyc, R800:4cyc
0003b0: b6

[	INC HL] Z80:7cyc, R800:1cyc
0003b1: 23

[	OR A , [ HL ]] Z80:8cyc, R800:4cyc
0003b2: b6

[	INC HL] Z80:7cyc, R800:1cyc
0003b3: 23

[	OR A , [ HL ]] Z80:8cyc, R800:4cyc
0003b4: b6

[	LD DE , IS_ZERO_MESSAGE] Z80:11cyc, R800:3cyc
0003b5: 11 00 04

[	JR Z , PUT_ERROR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0003b8: 28 30

[	LD A , [ FCB_FILSIZ + 1 ]] Z80:14cyc, R800:6cyc
0003ba: 3a 06 08

[	AND A , 0X1F] Z80:8cyc, R800:2cyc
0003bd: e6 1f

[	OR A , B] Z80:5cyc, R800:1cyc
0003bf: b0

[	LD DE , 0] Z80:11cyc, R800:3cyc
0003c0: 11 00 00

[	JR Z , IS_MULTIPLE_8KB] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0003c3: 28 02

[	LD E , 8] Z80:8cyc, R800:2cyc
0003c5: 1e 08

[IS_MULTIPLE_8KB :]
	label address: 0x0003c7

[	LD HL , [ FCB_FILSIZ + 1 ]] Z80:17cyc, R800:7cyc
0003c7: 2a 06 08

[	SRL H] Z80:10cyc, R800:2cyc
0003ca: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
0003cc: cb 1d

[	SRL H] Z80:10cyc, R800:2cyc
0003ce: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
0003d0: cb 1d

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0003d2: 19

[	LD A , L] Z80:5cyc, R800:2cyc
0003d3: 7d

[	AND A , 0XF8] Z80:8cyc, R800:2cyc
0003d4: e6 f8

[	LD L , A] Z80:5cyc, R800:2cyc
0003d6: 6f

[	LD [ FILE_SIZE ] , HL] Z80:17cyc, R800:7cyc
0003d7: 22 eb 07

[	LD C , _SETDTA] Z80:8cyc, R800:2cyc
0003da: 0e 1a

[	LD DE , NEW_DTA] Z80:11cyc, R800:3cyc
0003dc: 11 00 20

[	CALL BDOS] Z80:18cyc, R800:5cyc
0003df: cd 05 00

[	LD HL , 1024] Z80:11cyc, R800:3cyc
0003e2: 21 00 04

[	LD [ FCB_S2 ] , HL] Z80:17cyc, R800:7cyc
0003e5: 22 03 08

[	INC L] Z80:5cyc, R800:1cyc
0003e8: 2c

[	RET] Z80:11cyc, R800:5cyc
0003e9: c9

[PUT_ERROR :]
	label address: 0x0003ea

[	XOR A , A] Z80:5cyc, R800:1cyc
0003ea: af

[	RET] Z80:11cyc, R800:5cyc
0003eb: c9

[CANNOT_OPEN_MESSAGE :]
	label address: 0x0003ec

[	DS "Cannot open file.\r\n"]
0003ec: 43 61 6e 6e 6f 74 20 6f
0003f4: 70 65 6e 20 66 69 6c 65
0003fc: 2e 0d 0a

[	DB 0]
0003ff: 00

[IS_ZERO_MESSAGE :]
	label address: 0x000400

[	DS "File is empty.\r\n"]
000400: 46 69 6c 65 20 69 73 20
000408: 65 6d 70 74 79 2e 0d 0a

[	DB 0]
000410: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE USAGE]
	Scope path: USAGE:

[USAGE ::]
	global label address: 0x000411

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000411: cd 4a 06

[	LD DE , USAGE_MESSAGE] Z80:11cyc, R800:3cyc
000414: 11 1f 04

[	CALL PUTS] Z80:18cyc, R800:5cyc
000417: cd 20 08

[	LD C , _TERM0] Z80:8cyc, R800:2cyc
00041a: 0e 00

[	JP BDOS] Z80:11cyc, R800:5cyc
00041c: c3 05 00

[USAGE_MESSAGE :]
	label address: 0x00041f

[	DS "Usage> WRTSST [options] file_name.rom\r\n"]
00041f: 55 73 61 67 65 3e 20 57
000427: 52 54 53 53 54 20 5b 6f
00042f: 70 74 69 6f 6e 73 5d 20
000437: 66 69 6c 65 5f 6e 61 6d
00043f: 65 2e 72 6f 6d 0d 0a

[	DS " [options]\r\n"]
000446: 20 5b 6f 70 74 69 6f 6e
00044e: 73 5d 0d 0a

[	DS "  /Sx .... Set target slot for SLOT#x.\r\n"]
000452: 20 20 2f 53 78 20 2e 2e
00045a: 2e 2e 20 53 65 74 20 74
000462: 61 72 67 65 74 20 73 6c
00046a: 6f 74 20 66 6f 72 20 53
000472: 4c 4f 54 23 78 2e 0d 0a

[	DS "  /Sx-y .. Set target slot for SLOT#x-y.\r\n"]
00047a: 20 20 2f 53 78 2d 79 20
000482: 2e 2e 20 53 65 74 20 74
00048a: 61 72 67 65 74 20 73 6c
000492: 6f 74 20 66 6f 72 20 53
00049a: 4c 4f 54 23 78 2d 79 2e
0004a2: 0d 0a

[	DS "  /Aa .... Set target address for S64K.\r\n"]
0004a4: 20 20 2f 41 61 20 2e 2e
0004ac: 2e 2e 20 53 65 74 20 74
0004b4: 61 72 67 65 74 20 61 64
0004bc: 64 72 65 73 73 20 66 6f
0004c4: 72 20 53 36 34 4b 2e 0d
0004cc: 0a

[	DS "    /A0 .. 0000h\r\n"]
0004cd: 20 20 20 20 2f 41 30 20
0004d5: 2e 2e 20 30 30 30 30 68
0004dd: 0d 0a

[	DS "    /A1 .. 2000h\r\n"]
0004df: 20 20 20 20 2f 41 31 20
0004e7: 2e 2e 20 32 30 30 30 68
0004ef: 0d 0a

[	DS "     :\r\n"]
0004f1: 20 20 20 20 20 3a 0d 0a

[	DS "    /A7 .. E000h\r\n"]
0004f9: 20 20 20 20 2f 41 37 20
000501: 2e 2e 20 45 30 30 30 68
000509: 0d 0a

[	DS "  /Tt .... Specify cartridge type.\r\n"]
00050b: 20 20 2f 54 74 20 2e 2e
000513: 2e 2e 20 53 70 65 63 69
00051b: 66 79 20 63 61 72 74 72
000523: 69 64 67 65 20 74 79 70
00052b: 65 2e 0d 0a

[	DS "    /T0 .. MegaSCC\r\n"]
00052f: 20 20 20 20 2f 54 30 20
000537: 2e 2e 20 4d 65 67 61 53
00053f: 43 43 0d 0a

[	DS "    /T1 .. ESE-RC755\r\n"]
000543: 20 20 20 20 2f 54 31 20
00054b: 2e 2e 20 45 53 45 2d 52
000553: 43 37 35 35 0d 0a

[	DS "    /T2 .. Simple64k\r\n"]
000559: 20 20 20 20 2f 54 32 20
000561: 2e 2e 20 53 69 6d 70 6c
000569: 65 36 34 6b 0d 0a

[	DS "    /T3 .. SimpleMegaROM(128KB)\r\n"]
00056f: 20 20 20 20 2f 54 33 20
000577: 2e 2e 20 53 69 6d 70 6c
00057f: 65 4d 65 67 61 52 4f 4d
000587: 28 31 32 38 4b 42 29 0d
00058f: 0a

[	DB 0]
000590: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE DISPLAY_TARGET_SLOT]
	Scope path: DISPLAY_TARGET_SLOT:

[DISPLAY_TARGET_SLOT ::]
	global label address: 0x000591

[	LD DE , SLOT_MESSAGE] Z80:11cyc, R800:3cyc
000591: 11 b4 05

[	CALL PUTS] Z80:18cyc, R800:5cyc
000594: cd 20 08

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000597: 3a ea 07

[	AND A , 3] Z80:8cyc, R800:2cyc
00059a: e6 03

[	CALL PUTHEX_C] Z80:18cyc, R800:5cyc
00059c: cd 3e 08

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00059f: 3a ea 07

[	RLCA] Z80:5cyc, R800:1cyc
0005a2: 07

[	RET NC] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0005a3: d0

[	LD DE , BAR_MESSAGE] Z80:11cyc, R800:3cyc
0005a4: 11 ba 05

[	CALL PUTS] Z80:18cyc, R800:5cyc
0005a7: cd 20 08

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0005aa: 3a ea 07

[	RRA] Z80:5cyc, R800:1cyc
0005ad: 1f

[	RRA] Z80:5cyc, R800:1cyc
0005ae: 1f

[	AND A , 3] Z80:8cyc, R800:2cyc
0005af: e6 03

[	JP PUTHEX_C] Z80:11cyc, R800:5cyc
0005b1: c3 3e 08

[SLOT_MESSAGE :]
	label address: 0x0005b4

[	DS "SLOT#"]
0005b4: 53 4c 4f 54 23

[	DB 0]
0005b9: 00

[BAR_MESSAGE :]
	label address: 0x0005ba

[	DS "-"]
0005ba: 2d

[	DB 0]
0005bb: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE DISPLAY_TARGET_FNAME]
	Scope path: DISPLAY_TARGET_FNAME:

[DISPLAY_TARGET_FNAME ::]
	global label address: 0x0005bc

[	LD DE , FNAME_MESSAGE] Z80:11cyc, R800:3cyc
0005bc: 11 f7 05

[	CALL PUTS] Z80:18cyc, R800:5cyc
0005bf: cd 20 08

[	LD HL , FCB_FNAME] Z80:11cyc, R800:3cyc
0005c2: 21 f6 07

[	LD B , 8] Z80:8cyc, R800:2cyc
0005c5: 06 08

[L1 :]
	label address: 0x0005c7

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0005c7: 7e

[	INC HL] Z80:7cyc, R800:1cyc
0005c8: 23

[	CP A , 32] Z80:8cyc, R800:2cyc
0005c9: fe 20

[	JR Z , S1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0005cb: 28 0c

[	PUSH HL] Z80:12cyc, R800:6cyc
0005cd: e5

[	PUSH BC] Z80:12cyc, R800:6cyc
0005ce: c5

[	LD E , A] Z80:5cyc, R800:2cyc
0005cf: 5f

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0005d0: 0e 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
0005d2: cd 05 00

[	POP BC] Z80:11cyc, R800:5cyc
0005d5: c1

[	POP HL] Z80:11cyc, R800:5cyc
0005d6: e1

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0005d7: 10 ee

[S1 :]
	label address: 0x0005d9

[	LD E , 46] Z80:8cyc, R800:2cyc
0005d9: 1e 2e

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0005db: 0e 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
0005dd: cd 05 00

[	LD HL , FCB_FEXT] Z80:11cyc, R800:3cyc
0005e0: 21 fe 07

[	LD B , 3] Z80:8cyc, R800:2cyc
0005e3: 06 03

[L2 :]
	label address: 0x0005e5

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0005e5: 7e

[	INC HL] Z80:7cyc, R800:1cyc
0005e6: 23

[	CP A , 32] Z80:8cyc, R800:2cyc
0005e7: fe 20

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0005e9: c8

[	PUSH HL] Z80:12cyc, R800:6cyc
0005ea: e5

[	PUSH BC] Z80:12cyc, R800:6cyc
0005eb: c5

[	LD E , A] Z80:5cyc, R800:2cyc
0005ec: 5f

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0005ed: 0e 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
0005ef: cd 05 00

[	POP BC] Z80:11cyc, R800:5cyc
0005f2: c1

[	POP HL] Z80:11cyc, R800:5cyc
0005f3: e1

[	DJNZ L2] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0005f4: 10 ef

[	RET] Z80:11cyc, R800:5cyc
0005f6: c9

[FNAME_MESSAGE :]
	label address: 0x0005f7

[	DS "FILE NAME     :"]
0005f7: 46 49 4c 45 20 4e 41 4d
0005ff: 45 20 20 20 20 20 3a

[	DB 0]
000606: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE CHECK_TARGET_SLOT]
	Scope path: CHECK_TARGET_SLOT:

[CHECK_TARGET_SLOT ::]
	global label address: 0x000607

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000607: 3a ea 07

[	INC A] Z80:5cyc, R800:1cyc
00060a: 3c

[	JP NZ , CONSTANT_TARGET] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00060b: c2 46 06

[	LD HL , EXPTBL] Z80:11cyc, R800:3cyc
00060e: 21 c1 fc

[L1 :]
	label address: 0x000611

[	LD A , L] Z80:5cyc, R800:2cyc
000611: 7d

[	SUB A , EXPTBL & 255] Z80:8cyc, R800:2cyc
000612: d6 c1

[	LD B , A] Z80:5cyc, R800:2cyc
000614: 47

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000615: 7e

[	AND A , 0X80] Z80:8cyc, R800:2cyc
000616: e6 80

[	OR A , B] Z80:5cyc, R800:1cyc
000618: b0

[	OR A , A] Z80:5cyc, R800:1cyc
000619: b7

[	JP M , EXPANDED_SLOT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00061a: fa 28 06

[BASIC_SLOT :]
	label address: 0x00061d

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
00061d: 32 ea 07

[	PUSH HL] Z80:12cyc, R800:6cyc
000620: e5

[	CALL DETECT_TARGET] Z80:18cyc, R800:5cyc
000621: cd 5c 06

[	POP HL] Z80:11cyc, R800:5cyc
000624: e1

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000625: c8

[	JR NEXT_SLOT] Z80:13cyc, R800:3cyc
000626: 18 14

[EXPANDED_SLOT :]
	label address: 0x000628

[	OR A , 0X80] Z80:8cyc, R800:2cyc
000628: f6 80

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
00062a: 32 ea 07

[	PUSH HL] Z80:12cyc, R800:6cyc
00062d: e5

[	CALL DETECT_TARGET] Z80:18cyc, R800:5cyc
00062e: cd 5c 06

[	POP HL] Z80:11cyc, R800:5cyc
000631: e1

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000632: c8

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000633: 3a ea 07

[	ADD A , 0X04] Z80:8cyc, R800:2cyc
000636: c6 04

[	CP A , 0X90] Z80:8cyc, R800:2cyc
000638: fe 90

[	JR C , EXPANDED_SLOT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00063a: 38 ec

[NEXT_SLOT :]
	label address: 0x00063c

[	LD A , L] Z80:5cyc, R800:2cyc
00063c: 7d

[	INC A] Z80:5cyc, R800:1cyc
00063d: 3c

[	LD L , A] Z80:5cyc, R800:2cyc
00063e: 6f

[	CP A , ( EXPTBL & 255 ) + 4] Z80:8cyc, R800:2cyc
00063f: fe c5

[	JR C , L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000641: 38 ce

[	XOR A , A] Z80:5cyc, R800:1cyc
000643: af

[	INC A] Z80:5cyc, R800:1cyc
000644: 3c

[	RET] Z80:11cyc, R800:5cyc
000645: c9

[CONSTANT_TARGET :]
	label address: 0x000646

[	DEC A] Z80:5cyc, R800:1cyc
000646: 3d

[	JP DETECT_TARGET] Z80:11cyc, R800:5cyc
000647: c3 5c 06

[	ENDSCOPE]
	Scope path: 

[	SCOPE RESTORE_DOS_SLOT]
	Scope path: RESTORE_DOS_SLOT:

[RESTORE_DOS_SLOT ::]
	global label address: 0x00064a

[	LD A , [ RAMAD1 ]] Z80:14cyc, R800:6cyc
00064a: 3a 42 f3

[	LD H , 0X40] Z80:8cyc, R800:2cyc
00064d: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
00064f: cd 24 00

[	LD A , [ RAMAD2 ]] Z80:14cyc, R800:6cyc
000652: 3a 43 f3

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000655: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000657: cd 24 00

[	EI] Z80:5cyc, R800:1cyc
00065a: fb

[	RET] Z80:11cyc, R800:5cyc
00065b: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE DETECT_TARGET]
	Scope path: DETECT_TARGET:

[DETECT_TARGET ::]
	global label address: 0x00065c

[	LD A , [ ROM_TYPE ]] Z80:14cyc, R800:6cyc
00065c: 3a f2 07

[	INC A] Z80:5cyc, R800:1cyc
00065f: 3c

[	JR Z , CHECK_ALL] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000660: 28 0b

[	DEC A] Z80:5cyc, R800:1cyc
000662: 3d

[	JR Z , CHECK_MEGASCC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000663: 28 15

[	DEC A] Z80:5cyc, R800:1cyc
000665: 3d

[	JR Z , CHECK_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000666: 28 1c

[	DEC A] Z80:5cyc, R800:1cyc
000668: 3d

[	JR Z , CHECK_SIMPLE64K] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000669: 28 23

[	JR CHECK_SIMPLE_MEGA] Z80:13cyc, R800:3cyc
00066b: 18 31

[CHECK_ALL :]
	label address: 0x00066d

[	CALL CHECK_MEGASCC] Z80:18cyc, R800:5cyc
00066d: cd 7a 06

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000670: c8

[	CALL CHECK_RC755] Z80:18cyc, R800:5cyc
000671: cd 84 06

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000674: c8

[	JR CHECK_SIMPLE64K] Z80:13cyc, R800:3cyc
000675: 18 17

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000677: c8

[	JR CHECK_SIMPLE_MEGA] Z80:13cyc, R800:3cyc
000678: 18 24

[CHECK_MEGASCC :]
	label address: 0x00067a

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00067a: 3a ea 07

[	CALL IS_SLOT_SCC] Z80:18cyc, R800:5cyc
00067d: cd 2e 09

[	JP Z , DETECT_SCC] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000680: ca ae 06

[	RET] Z80:11cyc, R800:5cyc
000683: c9

[CHECK_RC755 :]
	label address: 0x000684

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000684: 3a ea 07

[	CALL IS_SLOT_RC755] Z80:18cyc, R800:5cyc
000687: cd a8 0a

[	JP Z , DETECT_RC755] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00068a: ca bc 06

[	RET] Z80:11cyc, R800:5cyc
00068d: c9

[CHECK_SIMPLE64K :]
	label address: 0x00068e

[	LD A , [ FILE_SIZE ]] Z80:14cyc, R800:6cyc
00068e: 3a eb 07

[	CP A , 65] Z80:8cyc, R800:2cyc
000691: fe 41

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000693: d8

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000694: 3a ea 07

[	CALL IS_SLOT_SIMPLE64K] Z80:18cyc, R800:5cyc
000697: cd 0f 0c

[	JP Z , DETECT_SIMPLE64K] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00069a: ca ca 06

[	RET] Z80:11cyc, R800:5cyc
00069d: c9

[CHECK_SIMPLE_MEGA :]
	label address: 0x00069e

[	LD A , [ FILE_SIZE ]] Z80:14cyc, R800:6cyc
00069e: 3a eb 07

[	CP A , 129] Z80:8cyc, R800:2cyc
0006a1: fe 81

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0006a3: d8

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0006a4: 3a ea 07

[	CALL IS_SLOT_SIMPLE_MEGA] Z80:18cyc, R800:5cyc
0006a7: cd 53 0e

[	JP Z , DETECT_SIMPLE_MEGA] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0006aa: ca d8 06

[	RET] Z80:11cyc, R800:5cyc
0006ad: c9

[DETECT_SCC :]
	label address: 0x0006ae

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0006ae: 3a ea 07

[	CALL SETUP_SLOT_SCC] Z80:18cyc, R800:5cyc
0006b1: cd 64 09

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0006b4: c0

[	XOR A , A] Z80:5cyc, R800:1cyc
0006b5: af

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
0006b6: 32 f2 07

[	JP COMMON_PROCESS] Z80:11cyc, R800:5cyc
0006b9: c3 e6 06

[DETECT_RC755 :]
	label address: 0x0006bc

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0006bc: 3a ea 07

[	CALL SETUP_SLOT_RC755] Z80:18cyc, R800:5cyc
0006bf: cd 16 0b

[	LD A , 1] Z80:8cyc, R800:2cyc
0006c2: 3e 01

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
0006c4: 32 f2 07

[	JP COMMON_PROCESS] Z80:11cyc, R800:5cyc
0006c7: c3 e6 06

[DETECT_SIMPLE64K :]
	label address: 0x0006ca

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0006ca: 3a ea 07

[	CALL SETUP_SLOT_SIMPLE64K] Z80:18cyc, R800:5cyc
0006cd: cd 49 0c

[	LD A , 2] Z80:8cyc, R800:2cyc
0006d0: 3e 02

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
0006d2: 32 f2 07

[	JP COMMON_PROCESS] Z80:11cyc, R800:5cyc
0006d5: c3 e6 06

[DETECT_SIMPLE_MEGA :]
	label address: 0x0006d8

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0006d8: 3a ea 07

[	CALL SETUP_SLOT_SIMPLE_MEGA] Z80:18cyc, R800:5cyc
0006db: cd 8d 0e

[	LD A , 3] Z80:8cyc, R800:2cyc
0006de: 3e 03

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
0006e0: 32 f2 07

[	JP COMMON_PROCESS] Z80:11cyc, R800:5cyc
0006e3: c3 e6 06

[COMMON_PROCESS :]
	label address: 0x0006e6

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
0006e6: cd 4a 06

[	LD DE , MANUFACTURE_ID_MESSAGE] Z80:11cyc, R800:3cyc
0006e9: 11 4a 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006ec: cd 20 08

[	LD A , [ MANUFACTURE_ID ]] Z80:14cyc, R800:6cyc
0006ef: 3a f0 07

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
0006f2: cd a8 08

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006f5: cd 20 08

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
0006f8: cd 1d 08

[	LD DE , DEVICE_ID_MESSAGE] Z80:11cyc, R800:3cyc
0006fb: 11 5a 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006fe: cd 20 08

[	LD A , [ DEVICE_ID ]] Z80:14cyc, R800:6cyc
000701: 3a f1 07

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
000704: cd be 08

[	CALL PUTS] Z80:18cyc, R800:5cyc
000707: cd 20 08

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
00070a: cd 1d 08

[	LD DE , CARTRIDGE_TYPE_MESSAGE] Z80:11cyc, R800:3cyc
00070d: 11 6a 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
000710: cd 20 08

[	LD HL , CARTRIDGE_TYPE_TABLE] Z80:11cyc, R800:3cyc
000713: 21 e2 07

[	LD A , [ ROM_TYPE ]] Z80:14cyc, R800:6cyc
000716: 3a f2 07

[	ADD A , A] Z80:5cyc, R800:1cyc
000719: 87

[	LD E , A] Z80:5cyc, R800:2cyc
00071a: 5f

[	LD D , 0] Z80:8cyc, R800:2cyc
00071b: 16 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
00071d: 19

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00071e: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00071f: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
000720: 56

[	CALL PUTS] Z80:18cyc, R800:5cyc
000721: cd 20 08

[	LD DE , FILE_SIZE_MESSAGE] Z80:11cyc, R800:3cyc
000724: 11 7a 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
000727: cd 20 08

[	LD HL , [ FILE_SIZE ]] Z80:17cyc, R800:7cyc
00072a: 2a eb 07

[	CALL PUTDEC] Z80:18cyc, R800:5cyc
00072d: cd 5d 08

[	LD DE , KB_MESSAGE] Z80:11cyc, R800:3cyc
000730: 11 9a 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
000733: cd 20 08

[	LD DE , ROM_SIZE_MESSAGE] Z80:11cyc, R800:3cyc
000736: 11 8a 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
000739: cd 20 08

[	LD HL , [ ROM_SIZE ]] Z80:17cyc, R800:7cyc
00073c: 2a ed 07

[	CALL PUTDEC] Z80:18cyc, R800:5cyc
00073f: cd 5d 08

[	LD DE , KB_MESSAGE] Z80:11cyc, R800:3cyc
000742: 11 9a 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
000745: cd 20 08

[	XOR A , A] Z80:5cyc, R800:1cyc
000748: af

[	RET] Z80:11cyc, R800:5cyc
000749: c9

[MANUFACTURE_ID_MESSAGE :]
	label address: 0x00074a

[	DS "MANUFACTURE ID:"]
00074a: 4d 41 4e 55 46 41 43 54
000752: 55 52 45 20 49 44 3a

[	DB 0]
000759: 00

[DEVICE_ID_MESSAGE :]
	label address: 0x00075a

[	DS "DEVICE ID     :"]
00075a: 44 45 56 49 43 45 20 49
000762: 44 20 20 20 20 20 3a

[	DB 0]
000769: 00

[CARTRIDGE_TYPE_MESSAGE :]
	label address: 0x00076a

[	DS "CARTRIDGE TYPE:"]
00076a: 43 41 52 54 52 49 44 47
000772: 45 20 54 59 50 45 3a

[	DB 0]
000779: 00

[FILE_SIZE_MESSAGE :]
	label address: 0x00077a

[	DS "FILE SIZE     :"]
00077a: 46 49 4c 45 20 53 49 5a
000782: 45 20 20 20 20 20 3a

[	DB 0]
000789: 00

[ROM_SIZE_MESSAGE :]
	label address: 0x00078a

[	DS "ROM SIZE      :"]
00078a: 52 4f 4d 20 53 49 5a 45
000792: 20 20 20 20 20 20 3a

[	DB 0]
000799: 00

[KB_MESSAGE :]
	label address: 0x00079a

[	DS "KB\r\n"]
00079a: 4b 42 0d 0a

[	DB 0]
00079e: 00

[MEGA_SCC_MESSAGE :]
	label address: 0x00079f

[	DS "MegaSCC\r\n"]
00079f: 4d 65 67 61 53 43 43 0d
0007a7: 0a

[	DB 0]
0007a8: 00

[RC755_MESSAGE :]
	label address: 0x0007a9

[	DS "ESE-RC755\r\n"]
0007a9: 45 53 45 2d 52 43 37 35
0007b1: 35 0d 0a

[	DB 0]
0007b4: 00

[SIMPLE64K_MESSAGE :]
	label address: 0x0007b5

[	DS "Simple64K or SimpleMegaROM\r\n"]
0007b5: 53 69 6d 70 6c 65 36 34
0007bd: 4b 20 6f 72 20 53 69 6d
0007c5: 70 6c 65 4d 65 67 61 52
0007cd: 4f 4d 0d 0a

[	DB 0]
0007d1: 00

[SIMPLE_MEGA_MESSAGE :]
	label address: 0x0007d2

[	DS "SimpleMegaROM\r\n"]
0007d2: 53 69 6d 70 6c 65 4d 65
0007da: 67 61 52 4f 4d 0d 0a

[	DB 0]
0007e1: 00

[CARTRIDGE_TYPE_TABLE :]
	label address: 0x0007e2

[	DW MEGA_SCC_MESSAGE]
0007e2: 9f 07

[	DW RC755_MESSAGE]
0007e4: a9 07

[	DW SIMPLE64K_MESSAGE]
0007e6: b5 07

[	DW SIMPLE_MEGA_MESSAGE]
0007e8: d2 07

[	ENDSCOPE]
	Scope path: 

[TARGET_SLOT ::]
	global label address: 0x0007ea

[	DB 0XFF]
0007ea: ff

[FILE_SIZE ::]
	global label address: 0x0007eb

[	DW 0]
0007eb: 00 00

[ROM_SIZE ::]
	global label address: 0x0007ed

[	DW 0]
0007ed: 00 00

[TARGET_BLOCK_FOR_SIMPLE_ROM :]
	label address: 0x0007ef

[	DB 255]
0007ef: ff

[MANUFACTURE_ID ::]
	global label address: 0x0007f0

[	DB 0]
0007f0: 00

[DEVICE_ID ::]
	global label address: 0x0007f1

[	DB 0]
0007f1: 00

[ROM_TYPE ::]
	global label address: 0x0007f2

[	DB 255]
0007f2: ff

[PROGRESS_MAX ::]
	global label address: 0x0007f3

[	DB 0]
0007f3: 00

[BANK_BACK :]
	label address: 0x0007f4

[	DB 0]
0007f4: 00

[FCB ::]
	global label address: 0x0007f5

[FCB_DR ::]
	global label address: 0x0007f5

[	DB 0]
0007f5: 00

[FCB_FNAME ::]
	global label address: 0x0007f6

[	DS "        "]
0007f6: 20 20 20 20 20 20 20 20

[FCB_FEXT ::]
	global label address: 0x0007fe

[	DS "   "]
0007fe: 20 20 20

[FCB_EX ::]
	global label address: 0x000801

[	DB 0]
000801: 00

[FCB_S1 ::]
	global label address: 0x000802

[	DB 0]
000802: 00

[FCB_S2 ::]
	global label address: 0x000803

[	DB 0]
000803: 00

[FCB_RC ::]
	global label address: 0x000804

[	DB 0]
000804: 00

[FCB_FILSIZ ::]
	global label address: 0x000805

[	DW 0 , 0]
000805: 00 00 00 00

[FCB_DATE ::]
	global label address: 0x000809

[	DW 0]
000809: 00 00

[FCB_TIME ::]
	global label address: 0x00080b

[	DW 0]
00080b: 00 00

[FCB_DEVID ::]
	global label address: 0x00080d

[	DB 0]
00080d: 00

[FCB_DIRLOC ::]
	global label address: 0x00080e

[	DB 0]
00080e: 00

[FCB_STRCLS ::]
	global label address: 0x00080f

[	DW 0]
00080f: 00 00

[FCB_CLRCLS ::]
	global label address: 0x000811

[	DW 0]
000811: 00 00

[FCB_CLSOFF ::]
	global label address: 0x000813

[	DW 0]
000813: 00 00

[FCB_CR ::]
	global label address: 0x000815

[	DB 0]
000815: 00

[FCB_RN ::]
	global label address: 0x000816

[	DW 0 , 0]
000816: 00 00 00 00

[	INCLUDE ".//stdio.asm"] begin
[	SCOPE PUTS_CRLF]
	Scope path: PUTS_CRLF:

[CRLF :]
	label address: 0x00081a

[	DS "\r\n"]
00081a: 0d 0a

[	DB 0]
00081c: 00

[PUTS_CRLF ::]
	global label address: 0x00081d

[	LD DE , CRLF] Z80:11cyc, R800:3cyc
00081d: 11 1a 08

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTS]
	Scope path: PUTS:

[PUTS ::]
	global label address: 0x000820

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
000820: 1a

[	INC DE] Z80:7cyc, R800:1cyc
000821: 13

[	OR A , A] Z80:5cyc, R800:1cyc
000822: b7

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000823: c8

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
000824: 0e 06

[	PUSH DE] Z80:12cyc, R800:6cyc
000826: d5

[	LD E , A] Z80:5cyc, R800:2cyc
000827: 5f

[	CALL BDOS] Z80:18cyc, R800:5cyc
000828: cd 05 00

[	POP DE] Z80:11cyc, R800:5cyc
00082b: d1

[	JR PUTS] Z80:13cyc, R800:3cyc
00082c: 18 f2

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTHEX16]
	Scope path: PUTHEX16:

[PUTHEX16 ::]
	global label address: 0x00082e

[	PUSH HL] Z80:12cyc, R800:6cyc
00082e: e5

[	LD A , H] Z80:5cyc, R800:2cyc
00082f: 7c

[	CALL PUTHEX8] Z80:18cyc, R800:5cyc
000830: cd 35 08

[	POP HL] Z80:11cyc, R800:5cyc
000833: e1

[	LD A , L] Z80:5cyc, R800:2cyc
000834: 7d

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTHEX8]
	Scope path: PUTHEX8:

[PUTHEX8 ::]
	global label address: 0x000835

[	PUSH AF] Z80:12cyc, R800:6cyc
000835: f5

[	RRCA] Z80:5cyc, R800:1cyc
000836: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000837: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000838: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000839: 0f

[	CALL PUTHEX_C] Z80:18cyc, R800:5cyc
00083a: cd 3e 08

[	POP AF] Z80:11cyc, R800:5cyc
00083d: f1

[PUTHEX_C ::]
	global label address: 0x00083e

[	AND A , 0X0F] Z80:8cyc, R800:2cyc
00083e: e6 0f

[	LD HL , HEX_CHARACTERS] Z80:11cyc, R800:3cyc
000840: 21 4d 08

[	LD D , 0] Z80:8cyc, R800:2cyc
000843: 16 00

[	LD E , A] Z80:5cyc, R800:2cyc
000845: 5f

[	ADD HL , DE] Z80:12cyc, R800:1cyc
000846: 19

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
000847: 5e

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
000848: 0e 06

[	JP BDOS] Z80:11cyc, R800:5cyc
00084a: c3 05 00

[HEX_CHARACTERS :]
	label address: 0x00084d

[	DS "0123456789ABCDEF"]
00084d: 30 31 32 33 34 35 36 37
000855: 38 39 41 42 43 44 45 46

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTDEC]
	Scope path: PUTDEC:

[PUTDEC ::]
	global label address: 0x00085d

[	LD BC , STR] Z80:11cyc, R800:3cyc
00085d: 01 a2 08

[	LD DE , 10000] Z80:11cyc, R800:3cyc
000860: 11 10 27

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
000863: cd 96 08

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
000866: 02

[	INC BC] Z80:7cyc, R800:1cyc
000867: 03

[	LD DE , 1000] Z80:11cyc, R800:3cyc
000868: 11 e8 03

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
00086b: cd 96 08

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
00086e: 02

[	INC BC] Z80:7cyc, R800:1cyc
00086f: 03

[	LD DE , 100] Z80:11cyc, R800:3cyc
000870: 11 64 00

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
000873: cd 96 08

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
000876: 02

[	INC BC] Z80:7cyc, R800:1cyc
000877: 03

[	LD DE , 10] Z80:11cyc, R800:3cyc
000878: 11 0a 00

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
00087b: cd 96 08

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
00087e: 02

[	INC BC] Z80:7cyc, R800:1cyc
00087f: 03

[	LD DE , 1] Z80:11cyc, R800:3cyc
000880: 11 01 00

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
000883: cd 96 08

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
000886: 02

[	LD HL , STR] Z80:11cyc, R800:3cyc
000887: 21 a2 08

[	LD A , 48] Z80:8cyc, R800:2cyc
00088a: 3e 30

[ZERO_SKIP :]
	label address: 0x00088c

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00088c: be

[	JR NZ , ZERO_SKIP_EXIT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00088d: 20 03

[	INC HL] Z80:7cyc, R800:1cyc
00088f: 23

[	JR ZERO_SKIP] Z80:13cyc, R800:3cyc
000890: 18 fa

[ZERO_SKIP_EXIT :]
	label address: 0x000892

[	EX DE , HL] Z80:5cyc, R800:1cyc
000892: eb

[	JP PUTS] Z80:11cyc, R800:5cyc
000893: c3 20 08

[COUNT_SUB :]
	label address: 0x000896

[	XOR A , A] Z80:5cyc, R800:1cyc
000896: af

[	LD A , 48] Z80:8cyc, R800:2cyc
000897: 3e 30

[L1 :]
	label address: 0x000899

[	SBC HL , DE] Z80:17cyc, R800:2cyc
000899: ed 52

[	JR C , S1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00089b: 38 03

[	INC A] Z80:5cyc, R800:1cyc
00089d: 3c

[	JR L1] Z80:13cyc, R800:3cyc
00089e: 18 f9

[S1 :]
	label address: 0x0008a0

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0008a0: 19

[	RET] Z80:11cyc, R800:5cyc
0008a1: c9

[STR :]
	label address: 0x0008a2

[	DS "00000"]
0008a2: 30 30 30 30 30

[	DB 0]
0008a7: 00

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//stdio.asm"] end

[	INCLUDE ".//flashrom.asm"] begin
[	SCOPE GET_MANUFACTURE_NAME]
	Scope path: GET_MANUFACTURE_NAME:

[GET_MANUFACTURE_NAME ::]
	global label address: 0x0008a8

[	CP A , MID_SST] Z80:8cyc, R800:2cyc
0008a8: fe bf

[	LD DE , S_SST] Z80:11cyc, R800:3cyc
0008aa: 11 b2 08

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0008ad: c8

[	LD DE , S_UNKNOWN] Z80:11cyc, R800:3cyc
0008ae: 11 b6 08

[	RET] Z80:11cyc, R800:5cyc
0008b1: c9

[S_SST :]
	label address: 0x0008b2

[	DS "SST"]
0008b2: 53 53 54

[	DB 0]
0008b5: 00

[S_UNKNOWN ::]
	global label address: 0x0008b6

[	DS "Unknown"]
0008b6: 55 6e 6b 6e 6f 77 6e

[	DB 0]
0008bd: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE GET_DEVICE_NAME]
	Scope path: GET_DEVICE_NAME:

[GET_DEVICE_NAME ::]
	global label address: 0x0008be

[	LD HL , 512] Z80:11cyc, R800:3cyc
0008be: 21 00 02

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
0008c1: 22 ed 07

[	CP A , DID_SST39SF040] Z80:8cyc, R800:2cyc
0008c4: fe b7

[	LD DE , S_SST39SF040] Z80:11cyc, R800:3cyc
0008c6: 11 04 09

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0008c9: c8

[	LD HL , 256] Z80:11cyc, R800:3cyc
0008ca: 21 00 01

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
0008cd: 22 ed 07

[	CP A , DID_SST39SF020A] Z80:8cyc, R800:2cyc
0008d0: fe b6

[	LD DE , S_SST39SF020A] Z80:11cyc, R800:3cyc
0008d2: 11 f8 08

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0008d5: c8

[	LD HL , 128] Z80:11cyc, R800:3cyc
0008d6: 21 80 00

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
0008d9: 22 ed 07

[	CP A , DID_SST39SF010A] Z80:8cyc, R800:2cyc
0008dc: fe b5

[	LD DE , S_SST39SF010A] Z80:11cyc, R800:3cyc
0008de: 11 ec 08

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0008e1: c8

[	LD HL , 0] Z80:11cyc, R800:3cyc
0008e2: 21 00 00

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
0008e5: 22 ed 07

[	LD DE , S_UNKNOWN] Z80:11cyc, R800:3cyc
0008e8: 11 b6 08

[	RET] Z80:11cyc, R800:5cyc
0008eb: c9

[S_SST39SF010A :]
	label address: 0x0008ec

[	DS "SST39SF010A"]
0008ec: 53 53 54 33 39 53 46 30
0008f4: 31 30 41

[	DB 0]
0008f7: 00

[S_SST39SF020A :]
	label address: 0x0008f8

[	DS "SST39SF020A"]
0008f8: 53 53 54 33 39 53 46 30
000900: 32 30 41

[	DB 0]
000903: 00

[S_SST39SF040 :]
	label address: 0x000904

[	DS "SST39SF040"]
000904: 53 53 54 33 39 53 46 30
00090c: 34 30

[	DB 0]
00090e: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_FLASH_COMMAND]
	Scope path: SETUP_FLASH_COMMAND:

[SETUP_FLASH_COMMAND ::]
	global label address: 0x00090f

[	LD DE , JUMP_TABLE] Z80:11cyc, R800:3cyc
00090f: 11 1f 09

[	LD BC , JUMP_TABLE_END - JUMP_TABLE] Z80:11cyc, R800:3cyc
000912: 01 0f 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000915: ed b0

[	RET] Z80:11cyc, R800:5cyc
000917: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE IS_ROM]
	Scope path: IS_ROM:

[IS_ROM ::]
	global label address: 0x000918

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000918: 7e

[	CPL] Z80:5cyc, R800:1cyc
000919: 2f

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00091a: 77

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00091b: be

[	CPL] Z80:5cyc, R800:1cyc
00091c: 2f

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00091d: 77

[	RET] Z80:11cyc, R800:5cyc
00091e: c9

[	ENDSCOPE]
	Scope path: 

[JUMP_TABLE :]
	label address: 0x00091f

[FLASH_CHIP_ERASE ::]
	global label address: 0x00091f

[	RET] Z80:11cyc, R800:5cyc
00091f: c9

[	RET] Z80:11cyc, R800:5cyc
000920: c9

[	RET] Z80:11cyc, R800:5cyc
000921: c9

[FLASH_WRITE_8KB ::]
	global label address: 0x000922

[	RET] Z80:11cyc, R800:5cyc
000922: c9

[	RET] Z80:11cyc, R800:5cyc
000923: c9

[	RET] Z80:11cyc, R800:5cyc
000924: c9

[FLASH_SET_BANK ::]
	global label address: 0x000925

[	RET] Z80:11cyc, R800:5cyc
000925: c9

[	RET] Z80:11cyc, R800:5cyc
000926: c9

[	RET] Z80:11cyc, R800:5cyc
000927: c9

[FLASH_GET_START_BANK ::]
	global label address: 0x000928

[	RET] Z80:11cyc, R800:5cyc
000928: c9

[	RET] Z80:11cyc, R800:5cyc
000929: c9

[	RET] Z80:11cyc, R800:5cyc
00092a: c9

[FLASH_FINISH ::]
	global label address: 0x00092b

[	RET] Z80:11cyc, R800:5cyc
00092b: c9

[	RET] Z80:11cyc, R800:5cyc
00092c: c9

[	RET] Z80:11cyc, R800:5cyc
00092d: c9

[JUMP_TABLE_END :]
	label address: 0x00092e

[	INCLUDE ".//flashrom.asm"] end

[	INCLUDE ".//scc.asm"] begin
[	SCOPE IS_SLOT_SCC]
	Scope path: IS_SLOT_SCC:

[IS_SLOT_SCC ::]
	global label address: 0x00092e

[	LD H , 0X80] Z80:8cyc, R800:2cyc
00092e: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000930: cd 24 00

[	LD A , 0X3F] Z80:8cyc, R800:2cyc
000933: 3e 3f

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
000935: 32 00 90

[	LD H , 0X98] Z80:8cyc, R800:2cyc
000938: 26 98

[	LD B , 0X80] Z80:8cyc, R800:2cyc
00093a: 06 80

[L1 :]
	label address: 0x00093c

[	DEC B] Z80:5cyc, R800:1cyc
00093c: 05

[	LD L , B] Z80:5cyc, R800:2cyc
00093d: 68

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
00093e: cd 18 09

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000941: c0

[	INC B] Z80:5cyc, R800:1cyc
000942: 04

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000943: 10 f7

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000945: 26 80

[L2 :]
	label address: 0x000947

[	DEC B] Z80:5cyc, R800:1cyc
000947: 05

[	LD L , B] Z80:5cyc, R800:2cyc
000948: 68

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000949: cd 18 09

[	JR Z , NOT_SCC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00094c: 28 13

[	INC B] Z80:5cyc, R800:1cyc
00094e: 04

[	DJNZ L2] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00094f: 10 f6

[	LD A , B] Z80:5cyc, R800:2cyc
000951: 78

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
000952: 32 00 90

[L3 :]
	label address: 0x000955

[	DEC B] Z80:5cyc, R800:1cyc
000955: 05

[	LD L , B] Z80:5cyc, R800:2cyc
000956: 68

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000957: cd 18 09

[	JR Z , NOT_SCC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00095a: 28 05

[	INC B] Z80:5cyc, R800:1cyc
00095c: 04

[	DJNZ L3] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00095d: 10 f6

[	XOR A , A] Z80:5cyc, R800:1cyc
00095f: af

[	RET] Z80:11cyc, R800:5cyc
000960: c9

[NOT_SCC :]
	label address: 0x000961

[	XOR A , A] Z80:5cyc, R800:1cyc
000961: af

[	INC A] Z80:5cyc, R800:1cyc
000962: 3c

[	RET] Z80:11cyc, R800:5cyc
000963: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_SLOT_SCC]
	Scope path: SETUP_SLOT_SCC:

[SETUP_SLOT_SCC ::]
	global label address: 0x000964

[	PUSH AF] Z80:12cyc, R800:6cyc
000964: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000965: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000967: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
00096a: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
00096b: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
00096d: cd 24 00

[	XOR A , A] Z80:5cyc, R800:1cyc
000970: af

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
000971: 32 00 50

[	LD [ SCC_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000974: 32 00 70

[	INC A] Z80:5cyc, R800:1cyc
000977: 3c

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
000978: 32 00 90

[	LD A , 6] Z80:8cyc, R800:2cyc
00097b: 3e 06

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
00097d: 32 00 b0

[	LD HL , SCC_FLASH_JUMP_TABLE] Z80:11cyc, R800:3cyc
000980: 21 bd 09

[	CALL SETUP_FLASH_COMMAND] Z80:18cyc, R800:5cyc
000983: cd 0f 09

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000986: 21 00 40

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000989: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00098b: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00098e: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000990: 32 aa 8a

[	LD A , 0X90] Z80:8cyc, R800:2cyc
000993: 3e 90

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000995: 32 55 a5

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
000998: 5e

[	INC HL] Z80:7cyc, R800:1cyc
000999: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00099a: 56

[	LD [ MANUFACTURE_ID ] , DE] Z80:22cyc, R800:8cyc
00099b: ed 53 f0 07

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00099f: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0009a1: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
0009a4: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
0009a6: 32 aa 8a

[	LD A , 0XF0] Z80:8cyc, R800:2cyc
0009a9: 3e f0

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0009ab: 32 55 a5

[	LD A , [ MANUFACTURE_ID ]] Z80:14cyc, R800:6cyc
0009ae: 3a f0 07

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
0009b1: cd a8 08

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0009b4: c0

[	LD A , [ DEVICE_ID ]] Z80:14cyc, R800:6cyc
0009b5: 3a f1 07

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
0009b8: cd be 08

[	XOR A , A] Z80:5cyc, R800:1cyc
0009bb: af

[	RET] Z80:11cyc, R800:5cyc
0009bc: c9

[SCC_FLASH_JUMP_TABLE :]
	label address: 0x0009bd

[	JP SCC_FLASH_CHIP_ERASE] Z80:11cyc, R800:5cyc
0009bd: c3 2e 0a

[	JP SCC_FLASH_WRITE_8KB] Z80:11cyc, R800:5cyc
0009c0: c3 cc 09

[	JP SCC_SET_BANK] Z80:11cyc, R800:5cyc
0009c3: c3 75 0a

[	JP SCC_GET_START_BANK] Z80:11cyc, R800:5cyc
0009c6: c3 79 0a

[	JP SCC_FINISH] Z80:11cyc, R800:5cyc
0009c9: c3 82 0a

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_FLASH_WRITE_8KB]
	Scope path: SCC_FLASH_WRITE_8KB:

[SCC_FLASH_WRITE_8KB ::]
	global label address: 0x0009cc

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0009cc: 3a ea 07

[	LD H , 0X40] Z80:8cyc, R800:2cyc
0009cf: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0009d1: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0009d4: 3a ea 07

[	LD H , 0X80] Z80:8cyc, R800:2cyc
0009d7: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0009d9: cd 24 00

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
0009dc: 3a f4 07

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
0009df: 32 00 50

[	LD A , 1] Z80:8cyc, R800:2cyc
0009e2: 3e 01

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
0009e4: 32 00 90

[	LD A , 6] Z80:8cyc, R800:2cyc
0009e7: 3e 06

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
0009e9: 32 00 b0

[	LD DE , 0X2000] Z80:11cyc, R800:3cyc
0009ec: 11 00 20

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
0009ef: 21 00 40

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
0009f2: 01 00 20

[LOOP_OF_BC :]
	label address: 0x0009f5

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
0009f5: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0009f7: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
0009fa: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
0009fc: 32 aa 8a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
0009ff: 3e a0

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000a01: 32 55 a5

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
000a04: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
000a05: 77

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000a06: 3a f4 07

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
000a09: 32 00 50

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
000a0c: 1a

[	PUSH BC] Z80:12cyc, R800:6cyc
000a0d: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
000a0e: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x000a11

[	NOP] Z80:5cyc, R800:1cyc
000a11: 00

[	NOP] Z80:5cyc, R800:1cyc
000a12: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
000a13: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a14: 28 0b

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a16: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
000a18: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a19: 20 f6

[WRITE_ERROR :]
	label address: 0x000a1b

[	POP BC] Z80:11cyc, R800:5cyc
000a1b: c1

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000a1c: cd 4a 06

[	SCF] Z80:5cyc, R800:1cyc
000a1f: 37

[	RET] Z80:11cyc, R800:5cyc
000a20: c9

[WRITE_COMPLETE :]
	label address: 0x000a21

[	POP BC] Z80:11cyc, R800:5cyc
000a21: c1

[	INC DE] Z80:7cyc, R800:1cyc
000a22: 13

[	INC HL] Z80:7cyc, R800:1cyc
000a23: 23

[	DEC BC] Z80:7cyc, R800:1cyc
000a24: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
000a25: 78

[	OR A , C] Z80:5cyc, R800:1cyc
000a26: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a27: 20 cc

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000a29: cd 4a 06

[	OR A , A] Z80:5cyc, R800:1cyc
000a2c: b7

[	RET] Z80:11cyc, R800:5cyc
000a2d: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_FLASH_CHIP_ERASE]
	Scope path: SCC_FLASH_CHIP_ERASE:

[SCC_FLASH_CHIP_ERASE ::]
	global label address: 0x000a2e

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000a2e: 3a ea 07

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000a31: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000a33: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000a36: 3a ea 07

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000a39: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000a3b: cd 24 00

[	LD A , 1] Z80:8cyc, R800:2cyc
000a3e: 3e 01

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
000a40: 32 00 90

[	LD A , 6] Z80:8cyc, R800:2cyc
000a43: 3e 06

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000a45: 32 00 b0

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000a48: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000a4a: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000a4d: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000a4f: 32 aa 8a

[	LD A , 0X80] Z80:8cyc, R800:2cyc
000a52: 3e 80

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000a54: 32 55 a5

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000a57: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000a59: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000a5c: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000a5e: 32 aa 8a

[	LD A , 0X10] Z80:8cyc, R800:2cyc
000a61: 3e 10

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000a63: 32 55 a5

[	LD HL , JIFFY] Z80:11cyc, R800:3cyc
000a66: 21 9e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000a69: 7e

[	ADD A , 10] Z80:8cyc, R800:2cyc
000a6a: c6 0a

[	EI] Z80:5cyc, R800:1cyc
000a6c: fb

[WAIT_L1 :]
	label address: 0x000a6d

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
000a6d: be

[	JR NZ , WAIT_L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a6e: 20 fd

[	DI] Z80:5cyc, R800:2cyc
000a70: f3

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000a71: cd 4a 06

[	RET] Z80:11cyc, R800:5cyc
000a74: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_SET_BANK]
	Scope path: SCC_SET_BANK:

[SCC_SET_BANK ::]
	global label address: 0x000a75

[	LD [ BANK_BACK ] , A] Z80:14cyc, R800:6cyc
000a75: 32 f4 07

[	RET] Z80:11cyc, R800:5cyc
000a78: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_GET_START_BANK]
	Scope path: SCC_GET_START_BANK:

[SCC_GET_START_BANK ::]
	global label address: 0x000a79

[	XOR A , A] Z80:5cyc, R800:1cyc
000a79: af

[	RET] Z80:11cyc, R800:5cyc
000a7a: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_RESTORE_BANK]
	Scope path: SCC_RESTORE_BANK:

[SCC_RESTORE_BANK ::]
	global label address: 0x000a7b

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000a7b: 3a f4 07

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
000a7e: 32 00 50

[	RET] Z80:11cyc, R800:5cyc
000a81: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_FINISH]
	Scope path: SCC_FINISH:

[SCC_FINISH ::]
	global label address: 0x000a82

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000a82: 3a ea 07

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000a85: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000a87: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000a8a: 3a ea 07

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000a8d: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000a8f: cd 24 00

[	XOR A , A] Z80:5cyc, R800:1cyc
000a92: af

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
000a93: 32 00 50

[	INC A] Z80:5cyc, R800:1cyc
000a96: 3c

[	LD [ SCC_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000a97: 32 00 70

[	INC A] Z80:5cyc, R800:1cyc
000a9a: 3c

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
000a9b: 32 00 90

[	INC A] Z80:5cyc, R800:1cyc
000a9e: 3c

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000a9f: 32 00 b0

[	JP RESTORE_DOS_SLOT] Z80:11cyc, R800:5cyc
000aa2: c3 4a 06

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//scc.asm"] end

[	INCLUDE ".//ese_rc755.asm"] begin
[	SCOPE IS_SLOT_RC755]
	Scope path: IS_SLOT_RC755:

[NOT_RC755 :]
	label address: 0x000aa5

[	XOR A , A] Z80:5cyc, R800:1cyc
000aa5: af

[	INC A] Z80:5cyc, R800:1cyc
000aa6: 3c

[	RET] Z80:11cyc, R800:5cyc
000aa7: c9

[IS_SLOT_RC755 ::]
	global label address: 0x000aa8

[	PUSH AF] Z80:12cyc, R800:6cyc
000aa8: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000aa9: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000aab: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
000aae: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000aaf: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000ab1: cd 24 00

[	LD HL , 0X5000] Z80:11cyc, R800:3cyc
000ab4: 21 00 50

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000ab7: cd 18 09

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000aba: 28 e9

[	LD HL , 0X7000] Z80:11cyc, R800:3cyc
000abc: 21 00 70

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000abf: cd 18 09

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000ac2: 28 e1

[	LD HL , 0X9000] Z80:11cyc, R800:3cyc
000ac4: 21 00 90

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000ac7: cd 18 09

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000aca: 28 d9

[	LD HL , 0XB000] Z80:11cyc, R800:3cyc
000acc: 21 00 b0

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000acf: cd 18 09

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000ad2: 28 d1

[	XOR A , A] Z80:5cyc, R800:1cyc
000ad4: af

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000ad5: 32 00 60

[	LD A , RC755_FLASH] Z80:8cyc, R800:2cyc
000ad8: 3e 80

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000ada: 32 00 a0

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000add: 21 00 40

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000ae0: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000ae2: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000ae5: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000ae7: 32 aa 4a

[	LD A , 0X90] Z80:8cyc, R800:2cyc
000aea: 3e 90

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000aec: 32 55 55

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
000aef: 5e

[	INC HL] Z80:7cyc, R800:1cyc
000af0: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
000af1: 56

[	LD [ MANUFACTURE_ID ] , DE] Z80:22cyc, R800:8cyc
000af2: ed 53 f0 07

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000af6: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000af8: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000afb: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000afd: 32 aa 4a

[	LD A , 0XF0] Z80:8cyc, R800:2cyc
000b00: 3e f0

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000b02: 32 55 55

[	LD A , 0X03] Z80:8cyc, R800:2cyc
000b05: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000b07: 32 00 a0

[	LD A , E] Z80:5cyc, R800:2cyc
000b0a: 7b

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
000b0b: cd a8 08

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000b0e: c0

[	LD A , [ MANUFACTURE_ID + 1 ]] Z80:14cyc, R800:6cyc
000b0f: 3a f1 07

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
000b12: cd be 08

[	RET] Z80:11cyc, R800:5cyc
000b15: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_SLOT_RC755]
	Scope path: SETUP_SLOT_RC755:

[SETUP_SLOT_RC755 ::]
	global label address: 0x000b16

[	PUSH AF] Z80:12cyc, R800:6cyc
000b16: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000b17: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000b19: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
000b1c: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000b1d: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000b1f: cd 24 00

[	LD HL , RC755_FLASH_JUMP_TABLE] Z80:11cyc, R800:3cyc
000b22: 21 2a 0b

[	CALL SETUP_FLASH_COMMAND] Z80:18cyc, R800:5cyc
000b25: cd 0f 09

[	XOR A , A] Z80:5cyc, R800:1cyc
000b28: af

[	RET] Z80:11cyc, R800:5cyc
000b29: c9

[RC755_FLASH_JUMP_TABLE :]
	label address: 0x000b2a

[	JP RC755_FLASH_CHIP_ERASE] Z80:11cyc, R800:5cyc
000b2a: c3 9b 0b

[	JP RC755_FLASH_WRITE_8KB] Z80:11cyc, R800:5cyc
000b2d: c3 39 0b

[	JP RC755_SET_BANK] Z80:11cyc, R800:5cyc
000b30: c3 e2 0b

[	JP RC755_GET_START_BANK] Z80:11cyc, R800:5cyc
000b33: c3 e6 0b

[	JP RC755_FINISH] Z80:11cyc, R800:5cyc
000b36: c3 ef 0b

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_FLASH_WRITE_8KB]
	Scope path: RC755_FLASH_WRITE_8KB:

[RC755_FLASH_WRITE_8KB ::]
	global label address: 0x000b39

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000b39: 3a ea 07

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000b3c: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000b3e: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000b41: 3a ea 07

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000b44: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000b46: cd 24 00

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000b49: 3a f4 07

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000b4c: 32 00 60

[	LD DE , 0X2000] Z80:11cyc, R800:3cyc
000b4f: 11 00 20

[	LD HL , 0X6000] Z80:11cyc, R800:3cyc
000b52: 21 00 60

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
000b55: 01 00 20

[	LD A , RC755_FLASH] Z80:8cyc, R800:2cyc
000b58: 3e 80

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000b5a: 32 00 a0

[LOOP_OF_BC :]
	label address: 0x000b5d

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000b5d: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000b5f: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000b62: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000b64: 32 aa 4a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
000b67: 3e a0

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000b69: 32 55 55

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
000b6c: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
000b6d: 77

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000b6e: 3a f4 07

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000b71: 32 00 60

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
000b74: 1a

[	PUSH BC] Z80:12cyc, R800:6cyc
000b75: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
000b76: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x000b79

[	NOP] Z80:5cyc, R800:1cyc
000b79: 00

[	NOP] Z80:5cyc, R800:1cyc
000b7a: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
000b7b: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000b7c: 28 0b

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000b7e: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
000b80: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000b81: 20 f6

[WRITE_ERROR :]
	label address: 0x000b83

[	POP BC] Z80:11cyc, R800:5cyc
000b83: c1

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000b84: cd 4a 06

[	SCF] Z80:5cyc, R800:1cyc
000b87: 37

[	RET] Z80:11cyc, R800:5cyc
000b88: c9

[WRITE_COMPLETE :]
	label address: 0x000b89

[	POP BC] Z80:11cyc, R800:5cyc
000b89: c1

[	INC DE] Z80:7cyc, R800:1cyc
000b8a: 13

[	INC HL] Z80:7cyc, R800:1cyc
000b8b: 23

[	DEC BC] Z80:7cyc, R800:1cyc
000b8c: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
000b8d: 78

[	OR A , C] Z80:5cyc, R800:1cyc
000b8e: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000b8f: 20 cc

[	LD A , 0X03] Z80:8cyc, R800:2cyc
000b91: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000b93: 32 00 a0

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000b96: cd 4a 06

[	OR A , A] Z80:5cyc, R800:1cyc
000b99: b7

[	RET] Z80:11cyc, R800:5cyc
000b9a: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_FLASH_CHIP_ERASE]
	Scope path: RC755_FLASH_CHIP_ERASE:

[RC755_FLASH_CHIP_ERASE ::]
	global label address: 0x000b9b

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000b9b: 3a ea 07

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000b9e: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000ba0: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000ba3: 3a ea 07

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000ba6: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000ba8: cd 24 00

[	LD A , RC755_FLASH] Z80:8cyc, R800:2cyc
000bab: 3e 80

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000bad: 32 00 a0

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000bb0: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000bb2: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000bb5: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000bb7: 32 aa 4a

[	LD A , 0X80] Z80:8cyc, R800:2cyc
000bba: 3e 80

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000bbc: 32 55 55

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000bbf: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000bc1: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000bc4: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000bc6: 32 aa 4a

[	LD A , 0X10] Z80:8cyc, R800:2cyc
000bc9: 3e 10

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000bcb: 32 55 55

[	LD HL , JIFFY] Z80:11cyc, R800:3cyc
000bce: 21 9e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000bd1: 7e

[	ADD A , 10] Z80:8cyc, R800:2cyc
000bd2: c6 0a

[	EI] Z80:5cyc, R800:1cyc
000bd4: fb

[WAIT_L1 :]
	label address: 0x000bd5

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
000bd5: be

[	JR NZ , WAIT_L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000bd6: 20 fd

[	DI] Z80:5cyc, R800:2cyc
000bd8: f3

[	LD A , 0X03] Z80:8cyc, R800:2cyc
000bd9: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000bdb: 32 00 a0

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000bde: cd 4a 06

[	RET] Z80:11cyc, R800:5cyc
000be1: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_SET_BANK]
	Scope path: RC755_SET_BANK:

[RC755_SET_BANK ::]
	global label address: 0x000be2

[	LD [ BANK_BACK ] , A] Z80:14cyc, R800:6cyc
000be2: 32 f4 07

[	RET] Z80:11cyc, R800:5cyc
000be5: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_GET_START_BANK]
	Scope path: RC755_GET_START_BANK:

[RC755_GET_START_BANK ::]
	global label address: 0x000be6

[	XOR A , A] Z80:5cyc, R800:1cyc
000be6: af

[	RET] Z80:11cyc, R800:5cyc
000be7: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_RESTORE_BANK]
	Scope path: RC755_RESTORE_BANK:

[RC755_RESTORE_BANK ::]
	global label address: 0x000be8

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000be8: 3a f4 07

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000beb: 32 00 60

[	RET] Z80:11cyc, R800:5cyc
000bee: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_FINISH]
	Scope path: RC755_FINISH:

[RC755_FINISH ::]
	global label address: 0x000bef

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000bef: 3a ea 07

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000bf2: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000bf4: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000bf7: 3a ea 07

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000bfa: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000bfc: cd 24 00

[	LD A , 3] Z80:8cyc, R800:2cyc
000bff: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000c01: 32 00 a0

[	DEC A] Z80:5cyc, R800:1cyc
000c04: 3d

[	LD [ RC755_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
000c05: 32 00 80

[	DEC A] Z80:5cyc, R800:1cyc
000c08: 3d

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000c09: 32 00 60

[	JP RESTORE_DOS_SLOT] Z80:11cyc, R800:5cyc
000c0c: c3 4a 06

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//ese_rc755.asm"] end

[	INCLUDE ".//simple64k.asm"] begin
[	SCOPE IS_SLOT_SIMPLE64K]
	Scope path: IS_SLOT_SIMPLE64K:

[IS_SLOT_SIMPLE64K ::]
	global label address: 0x000c0f

[	OR A , A] Z80:5cyc, R800:1cyc
000c0f: b7

[	JP M , NOT_SUPPORT_EXTENDED_SLOT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000c10: fa 46 0c

[	PUSH AF] Z80:12cyc, R800:6cyc
000c13: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000c14: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000c16: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
000c19: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000c1a: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000c1c: cd 24 00

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000c1f: 21 00 40

[	LD DE , 0X0100] Z80:11cyc, R800:3cyc
000c22: 11 00 01

[	LD B , 0X80] Z80:8cyc, R800:2cyc
000c25: 06 80

[L1 :]
	label address: 0x000c27

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000c27: cd 18 09

[	JR Z , NOT_SIMPLE64K] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000c2a: 28 1a

[	ADD HL , DE] Z80:12cyc, R800:1cyc
000c2c: 19

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000c2d: 10 f8

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000c2f: cd 4a 06

[	CALL TRANSFER_TO_PAGE2] Z80:18cyc, R800:5cyc
000c32: cd 97 0c

[	CALL SIMPLE64K_P2_GET_ID] Z80:18cyc, R800:5cyc
000c35: cd 20 a0

[	LD A , [ MANUFACTURE_ID ]] Z80:14cyc, R800:6cyc
000c38: 3a f0 07

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
000c3b: cd a8 08

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000c3e: c0

[	LD A , [ MANUFACTURE_ID + 1 ]] Z80:14cyc, R800:6cyc
000c3f: 3a f1 07

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
000c42: cd be 08

[	RET] Z80:11cyc, R800:5cyc
000c45: c9

[NOT_SIMPLE64K :]
	label address: 0x000c46

[NOT_SUPPORT_EXTENDED_SLOT :]
	label address: 0x000c46

[	XOR A , A] Z80:5cyc, R800:1cyc
000c46: af

[	INC A] Z80:5cyc, R800:1cyc
000c47: 3c

[	RET] Z80:11cyc, R800:5cyc
000c48: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_SLOT_SIMPLE64K]
	Scope path: SETUP_SLOT_SIMPLE64K:

[SETUP_SLOT_SIMPLE64K ::]
	global label address: 0x000c49

[	LD A , 64] Z80:8cyc, R800:2cyc
000c49: 3e 40

[	LD [ ROM_SIZE ] , A] Z80:14cyc, R800:6cyc
000c4b: 32 ed 07

[	LD HL , SIMPLE64K_FLASH_JUMP_TABLE] Z80:11cyc, R800:3cyc
000c4e: 21 56 0c

[	CALL SETUP_FLASH_COMMAND] Z80:18cyc, R800:5cyc
000c51: cd 0f 09

[	XOR A , A] Z80:5cyc, R800:1cyc
000c54: af

[	RET] Z80:11cyc, R800:5cyc
000c55: c9

[SIMPLE64K_FLASH_JUMP_TABLE :]
	label address: 0x000c56

[	JP SIMPLE64K_P2_FLASH_CHIP_ERASE] Z80:11cyc, R800:5cyc
000c56: c3 5c a0

[	JP SIMPLE64K_FLASH_WRITE_8KB] Z80:11cyc, R800:5cyc
000c59: c3 a3 0c

[	JP SIMPLE64K_SET_BANK] Z80:11cyc, R800:5cyc
000c5c: c3 65 0c

[	JP SIMPLE64K_GET_START_BANK] Z80:11cyc, R800:5cyc
000c5f: c3 69 0c

[	JP SIMPLE64K_FINISH] Z80:11cyc, R800:5cyc
000c62: c3 96 0c

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_SET_BANK]
	Scope path: SIMPLE64K_SET_BANK:

[SIMPLE64K_SET_BANK ::]
	global label address: 0x000c65

[	LD [ BANK_BACK ] , A] Z80:14cyc, R800:6cyc
000c65: 32 f4 07

[	RET] Z80:11cyc, R800:5cyc
000c68: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_GET_START_BANK]
	Scope path: SIMPLE64K_GET_START_BANK:

[SIMPLE64K_GET_START_BANK ::]
	global label address: 0x000c69

[	LD A , H] Z80:5cyc, R800:2cyc
000c69: 7c

[	OR A , A] Z80:5cyc, R800:1cyc
000c6a: b7

[	SCF] Z80:5cyc, R800:1cyc
000c6b: 37

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000c6c: c0

[	LD A , L] Z80:5cyc, R800:2cyc
000c6d: 7d

[	CP A , 65] Z80:8cyc, R800:2cyc
000c6e: fe 41

[	CCF] Z80:5cyc, R800:1cyc
000c70: 3f

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000c71: d8

[	LD A , [ TARGET_BLOCK_FOR_SIMPLE_ROM ]] Z80:14cyc, R800:6cyc
000c72: 3a ef 07

[	INC A] Z80:5cyc, R800:1cyc
000c75: 3c

[	JR NZ , TARGET_ADDRESS_REQUEST] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000c76: 20 11

[	LD A , L] Z80:5cyc, R800:2cyc
000c78: 7d

[	CP A , 33] Z80:8cyc, R800:2cyc
000c79: fe 21

[	JR C , FILE_UNDER_32KB] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000c7b: 38 05

[FILE_33KB_TO_64KB :]
	label address: 0x000c7d

[	XOR A , A] Z80:5cyc, R800:1cyc
000c7d: af

[	LD [ TARGET_BLOCK_FOR_SIMPLE_ROM ] , A] Z80:14cyc, R800:6cyc
000c7e: 32 ef 07

[	RET] Z80:11cyc, R800:5cyc
000c81: c9

[FILE_UNDER_32KB :]
	label address: 0x000c82

[	LD A , 2] Z80:8cyc, R800:2cyc
000c82: 3e 02

[	LD [ TARGET_BLOCK_FOR_SIMPLE_ROM ] , A] Z80:14cyc, R800:6cyc
000c84: 32 ef 07

[	OR A , A] Z80:5cyc, R800:1cyc
000c87: b7

[	RET] Z80:11cyc, R800:5cyc
000c88: c9

[TARGET_ADDRESS_REQUEST :]
	label address: 0x000c89

[	DEC A] Z80:5cyc, R800:1cyc
000c89: 3d

[	LD B , A] Z80:5cyc, R800:2cyc
000c8a: 47

[	LD A , L] Z80:5cyc, R800:2cyc
000c8b: 7d

[	RRCA] Z80:5cyc, R800:1cyc
000c8c: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000c8d: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000c8e: 0f

[	ADD A , B] Z80:5cyc, R800:1cyc
000c8f: 80

[	CP A , 9] Z80:8cyc, R800:2cyc
000c90: fe 09

[	CCF] Z80:5cyc, R800:1cyc
000c92: 3f

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000c93: d8

[	LD A , B] Z80:5cyc, R800:2cyc
000c94: 78

[	RET] Z80:11cyc, R800:5cyc
000c95: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_FINISH]
	Scope path: SIMPLE64K_FINISH:

[SIMPLE64K_FINISH ::]
	global label address: 0x000c96

[	RET] Z80:11cyc, R800:5cyc
000c96: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE TRANSFER_TO_PAGE2]
	Scope path: TRANSFER_TO_PAGE2:

[TRANSFER_TO_PAGE2 ::]
	global label address: 0x000c97

[	LD HL , TRANSFER_TO_PAGE2_START] Z80:11cyc, R800:3cyc
000c97: 21 f9 0c

[	LD DE , PAGE2_START] Z80:11cyc, R800:3cyc
000c9a: 11 00 a0

[	LD BC , PAGE2_END - PAGE2_START] Z80:11cyc, R800:3cyc
000c9d: 01 f7 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000ca0: ed b0

[	RET] Z80:11cyc, R800:5cyc
000ca2: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_FLASH_WRITE_8KB]
	Scope path: SIMPLE64K_FLASH_WRITE_8KB:

[SIMPLE64K_FLASH_WRITE_8KB ::]
	global label address: 0x000ca3

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000ca3: 3a f4 07

[	RRCA] Z80:5cyc, R800:1cyc
000ca6: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000ca7: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000ca8: 0f

[	LD H , A] Z80:5cyc, R800:2cyc
000ca9: 67

[	LD L , 0] Z80:8cyc, R800:2cyc
000caa: 2e 00

[	CP A , 0X80] Z80:8cyc, R800:2cyc
000cac: fe 80

[	JR Z , PAGE3] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000cae: 28 08

[	CP A , 0XA0] Z80:8cyc, R800:2cyc
000cb0: fe a0

[	JR Z , PAGE3] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000cb2: 28 04

[PAGE2 :]
	label address: 0x000cb4

[	CALL SIMPLE64K_P2_FLASH_WRITE_8KB] Z80:18cyc, R800:5cyc
000cb4: cd 9a a0

[	RET] Z80:11cyc, R800:5cyc
000cb7: c9

[PAGE3 :]
	label address: 0x000cb8

[	DI] Z80:5cyc, R800:2cyc
000cb8: f3

[	EXX] Z80:5cyc, R800:1cyc
000cb9: d9

[	LD HL , 0XC000] Z80:11cyc, R800:3cyc
000cba: 21 00 c0

[	LD DE , 0X4000] Z80:11cyc, R800:3cyc
000cbd: 11 00 40

[	LD BC , 0X4000] Z80:11cyc, R800:3cyc
000cc0: 01 00 40

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000cc3: ed b0

[	LD HL , TRANSFER_TO_PAGE3_START] Z80:11cyc, R800:3cyc
000cc5: 21 f0 0d

[	LD DE , PAGE3_START] Z80:11cyc, R800:3cyc
000cc8: 11 00 e0

[	LD BC , PAGE3_END - PAGE3_START] Z80:11cyc, R800:3cyc
000ccb: 01 63 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000cce: ed b0

[	LD HL , 0X2000] Z80:11cyc, R800:3cyc
000cd0: 21 00 20

[	LD DE , 0XC000] Z80:11cyc, R800:3cyc
000cd3: 11 00 c0

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
000cd6: 01 00 20

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000cd9: ed b0

[	EXX] Z80:5cyc, R800:1cyc
000cdb: d9

[	LD [ SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
000cdc: ed 73 f7 0c

[	LD SP , 0XFFFF] Z80:11cyc, R800:3cyc
000ce0: 31 ff ff

[	CALL SIMPLE64K_P3_FLASH_WRITE_8KB] Z80:18cyc, R800:5cyc
000ce3: cd 1e e0

[	LD SP , [ SAVE_SP ]] Z80:22cyc, R800:8cyc
000ce6: ed 7b f7 0c

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000cea: 21 00 40

[	LD DE , 0XC000] Z80:11cyc, R800:3cyc
000ced: 11 00 c0

[	LD BC , 0X3FFF] Z80:11cyc, R800:3cyc
000cf0: 01 ff 3f

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000cf3: ed b0

[	EI] Z80:5cyc, R800:1cyc
000cf5: fb

[	RET] Z80:11cyc, R800:5cyc
000cf6: c9

[SAVE_SP :]
	label address: 0x000cf7

[	DW 0]
000cf7: 00 00

[	ENDSCOPE]
	Scope path: 

[TRANSFER_TO_PAGE2_START ::]
	global label address: 0x000cf9

[	ORG 0XA000]
	code address: 0x00a000

[PAGE2_START ::]
	global label address: 0x00a000

[	SCOPE SIMPLE64K_P2_SETUP_SLOT]
	Scope path: SIMPLE64K_P2_SETUP_SLOT:

[SIMPLE64K_P2_SETUP_SLOT ::]
	global label address: 0x00a000

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00a000: 3a ea 07

[	AND A , 3] Z80:8cyc, R800:2cyc
00a003: e6 03

[	LD B , A] Z80:5cyc, R800:2cyc
00a005: 47

[	RLCA] Z80:5cyc, R800:1cyc
00a006: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a007: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a008: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a009: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00a00a: b0

[	RLCA] Z80:5cyc, R800:1cyc
00a00b: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a00c: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00a00d: b0

[	LD B , A] Z80:5cyc, R800:2cyc
00a00e: 47

[	IN A , [ PPI_PRIMARY_SLOT ]] Z80:12cyc, R800:10 or 9cyc
00a00f: db a8

[	LD [ P2_SAVE_PRIMARY ] , A] Z80:14cyc, R800:6cyc
00a011: 32 f6 a0

[	AND A , 0B00110000] Z80:8cyc, R800:2cyc
00a014: e6 30

[	OR A , B] Z80:5cyc, R800:1cyc
00a016: b0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00a017: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00a019: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P2_RESTORE_SLOT]
	Scope path: SIMPLE64K_P2_RESTORE_SLOT:

[SIMPLE64K_P2_RESTORE_SLOT ::]
	global label address: 0x00a01a

[	LD A , [ P2_SAVE_PRIMARY ]] Z80:14cyc, R800:6cyc
00a01a: 3a f6 a0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00a01d: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00a01f: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P2_GET_ID]
	Scope path: SIMPLE64K_P2_GET_ID:

[SIMPLE64K_P2_GET_ID ::]
	global label address: 0x00a020

[	DI] Z80:5cyc, R800:2cyc
00a020: f3

[	LD [ P2_SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
00a021: ed 73 f4 a0

[	LD SP , 0XBFFF] Z80:11cyc, R800:3cyc
00a025: 31 ff bf

[	CALL SIMPLE64K_P2_SETUP_SLOT] Z80:18cyc, R800:5cyc
00a028: cd 00 a0

[	LD HL , 0X0000] Z80:11cyc, R800:3cyc
00a02b: 21 00 00

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a02e: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a030: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a033: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a035: 32 aa 2a

[	LD A , 0X90] Z80:8cyc, R800:2cyc
00a038: 3e 90

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a03a: 32 55 55

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00a03d: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00a03e: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00a03f: 56

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a040: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a042: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a045: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a047: 32 aa 2a

[	LD A , 0XF0] Z80:8cyc, R800:2cyc
00a04a: 3e f0

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a04c: 32 55 55

[	CALL SIMPLE64K_P2_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00a04f: cd 1a a0

[	LD [ MANUFACTURE_ID ] , DE] Z80:22cyc, R800:8cyc
00a052: ed 53 f0 07

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a056: ed 7b f4 a0

[	EI] Z80:5cyc, R800:1cyc
00a05a: fb

[	RET] Z80:11cyc, R800:5cyc
00a05b: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P2_FLASH_CHIP_ERASE]
	Scope path: SIMPLE64K_P2_FLASH_CHIP_ERASE:

[SIMPLE64K_P2_FLASH_CHIP_ERASE ::]
	global label address: 0x00a05c

[	DI] Z80:5cyc, R800:2cyc
00a05c: f3

[	LD [ P2_SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
00a05d: ed 73 f4 a0

[	LD SP , 0XBFFF] Z80:11cyc, R800:3cyc
00a061: 31 ff bf

[	CALL SIMPLE64K_P2_SETUP_SLOT] Z80:18cyc, R800:5cyc
00a064: cd 00 a0

[	LD HL , 0X0000] Z80:11cyc, R800:3cyc
00a067: 21 00 00

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a06a: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a06c: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a06f: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a071: 32 aa 2a

[	LD A , 0X80] Z80:8cyc, R800:2cyc
00a074: 3e 80

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a076: 32 55 55

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a079: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a07b: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a07e: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a080: 32 aa 2a

[	LD A , 0X10] Z80:8cyc, R800:2cyc
00a083: 3e 10

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a085: 32 55 55

[	CALL SIMPLE64K_P2_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00a088: cd 1a a0

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a08b: ed 7b f4 a0

[	LD HL , JIFFY] Z80:11cyc, R800:3cyc
00a08f: 21 9e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00a092: 7e

[	ADD A , 10] Z80:8cyc, R800:2cyc
00a093: c6 0a

[	EI] Z80:5cyc, R800:1cyc
00a095: fb

[WAIT_L1 :]
	label address: 0x00a096

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00a096: be

[	JR NZ , WAIT_L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a097: 20 fd

[	RET] Z80:11cyc, R800:5cyc
00a099: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P2_FLASH_WRITE_8KB]
	Scope path: SIMPLE64K_P2_FLASH_WRITE_8KB:

[SIMPLE64K_P2_FLASH_WRITE_8KB ::]
	global label address: 0x00a09a

[	DI] Z80:5cyc, R800:2cyc
00a09a: f3

[	LD [ P2_SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
00a09b: ed 73 f4 a0

[	LD SP , 0XBFFF] Z80:11cyc, R800:3cyc
00a09f: 31 ff bf

[	PUSH HL] Z80:12cyc, R800:6cyc
00a0a2: e5

[	LD HL , 0X2000] Z80:11cyc, R800:3cyc
00a0a3: 21 00 20

[	LD DE , 0X8000] Z80:11cyc, R800:3cyc
00a0a6: 11 00 80

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00a0a9: 01 00 20

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00a0ac: ed b0

[	CALL SIMPLE64K_P2_SETUP_SLOT] Z80:18cyc, R800:5cyc
00a0ae: cd 00 a0

[	POP HL] Z80:11cyc, R800:5cyc
00a0b1: e1

[	LD DE , 0X8000] Z80:11cyc, R800:3cyc
00a0b2: 11 00 80

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00a0b5: 01 00 20

[LOOP_OF_BC :]
	label address: 0x00a0b8

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a0b8: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a0ba: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a0bd: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a0bf: 32 aa 2a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
00a0c2: 3e a0

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a0c4: 32 55 55

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00a0c7: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00a0c8: 77

[	PUSH BC] Z80:12cyc, R800:6cyc
00a0c9: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
00a0ca: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x00a0cd

[	NOP] Z80:5cyc, R800:1cyc
00a0cd: 00

[	NOP] Z80:5cyc, R800:1cyc
00a0ce: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00a0cf: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0d0: 28 10

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0d2: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
00a0d4: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0d5: 20 f6

[WRITE_ERROR :]
	label address: 0x00a0d7

[	POP BC] Z80:11cyc, R800:5cyc
00a0d7: c1

[	CALL SIMPLE64K_P2_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00a0d8: cd 1a a0

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a0db: ed 7b f4 a0

[	EI] Z80:5cyc, R800:1cyc
00a0df: fb

[	SCF] Z80:5cyc, R800:1cyc
00a0e0: 37

[	RET] Z80:11cyc, R800:5cyc
00a0e1: c9

[WRITE_COMPLETE :]
	label address: 0x00a0e2

[	POP BC] Z80:11cyc, R800:5cyc
00a0e2: c1

[	INC DE] Z80:7cyc, R800:1cyc
00a0e3: 13

[	INC HL] Z80:7cyc, R800:1cyc
00a0e4: 23

[	DEC BC] Z80:7cyc, R800:1cyc
00a0e5: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
00a0e6: 78

[	OR A , C] Z80:5cyc, R800:1cyc
00a0e7: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0e8: 20 ce

[	CALL SIMPLE64K_P2_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00a0ea: cd 1a a0

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a0ed: ed 7b f4 a0

[	EI] Z80:5cyc, R800:1cyc
00a0f1: fb

[	OR A , A] Z80:5cyc, R800:1cyc
00a0f2: b7

[	RET] Z80:11cyc, R800:5cyc
00a0f3: c9

[	ENDSCOPE]
	Scope path: 

[P2_SAVE_SP ::]
	global label address: 0x00a0f4

[	DW 0]
00a0f4: 00 00

[P2_SAVE_PRIMARY ::]
	global label address: 0x00a0f6

[	DB 0]
00a0f6: 00

[PAGE2_END ::]
	global label address: 0x00a0f7

[	ORG TRANSFER_TO_PAGE2_START + PAGE2_END - PAGE2_START]
	code address: 0x000df0

[TRANSFER_TO_PAGE2_END ::]
	global label address: 0x000df0

[TRANSFER_TO_PAGE3_START ::]
	global label address: 0x000df0

[	ORG 0XE000]
	code address: 0x00e000

[PAGE3_START ::]
	global label address: 0x00e000

[	SCOPE SIMPLE64K_P3_SETUP_SLOT]
	Scope path: SIMPLE64K_P3_SETUP_SLOT:

[SIMPLE64K_P3_SETUP_SLOT ::]
	global label address: 0x00e000

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00e000: 3a ea 07

[	AND A , 3] Z80:8cyc, R800:2cyc
00e003: e6 03

[	LD B , A] Z80:5cyc, R800:2cyc
00e005: 47

[	RLCA] Z80:5cyc, R800:1cyc
00e006: 07

[	RLCA] Z80:5cyc, R800:1cyc
00e007: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00e008: b0

[	RLCA] Z80:5cyc, R800:1cyc
00e009: 07

[	RLCA] Z80:5cyc, R800:1cyc
00e00a: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00e00b: b0

[	LD B , A] Z80:5cyc, R800:2cyc
00e00c: 47

[	IN A , [ PPI_PRIMARY_SLOT ]] Z80:12cyc, R800:10 or 9cyc
00e00d: db a8

[	LD [ P3_SAVE_PRIMARY ] , A] Z80:14cyc, R800:6cyc
00e00f: 32 62 e0

[	AND A , 0B11000000] Z80:8cyc, R800:2cyc
00e012: e6 c0

[	OR A , B] Z80:5cyc, R800:1cyc
00e014: b0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00e015: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00e017: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P3_RESTORE_SLOT]
	Scope path: SIMPLE64K_P3_RESTORE_SLOT:

[SIMPLE64K_P3_RESTORE_SLOT ::]
	global label address: 0x00e018

[	LD A , [ P3_SAVE_PRIMARY ]] Z80:14cyc, R800:6cyc
00e018: 3a 62 e0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00e01b: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00e01d: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P3_FLASH_WRITE_8KB]
	Scope path: SIMPLE64K_P3_FLASH_WRITE_8KB:

[SIMPLE64K_P3_FLASH_WRITE_8KB ::]
	global label address: 0x00e01e

[	CALL SIMPLE64K_P3_SETUP_SLOT] Z80:18cyc, R800:5cyc
00e01e: cd 00 e0

[	LD DE , 0XC000] Z80:11cyc, R800:3cyc
00e021: 11 00 c0

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00e024: 01 00 20

[LOOP_OF_BC :]
	label address: 0x00e027

[	XOR A , A] Z80:5cyc, R800:1cyc
00e027: af

[	LD [ SMEGA_BANK_REGISTER ] , A] Z80:14cyc, R800:6cyc
00e028: 32 00 80

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00e02b: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00e02d: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00e030: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00e032: 32 aa 2a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
00e035: 3e a0

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00e037: 32 55 55

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00e03a: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00e03b: 77

[	PUSH BC] Z80:12cyc, R800:6cyc
00e03c: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
00e03d: 01 00 00

[	NOP] Z80:5cyc, R800:1cyc
00e040: 00

[	XOR A , A] Z80:5cyc, R800:1cyc
00e041: af

[	LD [ SMEGA_BANK_REGISTER ] , A] Z80:14cyc, R800:6cyc
00e042: 32 00 80

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x00e045

[	NOP] Z80:5cyc, R800:1cyc
00e045: 00

[	NOP] Z80:5cyc, R800:1cyc
00e046: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00e047: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e048: 28 0b

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e04a: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
00e04c: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e04d: 20 f6

[WRITE_ERROR :]
	label address: 0x00e04f

[	POP BC] Z80:11cyc, R800:5cyc
00e04f: c1

[	CALL SIMPLE64K_P3_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00e050: cd 18 e0

[	SCF] Z80:5cyc, R800:1cyc
00e053: 37

[	RET] Z80:11cyc, R800:5cyc
00e054: c9

[WRITE_COMPLETE :]
	label address: 0x00e055

[	POP BC] Z80:11cyc, R800:5cyc
00e055: c1

[	INC DE] Z80:7cyc, R800:1cyc
00e056: 13

[	INC HL] Z80:7cyc, R800:1cyc
00e057: 23

[	DEC BC] Z80:7cyc, R800:1cyc
00e058: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
00e059: 78

[	OR A , C] Z80:5cyc, R800:1cyc
00e05a: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e05b: 20 ca

[	CALL SIMPLE64K_P3_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00e05d: cd 18 e0

[	OR A , A] Z80:5cyc, R800:1cyc
00e060: b7

[	RET] Z80:11cyc, R800:5cyc
00e061: c9

[	ENDSCOPE]
	Scope path: 

[P3_SAVE_PRIMARY ::]
	global label address: 0x00e062

[	DB 0]
00e062: 00

[PAGE3_END ::]
	global label address: 0x00e063

[	ORG TRANSFER_TO_PAGE3_START + PAGE3_END - PAGE3_START]
	code address: 0x000e53

[TRANSFER_TO_PAGE3_END ::]
	global label address: 0x000e53

[	INCLUDE ".//simple64k.asm"] end

[	INCLUDE ".//simplemega.asm"] begin
[	SCOPE IS_SLOT_SIMPLE_MEGA]
	Scope path: IS_SLOT_SIMPLE_MEGA:

[IS_SLOT_SIMPLE_MEGA ::]
	global label address: 0x000e53

[	OR A , A] Z80:5cyc, R800:1cyc
000e53: b7

[	JP M , NOT_SUPPORT_EXTENDED_SLOT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000e54: fa 8a 0e

[	PUSH AF] Z80:12cyc, R800:6cyc
000e57: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000e58: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000e5a: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
000e5d: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000e5e: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000e60: cd 24 00

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000e63: 21 00 40

[	LD DE , 0X0100] Z80:11cyc, R800:3cyc
000e66: 11 00 01

[	LD B , 0X80] Z80:8cyc, R800:2cyc
000e69: 06 80

[L1 :]
	label address: 0x000e6b

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000e6b: cd 18 09

[	JR Z , NOT_SIMPLE_MEGA] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000e6e: 28 1a

[	ADD HL , DE] Z80:12cyc, R800:1cyc
000e70: 19

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000e71: 10 f8

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000e73: cd 4a 06

[	CALL TRANSFER_TO_PAGE2] Z80:18cyc, R800:5cyc
000e76: cd 97 0c

[	CALL SIMPLE_MEGA_P2_GET_ID] Z80:18cyc, R800:5cyc
000e79: cd 20 a0

[	LD A , [ MANUFACTURE_ID ]] Z80:14cyc, R800:6cyc
000e7c: 3a f0 07

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
000e7f: cd a8 08

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000e82: c0

[	LD A , [ MANUFACTURE_ID + 1 ]] Z80:14cyc, R800:6cyc
000e83: 3a f1 07

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
000e86: cd be 08

[	RET] Z80:11cyc, R800:5cyc
000e89: c9

[NOT_SIMPLE_MEGA :]
	label address: 0x000e8a

[NOT_SUPPORT_EXTENDED_SLOT :]
	label address: 0x000e8a

[	XOR A , A] Z80:5cyc, R800:1cyc
000e8a: af

[	INC A] Z80:5cyc, R800:1cyc
000e8b: 3c

[	RET] Z80:11cyc, R800:5cyc
000e8c: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_SLOT_SIMPLE_MEGA]
	Scope path: SETUP_SLOT_SIMPLE_MEGA:

[SETUP_SLOT_SIMPLE_MEGA ::]
	global label address: 0x000e8d

[	LD A , 128] Z80:8cyc, R800:2cyc
000e8d: 3e 80

[	LD [ ROM_SIZE ] , A] Z80:14cyc, R800:6cyc
000e8f: 32 ed 07

[	LD HL , SIMPLE_MEGA_FLASH_JUMP_TABLE] Z80:11cyc, R800:3cyc
000e92: 21 9a 0e

[	CALL SETUP_FLASH_COMMAND] Z80:18cyc, R800:5cyc
000e95: cd 0f 09

[	XOR A , A] Z80:5cyc, R800:1cyc
000e98: af

[	RET] Z80:11cyc, R800:5cyc
000e99: c9

[SIMPLE_MEGA_FLASH_JUMP_TABLE :]
	label address: 0x000e9a

[	JP SIMPLE_MEGA_P2_FLASH_CHIP_ERASE] Z80:11cyc, R800:5cyc
000e9a: c3 5c a0

[	JP SIMPLE_MEGA_FLASH_WRITE_8KB] Z80:11cyc, R800:5cyc
000e9d: c3 e7 0e

[	JP SIMPLE_MEGA_SET_BANK] Z80:11cyc, R800:5cyc
000ea0: c3 a9 0e

[	JP SIMPLE_MEGA_GET_START_BANK] Z80:11cyc, R800:5cyc
000ea3: c3 ad 0e

[	JP SIMPLE_MEGA_FINISH] Z80:11cyc, R800:5cyc
000ea6: c3 da 0e

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE_MEGA_SET_BANK]
	Scope path: SIMPLE_MEGA_SET_BANK:

[SIMPLE_MEGA_SET_BANK ::]
	global label address: 0x000ea9

[	LD [ BANK_BACK ] , A] Z80:14cyc, R800:6cyc
000ea9: 32 f4 07

[	RET] Z80:11cyc, R800:5cyc
000eac: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE_MEGA_GET_START_BANK]
	Scope path: SIMPLE_MEGA_GET_START_BANK:

[SIMPLE_MEGA_GET_START_BANK ::]
	global label address: 0x000ead

[	LD A , H] Z80:5cyc, R800:2cyc
000ead: 7c

[	OR A , A] Z80:5cyc, R800:1cyc
000eae: b7

[	SCF] Z80:5cyc, R800:1cyc
000eaf: 37

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000eb0: c0

[	LD A , L] Z80:5cyc, R800:2cyc
000eb1: 7d

[	CP A , 65] Z80:8cyc, R800:2cyc
000eb2: fe 41

[	CCF] Z80:5cyc, R800:1cyc
000eb4: 3f

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000eb5: d8

[	LD A , [ TARGET_BLOCK_FOR_SIMPLE_ROM ]] Z80:14cyc, R800:6cyc
000eb6: 3a ef 07

[	INC A] Z80:5cyc, R800:1cyc
000eb9: 3c

[	JR NZ , TARGET_ADDRESS_REQUEST] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000eba: 20 11

[	LD A , L] Z80:5cyc, R800:2cyc
000ebc: 7d

[	CP A , 33] Z80:8cyc, R800:2cyc
000ebd: fe 21

[	JR C , FILE_UNDER_32KB] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000ebf: 38 05

[FILE_33KB_TO_64KB :]
	label address: 0x000ec1

[	XOR A , A] Z80:5cyc, R800:1cyc
000ec1: af

[	LD [ TARGET_BLOCK_FOR_SIMPLE_ROM ] , A] Z80:14cyc, R800:6cyc
000ec2: 32 ef 07

[	RET] Z80:11cyc, R800:5cyc
000ec5: c9

[FILE_UNDER_32KB :]
	label address: 0x000ec6

[	LD A , 2] Z80:8cyc, R800:2cyc
000ec6: 3e 02

[	LD [ TARGET_BLOCK_FOR_SIMPLE_ROM ] , A] Z80:14cyc, R800:6cyc
000ec8: 32 ef 07

[	OR A , A] Z80:5cyc, R800:1cyc
000ecb: b7

[	RET] Z80:11cyc, R800:5cyc
000ecc: c9

[TARGET_ADDRESS_REQUEST :]
	label address: 0x000ecd

[	DEC A] Z80:5cyc, R800:1cyc
000ecd: 3d

[	LD B , A] Z80:5cyc, R800:2cyc
000ece: 47

[	LD A , L] Z80:5cyc, R800:2cyc
000ecf: 7d

[	RRCA] Z80:5cyc, R800:1cyc
000ed0: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000ed1: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000ed2: 0f

[	ADD A , B] Z80:5cyc, R800:1cyc
000ed3: 80

[	CP A , 9] Z80:8cyc, R800:2cyc
000ed4: fe 09

[	CCF] Z80:5cyc, R800:1cyc
000ed6: 3f

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000ed7: d8

[	LD A , B] Z80:5cyc, R800:2cyc
000ed8: 78

[	RET] Z80:11cyc, R800:5cyc
000ed9: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE_MEGA_FINISH]
	Scope path: SIMPLE_MEGA_FINISH:

[SIMPLE_MEGA_FINISH ::]
	global label address: 0x000eda

[	RET] Z80:11cyc, R800:5cyc
000eda: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE TRANSFER_TO_PAGE2_SMEGA]
	Scope path: TRANSFER_TO_PAGE2_SMEGA:

[TRANSFER_TO_PAGE2_SMEGA ::]
	global label address: 0x000edb

[	LD HL , TRANSFER_TO_PAGE2_SMEGA_START] Z80:11cyc, R800:3cyc
000edb: 21 43 0f

[	LD DE , PAGE2_SMEGA_START] Z80:11cyc, R800:3cyc
000ede: 11 00 a0

[	LD BC , PAGE2_END - PAGE2_SMEGA_START] Z80:11cyc, R800:3cyc
000ee1: 01 f7 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000ee4: ed b0

[	RET] Z80:11cyc, R800:5cyc
000ee6: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE_MEGA_FLASH_WRITE_8KB]
	Scope path: SIMPLE_MEGA_FLASH_WRITE_8KB:

[SIMPLE_MEGA_FLASH_WRITE_8KB ::]
	global label address: 0x000ee7

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000ee7: 3a f4 07

[	RRCA] Z80:5cyc, R800:1cyc
000eea: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000eeb: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000eec: 0f

[	LD [ SIMPLE_MEGA_BANK_ID ] , A] Z80:14cyc, R800:6cyc
000eed: 32 42 0f

[	AND A , 0XE0] Z80:8cyc, R800:2cyc
000ef0: e6 e0

[	LD H , A] Z80:5cyc, R800:2cyc
000ef2: 67

[	LD L , 0] Z80:8cyc, R800:2cyc
000ef3: 2e 00

[	CP A , 0X80] Z80:8cyc, R800:2cyc
000ef5: fe 80

[	JR Z , PAGE3] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000ef7: 28 08

[	CP A , 0XA0] Z80:8cyc, R800:2cyc
000ef9: fe a0

[	JR Z , PAGE3] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000efb: 28 04

[PAGE2 :]
	label address: 0x000efd

[	CALL SIMPLE_MEGA_P2_FLASH_WRITE_8KB] Z80:18cyc, R800:5cyc
000efd: cd 9a a0

[	RET] Z80:11cyc, R800:5cyc
000f00: c9

[PAGE3 :]
	label address: 0x000f01

[	DI] Z80:5cyc, R800:2cyc
000f01: f3

[	EXX] Z80:5cyc, R800:1cyc
000f02: d9

[	LD HL , 0XC000] Z80:11cyc, R800:3cyc
000f03: 21 00 c0

[	LD DE , 0X4000] Z80:11cyc, R800:3cyc
000f06: 11 00 40

[	LD BC , 0X4000] Z80:11cyc, R800:3cyc
000f09: 01 00 40

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000f0c: ed b0

[	LD HL , TRANSFER_TO_PAGE3_START] Z80:11cyc, R800:3cyc
000f0e: 21 f0 0d

[	LD DE , PAGE3_START] Z80:11cyc, R800:3cyc
000f11: 11 00 e0

[	LD BC , PAGE3_END - PAGE3_START] Z80:11cyc, R800:3cyc
000f14: 01 63 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000f17: ed b0

[	LD HL , 0X2000] Z80:11cyc, R800:3cyc
000f19: 21 00 20

[	LD DE , 0XC000] Z80:11cyc, R800:3cyc
000f1c: 11 00 c0

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
000f1f: 01 00 20

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000f22: ed b0

[	EXX] Z80:5cyc, R800:1cyc
000f24: d9

[	LD [ SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
000f25: ed 73 40 0f

[	LD SP , 0XFFFF] Z80:11cyc, R800:3cyc
000f29: 31 ff ff

[	CALL SIMPLE_MEGA_P3_FLASH_WRITE_8KB] Z80:18cyc, R800:5cyc
000f2c: cd 1e e0

[	LD SP , [ SAVE_SP ]] Z80:22cyc, R800:8cyc
000f2f: ed 7b 40 0f

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000f33: 21 00 40

[	LD DE , 0XC000] Z80:11cyc, R800:3cyc
000f36: 11 00 c0

[	LD BC , 0X3FFF] Z80:11cyc, R800:3cyc
000f39: 01 ff 3f

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000f3c: ed b0

[	EI] Z80:5cyc, R800:1cyc
000f3e: fb

[	RET] Z80:11cyc, R800:5cyc
000f3f: c9

[SAVE_SP :]
	label address: 0x000f40

[	DW 0]
000f40: 00 00

[SIMPLE_MEGA_BANK_ID ::]
	global label address: 0x000f42

[	DB 0]
000f42: 00

[	ENDSCOPE]
	Scope path: 

[TRANSFER_TO_PAGE2_SMEGA_START ::]
	global label address: 0x000f43

[	ORG 0XA000]
	code address: 0x00a000

[PAGE2_SMEGA_START ::]
	global label address: 0x00a000

[	SCOPE SIMPLE_MEGA_P2_SETUP_SLOT]
	Scope path: SIMPLE_MEGA_P2_SETUP_SLOT:

[SIMPLE_MEGA_P2_SETUP_SLOT ::]
	global label address: 0x00a000

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00a000: 3a ea 07

[	AND A , 3] Z80:8cyc, R800:2cyc
00a003: e6 03

[	LD B , A] Z80:5cyc, R800:2cyc
00a005: 47

[	RLCA] Z80:5cyc, R800:1cyc
00a006: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a007: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a008: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a009: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00a00a: b0

[	RLCA] Z80:5cyc, R800:1cyc
00a00b: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a00c: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00a00d: b0

[	LD B , A] Z80:5cyc, R800:2cyc
00a00e: 47

[	IN A , [ PPI_PRIMARY_SLOT ]] Z80:12cyc, R800:10 or 9cyc
00a00f: db a8

[	LD [ P2_SAVE_PRIMARY ] , A] Z80:14cyc, R800:6cyc
00a011: 32 f6 a0

[	AND A , 0B00110000] Z80:8cyc, R800:2cyc
00a014: e6 30

[	OR A , B] Z80:5cyc, R800:1cyc
00a016: b0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00a017: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00a019: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE_MEGA_P2_RESTORE_SLOT]
	Scope path: SIMPLE_MEGA_P2_RESTORE_SLOT:

[SIMPLE_MEGA_P2_RESTORE_SLOT ::]
	global label address: 0x00a01a

[	LD A , [ P2_SAVE_PRIMARY ]] Z80:14cyc, R800:6cyc
00a01a: 3a f6 a0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00a01d: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00a01f: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE_MEGA_P2_GET_ID]
	Scope path: SIMPLE_MEGA_P2_GET_ID:

[SIMPLE_MEGA_P2_GET_ID ::]
	global label address: 0x00a020

[	DI] Z80:5cyc, R800:2cyc
00a020: f3

[	LD [ P2_SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
00a021: ed 73 f4 a0

[	LD SP , 0XBFFF] Z80:11cyc, R800:3cyc
00a025: 31 ff bf

[	CALL SIMPLE_MEGA_P2_SETUP_SLOT] Z80:18cyc, R800:5cyc
00a028: cd 00 a0

[	LD HL , 0X0000] Z80:11cyc, R800:3cyc
00a02b: 21 00 00

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a02e: 3e aa

[	LD [ SMEGA_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a030: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a033: 3e 55

[	LD [ SMEGA_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a035: 32 aa 2a

[	LD A , 0X90] Z80:8cyc, R800:2cyc
00a038: 3e 90

[	LD [ SMEGA_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a03a: 32 55 55

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00a03d: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00a03e: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00a03f: 56

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a040: 3e aa

[	LD [ SMEGA_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a042: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a045: 3e 55

[	LD [ SMEGA_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a047: 32 aa 2a

[	LD A , 0XF0] Z80:8cyc, R800:2cyc
00a04a: 3e f0

[	LD [ SMEGA_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a04c: 32 55 55

[	CALL SIMPLE_MEGA_P2_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00a04f: cd 1a a0

[	LD [ MANUFACTURE_ID ] , DE] Z80:22cyc, R800:8cyc
00a052: ed 53 f0 07

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a056: ed 7b f4 a0

[	EI] Z80:5cyc, R800:1cyc
00a05a: fb

[	RET] Z80:11cyc, R800:5cyc
00a05b: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE_MEGA_P2_FLASH_CHIP_ERASE]
	Scope path: SIMPLE_MEGA_P2_FLASH_CHIP_ERASE:

[SIMPLE_MEGA_P2_FLASH_CHIP_ERASE ::]
	global label address: 0x00a05c

[	DI] Z80:5cyc, R800:2cyc
00a05c: f3

[	LD [ P2_SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
00a05d: ed 73 f4 a0

[	LD SP , 0XBFFF] Z80:11cyc, R800:3cyc
00a061: 31 ff bf

[	CALL SIMPLE_MEGA_P2_SETUP_SLOT] Z80:18cyc, R800:5cyc
00a064: cd 00 a0

[	LD HL , 0X0000] Z80:11cyc, R800:3cyc
00a067: 21 00 00

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a06a: 3e aa

[	LD [ SMEGA_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a06c: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a06f: 3e 55

[	LD [ SMEGA_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a071: 32 aa 2a

[	LD A , 0X80] Z80:8cyc, R800:2cyc
00a074: 3e 80

[	LD [ SMEGA_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a076: 32 55 55

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a079: 3e aa

[	LD [ SMEGA_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a07b: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a07e: 3e 55

[	LD [ SMEGA_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a080: 32 aa 2a

[	LD A , 0X10] Z80:8cyc, R800:2cyc
00a083: 3e 10

[	LD [ SMEGA_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a085: 32 55 55

[	CALL SIMPLE_MEGA_P2_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00a088: cd 1a a0

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a08b: ed 7b f4 a0

[	LD HL , JIFFY] Z80:11cyc, R800:3cyc
00a08f: 21 9e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00a092: 7e

[	ADD A , 10] Z80:8cyc, R800:2cyc
00a093: c6 0a

[	EI] Z80:5cyc, R800:1cyc
00a095: fb

[WAIT_L1 :]
	label address: 0x00a096

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00a096: be

[	JR NZ , WAIT_L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a097: 20 fd

[	RET] Z80:11cyc, R800:5cyc
00a099: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE_MEGA_P2_FLASH_WRITE_8KB]
	Scope path: SIMPLE_MEGA_P2_FLASH_WRITE_8KB:

[SIMPLE_MEGA_P2_FLASH_WRITE_8KB ::]
	global label address: 0x00a09a

[	DI] Z80:5cyc, R800:2cyc
00a09a: f3

[	LD [ P2_SAVE_SMEGA_SP ] , SP] Z80:22cyc, R800:8cyc
00a09b: ed 73 f4 a0

[	LD SP , 0XBFFF] Z80:11cyc, R800:3cyc
00a09f: 31 ff bf

[	PUSH HL] Z80:12cyc, R800:6cyc
00a0a2: e5

[	LD HL , 0X2000] Z80:11cyc, R800:3cyc
00a0a3: 21 00 20

[	LD DE , 0X8000] Z80:11cyc, R800:3cyc
00a0a6: 11 00 80

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00a0a9: 01 00 20

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00a0ac: ed b0

[	CALL SIMPLE_MEGA_P2_SETUP_SLOT] Z80:18cyc, R800:5cyc
00a0ae: cd 00 a0

[	POP HL] Z80:11cyc, R800:5cyc
00a0b1: e1

[	LD DE , 0X8000] Z80:11cyc, R800:3cyc
00a0b2: 11 00 80

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00a0b5: 01 00 20

[LOOP_OF_BC :]
	label address: 0x00a0b8

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a0b8: 3e aa

[	LD [ SMEGA_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a0ba: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a0bd: 3e 55

[	LD [ SMEGA_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a0bf: 32 aa 2a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
00a0c2: 3e a0

[	LD [ SMEGA_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a0c4: 32 55 55

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00a0c7: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00a0c8: 77

[	PUSH BC] Z80:12cyc, R800:6cyc
00a0c9: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
00a0ca: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x00a0cd

[	NOP] Z80:5cyc, R800:1cyc
00a0cd: 00

[	NOP] Z80:5cyc, R800:1cyc
00a0ce: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00a0cf: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0d0: 28 10

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0d2: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
00a0d4: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0d5: 20 f6

[WRITE_ERROR :]
	label address: 0x00a0d7

[	POP BC] Z80:11cyc, R800:5cyc
00a0d7: c1

[	CALL SIMPLE_MEGA_P2_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00a0d8: cd 1a a0

[	LD SP , [ P2_SAVE_SMEGA_SP ]] Z80:22cyc, R800:8cyc
00a0db: ed 7b f4 a0

[	EI] Z80:5cyc, R800:1cyc
00a0df: fb

[	SCF] Z80:5cyc, R800:1cyc
00a0e0: 37

[	RET] Z80:11cyc, R800:5cyc
00a0e1: c9

[WRITE_COMPLETE :]
	label address: 0x00a0e2

[	POP BC] Z80:11cyc, R800:5cyc
00a0e2: c1

[	INC DE] Z80:7cyc, R800:1cyc
00a0e3: 13

[	INC HL] Z80:7cyc, R800:1cyc
00a0e4: 23

[	DEC BC] Z80:7cyc, R800:1cyc
00a0e5: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
00a0e6: 78

[	OR A , C] Z80:5cyc, R800:1cyc
00a0e7: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0e8: 20 ce

[	CALL SIMPLE_MEGA_P2_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00a0ea: cd 1a a0

[	LD SP , [ P2_SAVE_SMEGA_SP ]] Z80:22cyc, R800:8cyc
00a0ed: ed 7b f4 a0

[	EI] Z80:5cyc, R800:1cyc
00a0f1: fb

[	OR A , A] Z80:5cyc, R800:1cyc
00a0f2: b7

[	RET] Z80:11cyc, R800:5cyc
00a0f3: c9

[	ENDSCOPE]
	Scope path: 

[P2_SAVE_SMEGA_SP ::]
	global label address: 0x00a0f4

[	DW 0]
00a0f4: 00 00

[P2_SAVE_SMEGA_PRIMARY ::]
	global label address: 0x00a0f6

[	DB 0]
00a0f6: 00

[PAGE2_SMEGA_END ::]
	global label address: 0x00a0f7

[	ORG TRANSFER_TO_PAGE2_SMEGA_START + PAGE2_SMEGA_END - PAGE2_SMEGA_START]
	code address: 0x00103a

[TRANSFER_TO_PAGE2_SMEGA_END ::]
	global label address: 0x00103a

[TRANSFER_TO_PAGE3_SMEGA_START ::]
	global label address: 0x00103a

[	ORG 0XE000]
	code address: 0x00e000

[PAGE3_SMEGA_START ::]
	global label address: 0x00e000

[	SCOPE SIMPLE_MEGA_P3_SETUP_SLOT]
	Scope path: SIMPLE_MEGA_P3_SETUP_SLOT:

[SIMPLE_MEGA_P3_SETUP_SLOT ::]
	global label address: 0x00e000

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00e000: 3a ea 07

[	AND A , 3] Z80:8cyc, R800:2cyc
00e003: e6 03

[	LD B , A] Z80:5cyc, R800:2cyc
00e005: 47

[	RLCA] Z80:5cyc, R800:1cyc
00e006: 07

[	RLCA] Z80:5cyc, R800:1cyc
00e007: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00e008: b0

[	RLCA] Z80:5cyc, R800:1cyc
00e009: 07

[	RLCA] Z80:5cyc, R800:1cyc
00e00a: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00e00b: b0

[	LD B , A] Z80:5cyc, R800:2cyc
00e00c: 47

[	IN A , [ PPI_PRIMARY_SLOT ]] Z80:12cyc, R800:10 or 9cyc
00e00d: db a8

[	LD [ P3_SAVE_SMEGA_PRIMARY ] , A] Z80:14cyc, R800:6cyc
00e00f: 32 69 e0

[	AND A , 0B11000000] Z80:8cyc, R800:2cyc
00e012: e6 c0

[	OR A , B] Z80:5cyc, R800:1cyc
00e014: b0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00e015: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00e017: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE_MEGA_P3_RESTORE_SLOT]
	Scope path: SIMPLE_MEGA_P3_RESTORE_SLOT:

[SIMPLE_MEGA_P3_RESTORE_SLOT ::]
	global label address: 0x00e018

[	LD A , [ P3_SAVE_SMEGA_PRIMARY ]] Z80:14cyc, R800:6cyc
00e018: 3a 69 e0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00e01b: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00e01d: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE_MEGA_P3_FLASH_WRITE_8KB]
	Scope path: SIMPLE_MEGA_P3_FLASH_WRITE_8KB:

[SIMPLE_MEGA_P3_FLASH_WRITE_8KB ::]
	global label address: 0x00e01e

[	CALL SIMPLE_MEGA_P3_SETUP_SLOT] Z80:18cyc, R800:5cyc
00e01e: cd 00 e0

[	LD DE , 0XC000] Z80:11cyc, R800:3cyc
00e021: 11 00 c0

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00e024: 01 00 20

[LOOP_OF_BC :]
	label address: 0x00e027

[	LD A , [ SIMPLE_MEGA_BANK_ID ]] Z80:14cyc, R800:6cyc
00e027: 3a 42 0f

[	AND A , 1] Z80:8cyc, R800:2cyc
00e02a: e6 01

[	LD [ SMEGA_BANK_REGISTER ] , A] Z80:14cyc, R800:6cyc
00e02c: 32 00 80

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00e02f: 3e aa

[	LD [ SMEGA_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00e031: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00e034: 3e 55

[	LD [ SMEGA_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00e036: 32 aa 2a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
00e039: 3e a0

[	LD [ SMEGA_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00e03b: 32 55 55

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00e03e: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00e03f: 77

[	PUSH BC] Z80:12cyc, R800:6cyc
00e040: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
00e041: 01 00 00

[	LD A , [ SIMPLE_MEGA_BANK_ID ]] Z80:14cyc, R800:6cyc
00e044: 3a 42 0f

[	AND A , 1] Z80:8cyc, R800:2cyc
00e047: e6 01

[	LD [ SMEGA_BANK_REGISTER ] , A] Z80:14cyc, R800:6cyc
00e049: 32 00 80

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x00e04c

[	NOP] Z80:5cyc, R800:1cyc
00e04c: 00

[	NOP] Z80:5cyc, R800:1cyc
00e04d: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00e04e: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e04f: 28 0b

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e051: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
00e053: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e054: 20 f6

[WRITE_ERROR :]
	label address: 0x00e056

[	POP BC] Z80:11cyc, R800:5cyc
00e056: c1

[	CALL SIMPLE_MEGA_P3_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00e057: cd 18 e0

[	SCF] Z80:5cyc, R800:1cyc
00e05a: 37

[	RET] Z80:11cyc, R800:5cyc
00e05b: c9

[WRITE_COMPLETE :]
	label address: 0x00e05c

[	POP BC] Z80:11cyc, R800:5cyc
00e05c: c1

[	INC DE] Z80:7cyc, R800:1cyc
00e05d: 13

[	INC HL] Z80:7cyc, R800:1cyc
00e05e: 23

[	DEC BC] Z80:7cyc, R800:1cyc
00e05f: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
00e060: 78

[	OR A , C] Z80:5cyc, R800:1cyc
00e061: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e062: 20 c3

[	CALL SIMPLE_MEGA_P3_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00e064: cd 18 e0

[	OR A , A] Z80:5cyc, R800:1cyc
00e067: b7

[	RET] Z80:11cyc, R800:5cyc
00e068: c9

[	ENDSCOPE]
	Scope path: 

[P3_SAVE_SMEGA_PRIMARY ::]
	global label address: 0x00e069

[	DB 0]
00e069: 00

[PAGE3_SMEGA_END ::]
	global label address: 0x00e06a

[	ORG TRANSFER_TO_PAGE3_SMEGA_START + PAGE3_SMEGA_END - PAGE3_SMEGA_START]
	code address: 0x0010a4

[TRANSFER_TO_PAGE3_SMEGA_END ::]
	global label address: 0x0010a4

[	INCLUDE ".//simplemega.asm"] end

<< label >>
BANK_BACK 2036 ( 0x7f4 )
BDOS 5 ( 0x5 )
CALSLT 28 ( 0x1c )
CHECK_TARGET_SLOT 1543 ( 0x607 )
CHECK_TARGET_SLOT:BASIC_SLOT 1565 ( 0x61d )
CHECK_TARGET_SLOT:CONSTANT_TARGET 1606 ( 0x646 )
CHECK_TARGET_SLOT:EXPANDED_SLOT 1576 ( 0x628 )
CHECK_TARGET_SLOT:L1 1553 ( 0x611 )
CHECK_TARGET_SLOT:NEXT_SLOT 1596 ( 0x63c )
COMMAND_LINE_OPTIONS 621 ( 0x26d )
COMMAND_LINE_OPTIONS:FILE_EXT 763 ( 0x2fb )
COMMAND_LINE_OPTIONS:FILE_NAME 719 ( 0x2cf )
COMMAND_LINE_OPTIONS:FL1 734 ( 0x2de )
COMMAND_LINE_OPTIONS:FL2 771 ( 0x303 )
COMMAND_LINE_OPTIONS:GET_ONE 617 ( 0x269 )
COMMAND_LINE_OPTIONS:L1 631 ( 0x277 )
COMMAND_LINE_OPTIONS:L2 642 ( 0x282 )
COMMAND_LINE_OPTIONS:OPTION 646 ( 0x286 )
COMMAND_LINE_OPTIONS:OPTION_A 790 ( 0x316 )
COMMAND_LINE_OPTIONS:OPTION_S 670 ( 0x29e )
COMMAND_LINE_OPTIONS:OPTION_T 809 ( 0x329 )
COMMAND_LINE_OPTIONS:RETURN_TO_ARG_CHECK 803 ( 0x323 )
DETECT_TARGET 1628 ( 0x65c )
DETECT_TARGET:CARTRIDGE_TYPE_MESSAGE 1898 ( 0x76a )
DETECT_TARGET:CARTRIDGE_TYPE_TABLE 2018 ( 0x7e2 )
DETECT_TARGET:CHECK_ALL 1645 ( 0x66d )
DETECT_TARGET:CHECK_MEGASCC 1658 ( 0x67a )
DETECT_TARGET:CHECK_RC755 1668 ( 0x684 )
DETECT_TARGET:CHECK_SIMPLE64K 1678 ( 0x68e )
DETECT_TARGET:CHECK_SIMPLE_MEGA 1694 ( 0x69e )
DETECT_TARGET:COMMON_PROCESS 1766 ( 0x6e6 )
DETECT_TARGET:DETECT_RC755 1724 ( 0x6bc )
DETECT_TARGET:DETECT_SCC 1710 ( 0x6ae )
DETECT_TARGET:DETECT_SIMPLE64K 1738 ( 0x6ca )
DETECT_TARGET:DETECT_SIMPLE_MEGA 1752 ( 0x6d8 )
DETECT_TARGET:DEVICE_ID_MESSAGE 1882 ( 0x75a )
DETECT_TARGET:FILE_SIZE_MESSAGE 1914 ( 0x77a )
DETECT_TARGET:KB_MESSAGE 1946 ( 0x79a )
DETECT_TARGET:MANUFACTURE_ID_MESSAGE 1866 ( 0x74a )
DETECT_TARGET:MEGA_SCC_MESSAGE 1951 ( 0x79f )
DETECT_TARGET:RC755_MESSAGE 1961 ( 0x7a9 )
DETECT_TARGET:ROM_SIZE_MESSAGE 1930 ( 0x78a )
DETECT_TARGET:SIMPLE64K_MESSAGE 1973 ( 0x7b5 )
DETECT_TARGET:SIMPLE_MEGA_MESSAGE 2002 ( 0x7d2 )
DEVICE_ID 2033 ( 0x7f1 )
DID_SST39SF010A 181 ( 0xb5 )
DID_SST39SF020A 182 ( 0xb6 )
DID_SST39SF040 183 ( 0xb7 )
DISPLAY_PROGRESS_BAR 824 ( 0x338 )
DISPLAY_PROGRESS_BAR:DIVIDE_LOOP 856 ( 0x358 )
DISPLAY_PROGRESS_BAR:PROGRESS 905 ( 0x389 )
DISPLAY_PROGRESS_BAR:PROGRESS_BAR 894 ( 0x37e )
DISPLAY_PROGRESS_BAR:SKIP_ADD 863 ( 0x35f )
DISPLAY_PROGRESS_BAR:SKIP_FILL 887 ( 0x377 )
DISPLAY_TARGET_FNAME 1468 ( 0x5bc )
DISPLAY_TARGET_FNAME:FNAME_MESSAGE 1527 ( 0x5f7 )
DISPLAY_TARGET_FNAME:L1 1479 ( 0x5c7 )
DISPLAY_TARGET_FNAME:L2 1509 ( 0x5e5 )
DISPLAY_TARGET_FNAME:S1 1497 ( 0x5d9 )
DISPLAY_TARGET_SLOT 1425 ( 0x591 )
DISPLAY_TARGET_SLOT:BAR_MESSAGE 1466 ( 0x5ba )
DISPLAY_TARGET_SLOT:SLOT_MESSAGE 1460 ( 0x5b4 )
ENASLT 36 ( 0x24 )
ENTRY_POINT 256 ( 0x100 )
ENTRY_POINT:BLOCK_MESSAGE 512 ( 0x200 )
ENTRY_POINT:BLOCK_WRITE_LOOP 360 ( 0x168 )
ENTRY_POINT:COMPLETED_MESSAGE 548 ( 0x224 )
ENTRY_POINT:ERASE_MESSAGE 528 ( 0x210 )
ENTRY_POINT:NOT_DETECTED 439 ( 0x1b7 )
ENTRY_POINT:NOT_DETECTED_MESSAGE 563 ( 0x233 )
ENTRY_POINT:OK_MESSAGE 543 ( 0x21f )
ENTRY_POINT:PUTS_AND_EXIT 423 ( 0x1a7 )
ENTRY_POINT:TITLE_MESSAGE 444 ( 0x1bc )
ENTRY_POINT:WRITE_ERROR_MESSAGE 599 ( 0x257 )
EXPTBL 64705 ( 0xfcc1 )
FCB 2037 ( 0x7f5 )
FCB_CLRCLS 2065 ( 0x811 )
FCB_CLSOFF 2067 ( 0x813 )
FCB_CR 2069 ( 0x815 )
FCB_DATE 2057 ( 0x809 )
FCB_DEVID 2061 ( 0x80d )
FCB_DIRLOC 2062 ( 0x80e )
FCB_DR 2037 ( 0x7f5 )
FCB_EX 2049 ( 0x801 )
FCB_FEXT 2046 ( 0x7fe )
FCB_FILSIZ 2053 ( 0x805 )
FCB_FNAME 2038 ( 0x7f6 )
FCB_RC 2052 ( 0x804 )
FCB_RN 2070 ( 0x816 )
FCB_S1 2050 ( 0x802 )
FCB_S2 2051 ( 0x803 )
FCB_STRCLS 2063 ( 0x80f )
FCB_TIME 2059 ( 0x80b )
FILE_OPEN 924 ( 0x39c )
FILE_OPEN:CANNOT_OPEN_MESSAGE 1004 ( 0x3ec )
FILE_OPEN:IS_MULTIPLE_8KB 967 ( 0x3c7 )
FILE_OPEN:IS_ZERO_MESSAGE 1024 ( 0x400 )
FILE_OPEN:PUT_ERROR 1002 ( 0x3ea )
FILE_SIZE 2027 ( 0x7eb )
FLASH_CHIP_ERASE 2335 ( 0x91f )
FLASH_FINISH 2347 ( 0x92b )
FLASH_GET_START_BANK 2344 ( 0x928 )
FLASH_SET_BANK 2341 ( 0x925 )
FLASH_WRITE_8KB 2338 ( 0x922 )
GET_DEVICE_NAME 2238 ( 0x8be )
GET_DEVICE_NAME:S_SST39SF010A 2284 ( 0x8ec )
GET_DEVICE_NAME:S_SST39SF020A 2296 ( 0x8f8 )
GET_DEVICE_NAME:S_SST39SF040 2308 ( 0x904 )
GET_MANUFACTURE_NAME 2216 ( 0x8a8 )
GET_MANUFACTURE_NAME:S_SST 2226 ( 0x8b2 )
IS_ROM 2328 ( 0x918 )
IS_SLOT_RC755 2728 ( 0xaa8 )
IS_SLOT_RC755:NOT_RC755 2725 ( 0xaa5 )
IS_SLOT_SCC 2350 ( 0x92e )
IS_SLOT_SCC:L1 2364 ( 0x93c )
IS_SLOT_SCC:L2 2375 ( 0x947 )
IS_SLOT_SCC:L3 2389 ( 0x955 )
IS_SLOT_SCC:NOT_SCC 2401 ( 0x961 )
IS_SLOT_SIMPLE64K 3087 ( 0xc0f )
IS_SLOT_SIMPLE64K:L1 3111 ( 0xc27 )
IS_SLOT_SIMPLE64K:NOT_SIMPLE64K 3142 ( 0xc46 )
IS_SLOT_SIMPLE64K:NOT_SUPPORT_EXTENDED_SLOT 3142 ( 0xc46 )
IS_SLOT_SIMPLE_MEGA 3667 ( 0xe53 )
IS_SLOT_SIMPLE_MEGA:L1 3691 ( 0xe6b )
IS_SLOT_SIMPLE_MEGA:NOT_SIMPLE_MEGA 3722 ( 0xe8a )
IS_SLOT_SIMPLE_MEGA:NOT_SUPPORT_EXTENDED_SLOT 3722 ( 0xe8a )
JIFFY 64670 ( 0xfc9e )
JUMP_TABLE 2335 ( 0x91f )
JUMP_TABLE_END 2350 ( 0x92e )
MANUFACTURE_ID 2032 ( 0x7f0 )
MID_SST 191 ( 0xbf )
NEW_DTA 8192 ( 0x2000 )
P2_SAVE_PRIMARY 41206 ( 0xa0f6 )
P2_SAVE_SMEGA_PRIMARY 41206 ( 0xa0f6 )
P2_SAVE_SMEGA_SP 41204 ( 0xa0f4 )
P2_SAVE_SP 41204 ( 0xa0f4 )
P3_SAVE_PRIMARY 57442 ( 0xe062 )
P3_SAVE_SMEGA_PRIMARY 57449 ( 0xe069 )
PAGE2_END 41207 ( 0xa0f7 )
PAGE2_SMEGA_END 41207 ( 0xa0f7 )
PAGE2_SMEGA_START 40960 ( 0xa000 )
PAGE2_START 40960 ( 0xa000 )
PAGE3_END 57443 ( 0xe063 )
PAGE3_SMEGA_END 57450 ( 0xe06a )
PAGE3_SMEGA_START 57344 ( 0xe000 )
PAGE3_START 57344 ( 0xe000 )
PPI_PRIMARY_SLOT 168 ( 0xa8 )
PROGRESS_MAX 2035 ( 0x7f3 )
PUTDEC 2141 ( 0x85d )
PUTDEC:COUNT_SUB 2198 ( 0x896 )
PUTDEC:L1 2201 ( 0x899 )
PUTDEC:S1 2208 ( 0x8a0 )
PUTDEC:STR 2210 ( 0x8a2 )
PUTDEC:ZERO_SKIP 2188 ( 0x88c )
PUTDEC:ZERO_SKIP_EXIT 2194 ( 0x892 )
PUTHEX16 2094 ( 0x82e )
PUTHEX8 2101 ( 0x835 )
PUTHEX8:HEX_CHARACTERS 2125 ( 0x84d )
PUTHEX_C 2110 ( 0x83e )
PUTS 2080 ( 0x820 )
PUTS_CRLF 2077 ( 0x81d )
PUTS_CRLF:CRLF 2074 ( 0x81a )
RAMAD0 62273 ( 0xf341 )
RAMAD1 62274 ( 0xf342 )
RAMAD2 62275 ( 0xf343 )
RAMAD3 62276 ( 0xf344 )
RC755_BANK1_SEL 24576 ( 0x6000 )
RC755_BANK2_SEL 32768 ( 0x8000 )
RC755_BANK3_SEL 40960 ( 0xa000 )
RC755_CMD_2AAA 19114 ( 0x4aaa )
RC755_CMD_5555 21845 ( 0x5555 )
RC755_FINISH 3055 ( 0xbef )
RC755_FLASH 128 ( 0x80 )
RC755_FLASH_CHIP_ERASE 2971 ( 0xb9b )
RC755_FLASH_CHIP_ERASE:WAIT_L1 3029 ( 0xbd5 )
RC755_FLASH_WRITE_8KB 2873 ( 0xb39 )
RC755_FLASH_WRITE_8KB:LOOP_OF_BC 2909 ( 0xb5d )
RC755_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 2937 ( 0xb79 )
RC755_FLASH_WRITE_8KB:WRITE_COMPLETE 2953 ( 0xb89 )
RC755_FLASH_WRITE_8KB:WRITE_ERROR 2947 ( 0xb83 )
RC755_GET_START_BANK 3046 ( 0xbe6 )
RC755_RESTORE_BANK 3048 ( 0xbe8 )
RC755_SET_BANK 3042 ( 0xbe2 )
RESTORE_DOS_SLOT 1610 ( 0x64a )
ROM_SIZE 2029 ( 0x7ed )
ROM_TYPE 2034 ( 0x7f2 )
SCC_BANK0_SEL 20480 ( 0x5000 )
SCC_BANK1_SEL 28672 ( 0x7000 )
SCC_BANK2_SEL 36864 ( 0x9000 )
SCC_BANK3_SEL 45056 ( 0xb000 )
SCC_CMD_2AAA 35498 ( 0x8aaa )
SCC_CMD_5555 42325 ( 0xa555 )
SCC_FINISH 2690 ( 0xa82 )
SCC_FLASH_CHIP_ERASE 2606 ( 0xa2e )
SCC_FLASH_CHIP_ERASE:WAIT_L1 2669 ( 0xa6d )
SCC_FLASH_WRITE_8KB 2508 ( 0x9cc )
SCC_FLASH_WRITE_8KB:LOOP_OF_BC 2549 ( 0x9f5 )
SCC_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 2577 ( 0xa11 )
SCC_FLASH_WRITE_8KB:WRITE_COMPLETE 2593 ( 0xa21 )
SCC_FLASH_WRITE_8KB:WRITE_ERROR 2587 ( 0xa1b )
SCC_GET_START_BANK 2681 ( 0xa79 )
SCC_RESTORE_BANK 2683 ( 0xa7b )
SCC_SET_BANK 2677 ( 0xa75 )
SETUP_FLASH_COMMAND 2319 ( 0x90f )
SETUP_SLOT_RC755 2838 ( 0xb16 )
SETUP_SLOT_RC755:RC755_FLASH_JUMP_TABLE 2858 ( 0xb2a )
SETUP_SLOT_SCC 2404 ( 0x964 )
SETUP_SLOT_SCC:SCC_FLASH_JUMP_TABLE 2493 ( 0x9bd )
SETUP_SLOT_SIMPLE64K 3145 ( 0xc49 )
SETUP_SLOT_SIMPLE64K:SIMPLE64K_FLASH_JUMP_TABLE 3158 ( 0xc56 )
SETUP_SLOT_SIMPLE_MEGA 3725 ( 0xe8d )
SETUP_SLOT_SIMPLE_MEGA:SIMPLE_MEGA_FLASH_JUMP_TABLE 3738 ( 0xe9a )
SIMPLE64K_FINISH 3222 ( 0xc96 )
SIMPLE64K_FLASH_WRITE_8KB 3235 ( 0xca3 )
SIMPLE64K_FLASH_WRITE_8KB:PAGE2 3252 ( 0xcb4 )
SIMPLE64K_FLASH_WRITE_8KB:PAGE3 3256 ( 0xcb8 )
SIMPLE64K_FLASH_WRITE_8KB:SAVE_SP 3319 ( 0xcf7 )
SIMPLE64K_GET_START_BANK 3177 ( 0xc69 )
SIMPLE64K_GET_START_BANK:FILE_33KB_TO_64KB 3197 ( 0xc7d )
SIMPLE64K_GET_START_BANK:FILE_UNDER_32KB 3202 ( 0xc82 )
SIMPLE64K_GET_START_BANK:TARGET_ADDRESS_REQUEST 3209 ( 0xc89 )
SIMPLE64K_P2_FLASH_CHIP_ERASE 41052 ( 0xa05c )
SIMPLE64K_P2_FLASH_CHIP_ERASE:WAIT_L1 41110 ( 0xa096 )
SIMPLE64K_P2_FLASH_WRITE_8KB 41114 ( 0xa09a )
SIMPLE64K_P2_FLASH_WRITE_8KB:LOOP_OF_BC 41144 ( 0xa0b8 )
SIMPLE64K_P2_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 41165 ( 0xa0cd )
SIMPLE64K_P2_FLASH_WRITE_8KB:WRITE_COMPLETE 41186 ( 0xa0e2 )
SIMPLE64K_P2_FLASH_WRITE_8KB:WRITE_ERROR 41175 ( 0xa0d7 )
SIMPLE64K_P2_GET_ID 40992 ( 0xa020 )
SIMPLE64K_P2_RESTORE_SLOT 40986 ( 0xa01a )
SIMPLE64K_P2_SETUP_SLOT 40960 ( 0xa000 )
SIMPLE64K_P3_FLASH_WRITE_8KB 57374 ( 0xe01e )
SIMPLE64K_P3_FLASH_WRITE_8KB:LOOP_OF_BC 57383 ( 0xe027 )
SIMPLE64K_P3_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 57413 ( 0xe045 )
SIMPLE64K_P3_FLASH_WRITE_8KB:WRITE_COMPLETE 57429 ( 0xe055 )
SIMPLE64K_P3_FLASH_WRITE_8KB:WRITE_ERROR 57423 ( 0xe04f )
SIMPLE64K_P3_RESTORE_SLOT 57368 ( 0xe018 )
SIMPLE64K_P3_SETUP_SLOT 57344 ( 0xe000 )
SIMPLE64K_SET_BANK 3173 ( 0xc65 )
SIMPLE_CMD_2AAA 10922 ( 0x2aaa )
SIMPLE_CMD_5555 21845 ( 0x5555 )
SIMPLE_MEGA_BANK_ID 3906 ( 0xf42 )
SIMPLE_MEGA_FINISH 3802 ( 0xeda )
SIMPLE_MEGA_FLASH_WRITE_8KB 3815 ( 0xee7 )
SIMPLE_MEGA_FLASH_WRITE_8KB:PAGE2 3837 ( 0xefd )
SIMPLE_MEGA_FLASH_WRITE_8KB:PAGE3 3841 ( 0xf01 )
SIMPLE_MEGA_FLASH_WRITE_8KB:SAVE_SP 3904 ( 0xf40 )
SIMPLE_MEGA_GET_START_BANK 3757 ( 0xead )
SIMPLE_MEGA_GET_START_BANK:FILE_33KB_TO_64KB 3777 ( 0xec1 )
SIMPLE_MEGA_GET_START_BANK:FILE_UNDER_32KB 3782 ( 0xec6 )
SIMPLE_MEGA_GET_START_BANK:TARGET_ADDRESS_REQUEST 3789 ( 0xecd )
SIMPLE_MEGA_P2_FLASH_CHIP_ERASE 41052 ( 0xa05c )
SIMPLE_MEGA_P2_FLASH_CHIP_ERASE:WAIT_L1 41110 ( 0xa096 )
SIMPLE_MEGA_P2_FLASH_WRITE_8KB 41114 ( 0xa09a )
SIMPLE_MEGA_P2_FLASH_WRITE_8KB:LOOP_OF_BC 41144 ( 0xa0b8 )
SIMPLE_MEGA_P2_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 41165 ( 0xa0cd )
SIMPLE_MEGA_P2_FLASH_WRITE_8KB:WRITE_COMPLETE 41186 ( 0xa0e2 )
SIMPLE_MEGA_P2_FLASH_WRITE_8KB:WRITE_ERROR 41175 ( 0xa0d7 )
SIMPLE_MEGA_P2_GET_ID 40992 ( 0xa020 )
SIMPLE_MEGA_P2_RESTORE_SLOT 40986 ( 0xa01a )
SIMPLE_MEGA_P2_SETUP_SLOT 40960 ( 0xa000 )
SIMPLE_MEGA_P3_FLASH_WRITE_8KB 57374 ( 0xe01e )
SIMPLE_MEGA_P3_FLASH_WRITE_8KB:LOOP_OF_BC 57383 ( 0xe027 )
SIMPLE_MEGA_P3_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 57420 ( 0xe04c )
SIMPLE_MEGA_P3_FLASH_WRITE_8KB:WRITE_COMPLETE 57436 ( 0xe05c )
SIMPLE_MEGA_P3_FLASH_WRITE_8KB:WRITE_ERROR 57430 ( 0xe056 )
SIMPLE_MEGA_P3_RESTORE_SLOT 57368 ( 0xe018 )
SIMPLE_MEGA_P3_SETUP_SLOT 57344 ( 0xe000 )
SIMPLE_MEGA_SET_BANK 3753 ( 0xea9 )
SMEGA_BANK_REGISTER 32768 ( 0x8000 )
SMEGA_CMD_2AAA 10922 ( 0x2aaa )
SMEGA_CMD_5555 21845 ( 0x5555 )
S_UNKNOWN 2230 ( 0x8b6 )
TARGET_BLOCK_FOR_SIMPLE_ROM 2031 ( 0x7ef )
TARGET_SLOT 2026 ( 0x7ea )
TRANSFER_TO_PAGE2 3223 ( 0xc97 )
TRANSFER_TO_PAGE2_END 3568 ( 0xdf0 )
TRANSFER_TO_PAGE2_SMEGA 3803 ( 0xedb )
TRANSFER_TO_PAGE2_SMEGA_END 4154 ( 0x103a )
TRANSFER_TO_PAGE2_SMEGA_START 3907 ( 0xf43 )
TRANSFER_TO_PAGE2_START 3321 ( 0xcf9 )
TRANSFER_TO_PAGE3_END 3667 ( 0xe53 )
TRANSFER_TO_PAGE3_SMEGA_END 4260 ( 0x10a4 )
TRANSFER_TO_PAGE3_SMEGA_START 4154 ( 0x103a )
TRANSFER_TO_PAGE3_START 3568 ( 0xdf0 )
USAGE 1041 ( 0x411 )
USAGE:USAGE_MESSAGE 1055 ( 0x41f )
_DIRIO 6 ( 0x6 )
_FCLOSE 16 ( 0x10 )
_FOPEN 15 ( 0xf )
_RDBLK 39 ( 0x27 )
_SETDTA 26 ( 0x1a )
_STROUT 9 ( 0x9 )
_TERM0 0 ( 0x0 )
