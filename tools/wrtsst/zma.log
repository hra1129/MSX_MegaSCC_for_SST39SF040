Z80 Macro Assembler ZMA v1.0.15
=====================================================
Programmed by t.hara

<< code >>
[	ORG 0X100]
	code address: 0x000100

[	SCOPE ENTRY_POINT]
	Scope path: ENTRY_POINT:

[ENTRY_POINT ::]
	global label address: 0x000100

[	LD DE , TITLE_MESSAGE] Z80:11cyc, R800:3cyc
000100: 11 92 01

[	CALL PUTS] Z80:18cyc, R800:5cyc
000103: cd 3d 06

[	CALL COMMAND_LINE_OPTIONS] Z80:18cyc, R800:5cyc
000106: cd 2c 02

[	LD A , [ FCB_FNAME ]] Z80:14cyc, R800:6cyc
000109: 3a 13 06

[	CP A , 32] Z80:8cyc, R800:2cyc
00010c: fe 20

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00010e: ca cb 03

[	CALL DISPLAY_TARGET_FNAME] Z80:18cyc, R800:5cyc
000111: cd 94 04

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000114: cd 3a 06

[	CALL FILE_OPEN] Z80:18cyc, R800:5cyc
000117: cd 35 03

[	CALL CHECK_TARGET_SLOT] Z80:18cyc, R800:5cyc
00011a: cd da 04

[	JP NZ , NOT_DETECTED] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00011d: c2 8d 01

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000120: cd 19 05

[	CALL DISPLAY_TARGET_SLOT] Z80:18cyc, R800:5cyc
000123: cd 69 04

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000126: cd 3a 06

[	LD DE , ERASE_MESSAGE] Z80:11cyc, R800:3cyc
000129: 11 cf 01

[	CALL PUTS] Z80:18cyc, R800:5cyc
00012c: cd 3d 06

[	CALL FLASH_CHIP_ERASE] Z80:18cyc, R800:5cyc
00012f: cd 0b 07

[	LD DE , OK_MESSAGE] Z80:11cyc, R800:3cyc
000132: 11 de 01

[	CALL PUTS] Z80:18cyc, R800:5cyc
000135: cd 3d 06

[	CALL FLASH_GET_START_BANK] Z80:18cyc, R800:5cyc
000138: cd 14 07

[	LD C , A] Z80:5cyc, R800:2cyc
00013b: 4f

[	LD HL , [ FILE_SIZE ]] Z80:17cyc, R800:7cyc
00013c: 2a 09 06

[	SRL H] Z80:10cyc, R800:2cyc
00013f: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
000141: cb 1d

[	SRL H] Z80:10cyc, R800:2cyc
000143: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
000145: cb 1d

[	SRL H] Z80:10cyc, R800:2cyc
000147: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
000149: cb 1d

[	LD B , L] Z80:5cyc, R800:2cyc
00014b: 45

[	LD A , L] Z80:5cyc, R800:2cyc
00014c: 7d

[	LD [ PROGRESS_MAX ] , A] Z80:14cyc, R800:6cyc
00014d: 32 10 06

[BLOCK_WRITE_LOOP :]
	label address: 0x000150

[	LD A , C] Z80:5cyc, R800:2cyc
000150: 79

[	PUSH BC] Z80:12cyc, R800:6cyc
000151: c5

[	CALL FLASH_SET_BANK] Z80:18cyc, R800:5cyc
000152: cd 11 07

[	LD A , B] Z80:5cyc, R800:2cyc
000155: 78

[	CALL DISPLAY_PROGRESS_BAR] Z80:18cyc, R800:5cyc
000156: cd d1 02

[	LD C , _RDBLK] Z80:8cyc, R800:2cyc
000159: 0e 27

[	LD DE , FCB] Z80:11cyc, R800:3cyc
00015b: 11 12 06

[	LD HL , 8] Z80:11cyc, R800:3cyc
00015e: 21 08 00

[	CALL BDOS] Z80:18cyc, R800:5cyc
000161: cd 05 00

[	CALL FLASH_WRITE_8KB] Z80:18cyc, R800:5cyc
000164: cd 0e 07

[	POP BC] Z80:11cyc, R800:5cyc
000167: c1

[	LD DE , WRITE_ERROR_MESSAGE] Z80:11cyc, R800:3cyc
000168: 11 16 02

[	JR C , PUTS_AND_EXIT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00016b: 38 15

[	INC C] Z80:5cyc, R800:1cyc
00016d: 0c

[	DJNZ BLOCK_WRITE_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00016e: 10 e0

[	LD A , B] Z80:5cyc, R800:2cyc
000170: 78

[	CALL DISPLAY_PROGRESS_BAR] Z80:18cyc, R800:5cyc
000171: cd d1 02

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000174: cd 3a 06

[	LD C , _FCLOSE] Z80:8cyc, R800:2cyc
000177: 0e 10

[	LD DE , FCB] Z80:11cyc, R800:3cyc
000179: 11 12 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
00017c: cd 05 00

[	LD DE , COMPLETED_MESSAGE] Z80:11cyc, R800:3cyc
00017f: 11 e3 01

[PUTS_AND_EXIT :]
	label address: 0x000182

[	CALL PUTS] Z80:18cyc, R800:5cyc
000182: cd 3d 06

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000185: cd 19 05

[	LD C , _TERM0] Z80:8cyc, R800:2cyc
000188: 0e 00

[	JP BDOS] Z80:11cyc, R800:5cyc
00018a: c3 05 00

[NOT_DETECTED :]
	label address: 0x00018d

[	LD DE , NOT_DETECTED_MESSAGE] Z80:11cyc, R800:3cyc
00018d: 11 f2 01

[	JR PUTS_AND_EXIT] Z80:13cyc, R800:3cyc
000190: 18 f0

[TITLE_MESSAGE :]
	label address: 0x000192

[	DS "WRTSST [SST FlashROM Writer] v0.00\r\n"]
000192: 57 52 54 53 53 54 20 5b
00019a: 53 53 54 20 46 6c 61 73
0001a2: 68 52 4f 4d 20 57 72 69
0001aa: 74 65 72 5d 20 76 30 2e
0001b2: 30 30 0d 0a

[	DS "Copyright (C)2022 HRA!\r\n"]
0001b6: 43 6f 70 79 72 69 67 68
0001be: 74 20 28 43 29 32 30 32
0001c6: 32 20 48 52 41 21 0d 0a

[	DB 0]
0001ce: 00

[ERASE_MESSAGE :]
	label address: 0x0001cf

[	DS "ERASE ROM ... "]
0001cf: 45 52 41 53 45 20 52 4f
0001d7: 4d 20 2e 2e 2e 20

[	DB 0]
0001dd: 00

[OK_MESSAGE :]
	label address: 0x0001de

[	DS "OK\r\n"]
0001de: 4f 4b 0d 0a

[	DB 0]
0001e2: 00

[COMPLETED_MESSAGE :]
	label address: 0x0001e3

[	DS "\r\nCompleted.\r\n"]
0001e3: 0d 0a 43 6f 6d 70 6c 65
0001eb: 74 65 64 2e 0d 0a

[	DB 0]
0001f1: 00

[NOT_DETECTED_MESSAGE :]
	label address: 0x0001f2

[	DS "Could not detect flash cartridge.\r\n"]
0001f2: 43 6f 75 6c 64 20 6e 6f
0001fa: 74 20 64 65 74 65 63 74
000202: 20 66 6c 61 73 68 20 63
00020a: 61 72 74 72 69 64 67 65
000212: 2e 0d 0a

[	DB 0]
000215: 00

[WRITE_ERROR_MESSAGE :]
	label address: 0x000216

[	DS "\r\nWrite failed.\r\n"]
000216: 0d 0a 57 72 69 74 65 20
00021e: 66 61 69 6c 65 64 2e 0d
000226: 0a

[	DB 0]
000227: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE COMMAND_LINE_OPTIONS]
	Scope path: COMMAND_LINE_OPTIONS:

[GET_ONE :]
	label address: 0x000228

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000228: 7e

[	INC HL] Z80:7cyc, R800:1cyc
000229: 23

[	DEC B] Z80:5cyc, R800:1cyc
00022a: 05

[	RET] Z80:11cyc, R800:5cyc
00022b: c9

[COMMAND_LINE_OPTIONS ::]
	global label address: 0x00022c

[	LD HL , 0X0080] Z80:11cyc, R800:3cyc
00022c: 21 80 00

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00022f: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
000230: b7

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000231: ca cb 03

[	LD B , A] Z80:5cyc, R800:2cyc
000234: 47

[	INC HL] Z80:7cyc, R800:1cyc
000235: 23

[L1 :]
	label address: 0x000236

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
000236: cd 28 02

[	CP A , 47] Z80:8cyc, R800:2cyc
000239: fe 2f

[	JR Z , OPTION] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00023b: 28 10

[	CP A , 32] Z80:8cyc, R800:2cyc
00023d: fe 20

[	JR NZ , FILE_NAME] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00023f: 20 51

[L2 :]
	label address: 0x000241

[	INC B] Z80:5cyc, R800:1cyc
000241: 04

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000242: 10 f2

[	LD A , [ FCB_FNAME ]] Z80:14cyc, R800:6cyc
000244: 3a 13 06

[	CP A , 32] Z80:8cyc, R800:2cyc
000247: fe 20

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000249: ca cb 03

[	RET] Z80:11cyc, R800:5cyc
00024c: c9

[OPTION :]
	label address: 0x00024d

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
00024d: cd 28 02

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000250: ca cb 03

[	CP A , 83] Z80:8cyc, R800:2cyc
000253: fe 53

[	JP Z , OPTION_S] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000255: ca 5b 02

[	JP USAGE] Z80:11cyc, R800:5cyc
000258: c3 cb 03

[OPTION_S :]
	label address: 0x00025b

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
00025b: cd 28 02

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00025e: ca cb 03

[	SUB A , 48] Z80:8cyc, R800:2cyc
000261: d6 30

[	CP A , 4] Z80:8cyc, R800:2cyc
000263: fe 04

[	JP NC , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000265: d2 cb 03

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
000268: 32 08 06

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00026b: 7e

[	CP A , 45] Z80:8cyc, R800:2cyc
00026c: fe 2d

[	JP NZ , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00026e: c2 36 02

[	INC HL] Z80:7cyc, R800:1cyc
000271: 23

[	DEC B] Z80:5cyc, R800:1cyc
000272: 05

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000273: ca cb 03

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
000276: cd 28 02

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000279: ca cb 03

[	SUB A , 48] Z80:8cyc, R800:2cyc
00027c: d6 30

[	CP A , 4] Z80:8cyc, R800:2cyc
00027e: fe 04

[	JP NC , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000280: d2 cb 03

[	RLCA] Z80:5cyc, R800:1cyc
000283: 07

[	RLCA] Z80:5cyc, R800:1cyc
000284: 07

[	LD C , A] Z80:5cyc, R800:2cyc
000285: 4f

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000286: 3a 08 06

[	OR A , C] Z80:5cyc, R800:1cyc
000289: b1

[	OR A , 0X80] Z80:8cyc, R800:2cyc
00028a: f6 80

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
00028c: 32 08 06

[	JP L1] Z80:11cyc, R800:5cyc
00028f: c3 36 02

[FILE_NAME :]
	label address: 0x000292

[	LD A , [ FCB_FNAME ]] Z80:14cyc, R800:6cyc
000292: 3a 13 06

[	CP A , 32] Z80:8cyc, R800:2cyc
000295: fe 20

[	JP NZ , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000297: c2 cb 03

[	LD C , 8] Z80:8cyc, R800:2cyc
00029a: 0e 08

[	LD DE , FCB_FNAME] Z80:11cyc, R800:3cyc
00029c: 11 13 06

[	DEC HL] Z80:7cyc, R800:1cyc
00029f: 2b

[	INC B] Z80:5cyc, R800:1cyc
0002a0: 04

[FL1 :]
	label address: 0x0002a1

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
0002a1: cd 28 02

[	CP A , 46] Z80:8cyc, R800:2cyc
0002a4: fe 2e

[	JP Z , FILE_EXT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002a6: ca b6 02

[	CP A , 32] Z80:8cyc, R800:2cyc
0002a9: fe 20

[	JP Z , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002ab: ca 36 02

[	LD [ DE ] , A] Z80:8cyc, R800:4cyc
0002ae: 12

[	INC DE] Z80:7cyc, R800:1cyc
0002af: 13

[	INC B] Z80:5cyc, R800:1cyc
0002b0: 04

[	DEC B] Z80:5cyc, R800:1cyc
0002b1: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0002b2: c8

[	DEC C] Z80:5cyc, R800:1cyc
0002b3: 0d

[	JR NZ , FL1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0002b4: 20 eb

[FILE_EXT :]
	label address: 0x0002b6

[	INC B] Z80:5cyc, R800:1cyc
0002b6: 04

[	DEC B] Z80:5cyc, R800:1cyc
0002b7: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0002b8: c8

[	LD C , 3] Z80:8cyc, R800:2cyc
0002b9: 0e 03

[	LD DE , FCB_FEXT] Z80:11cyc, R800:3cyc
0002bb: 11 1b 06

[FL2 :]
	label address: 0x0002be

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
0002be: cd 28 02

[	CP A , 32] Z80:8cyc, R800:2cyc
0002c1: fe 20

[	JP Z , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002c3: ca 36 02

[	LD [ DE ] , A] Z80:8cyc, R800:4cyc
0002c6: 12

[	INC DE] Z80:7cyc, R800:1cyc
0002c7: 13

[	INC B] Z80:5cyc, R800:1cyc
0002c8: 04

[	DEC B] Z80:5cyc, R800:1cyc
0002c9: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0002ca: c8

[	DEC C] Z80:5cyc, R800:1cyc
0002cb: 0d

[	JP Z , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002cc: ca 36 02

[	JR FL2] Z80:13cyc, R800:3cyc
0002cf: 18 ed

[	ENDSCOPE]
	Scope path: 

[	SCOPE DISPLAY_PROGRESS_BAR]
	Scope path: DISPLAY_PROGRESS_BAR:

[DISPLAY_PROGRESS_BAR ::]
	global label address: 0x0002d1

[	PUSH AF] Z80:12cyc, R800:6cyc
0002d1: f5

[	LD HL , PROGRESS] Z80:11cyc, R800:3cyc
0002d2: 21 22 03

[	LD DE , PROGRESS + 1] Z80:11cyc, R800:3cyc
0002d5: 11 23 03

[	LD BC , 16 - 1] Z80:11cyc, R800:3cyc
0002d8: 01 0f 00

[	LD A , 45] Z80:8cyc, R800:2cyc
0002db: 3e 2d

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
0002dd: 77

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
0002de: ed b0

[	POP AF] Z80:11cyc, R800:5cyc
0002e0: f1

[	LD B , A] Z80:5cyc, R800:2cyc
0002e1: 47

[	LD A , [ PROGRESS_MAX ]] Z80:14cyc, R800:6cyc
0002e2: 3a 10 06

[	SUB A , B] Z80:5cyc, R800:1cyc
0002e5: 90

[	PUSH AF] Z80:12cyc, R800:6cyc
0002e6: f5

[	LD A , [ PROGRESS_MAX ]] Z80:14cyc, R800:6cyc
0002e7: 3a 10 06

[	LD E , A] Z80:5cyc, R800:2cyc
0002ea: 5f

[	POP AF] Z80:11cyc, R800:5cyc
0002eb: f1

[	LD C , A] Z80:5cyc, R800:2cyc
0002ec: 4f

[	XOR A , A] Z80:5cyc, R800:1cyc
0002ed: af

[	LD D , A] Z80:5cyc, R800:2cyc
0002ee: 57

[	LD B , 12] Z80:8cyc, R800:2cyc
0002ef: 06 0c

[DIVIDE_LOOP :]
	label address: 0x0002f1

[	SLA C] Z80:10cyc, R800:2cyc
0002f1: cb 21

[	RLA] Z80:5cyc, R800:1cyc
0002f3: 17

[	SUB A , E] Z80:5cyc, R800:1cyc
0002f4: 93

[	JR NC , SKIP_ADD] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0002f5: 30 01

[	ADD A , E] Z80:5cyc, R800:1cyc
0002f7: 83

[SKIP_ADD :]
	label address: 0x0002f8

[	CCF] Z80:5cyc, R800:1cyc
0002f8: 3f

[	RL D] Z80:10cyc, R800:2cyc
0002f9: cb 12

[	DJNZ DIVIDE_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0002fb: 10 f4

[	LD A , D] Z80:5cyc, R800:2cyc
0002fd: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
0002fe: b7

[	JR Z , SKIP_FILL] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0002ff: 28 0f

[	LD C , A] Z80:5cyc, R800:2cyc
000301: 4f

[	LD HL , PROGRESS] Z80:11cyc, R800:3cyc
000302: 21 22 03

[	LD DE , PROGRESS + 1] Z80:11cyc, R800:3cyc
000305: 11 23 03

[	LD A , 35] Z80:8cyc, R800:2cyc
000308: 3e 23

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00030a: 77

[	DEC C] Z80:5cyc, R800:1cyc
00030b: 0d

[	JR Z , SKIP_FILL] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00030c: 28 02

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00030e: ed b0

[SKIP_FILL :]
	label address: 0x000310

[	LD DE , PROGRESS_BAR] Z80:11cyc, R800:3cyc
000310: 11 17 03

[	CALL PUTS] Z80:18cyc, R800:5cyc
000313: cd 3d 06

[	RET] Z80:11cyc, R800:5cyc
000316: c9

[PROGRESS_BAR :]
	label address: 0x000317

[	DS "WRITE ROM |"]
000317: 57 52 49 54 45 20 52 4f
00031f: 4d 20 7c

[PROGRESS :]
	label address: 0x000322

[SPACE 16 , 45]
	Allocate space: 16byte(s)
		Fill value: 45

[	DS "|\r"]
000332: 7c 0d

[	DB 0]
000334: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE FILE_OPEN]
	Scope path: FILE_OPEN:

[FILE_OPEN ::]
	global label address: 0x000335

[	LD DE , FCB] Z80:11cyc, R800:3cyc
000335: 11 12 06

[	LD C , _FOPEN] Z80:8cyc, R800:2cyc
000338: 0e 0f

[	CALL BDOS] Z80:18cyc, R800:5cyc
00033a: cd 05 00

[	OR A , A] Z80:5cyc, R800:1cyc
00033d: b7

[	LD DE , CANNOT_OPEN_MESSAGE] Z80:11cyc, R800:3cyc
00033e: 11 7c 03

[	JR NZ , PUT_ERROR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000341: 20 34

[	LD HL , [ FCB_FILSIZ ]] Z80:17cyc, R800:7cyc
000343: 2a 22 06

[	LD A , H] Z80:5cyc, R800:2cyc
000346: 7c

[	AND A , 0X1F] Z80:8cyc, R800:2cyc
000347: e6 1f

[	OR A , L] Z80:5cyc, R800:1cyc
000349: b5

[	LD DE , IS_NOT_8KB_MESSAGE] Z80:11cyc, R800:3cyc
00034a: 11 90 03

[	JR NZ , PUT_ERROR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00034d: 20 28

[	LD A , H] Z80:5cyc, R800:2cyc
00034f: 7c

[	LD HL , [ FCB_FILSIZ + 2 ]] Z80:17cyc, R800:7cyc
000350: 2a 24 06

[	OR A , H] Z80:5cyc, R800:1cyc
000353: b4

[	OR A , L] Z80:5cyc, R800:1cyc
000354: b5

[	LD DE , IS_ZERO_MESSAGE] Z80:11cyc, R800:3cyc
000355: 11 ba 03

[	JR Z , PUT_ERROR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000358: 28 1d

[	LD HL , [ FCB_FILSIZ + 1 ]] Z80:17cyc, R800:7cyc
00035a: 2a 23 06

[	SRL H] Z80:10cyc, R800:2cyc
00035d: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
00035f: cb 1d

[	SRL H] Z80:10cyc, R800:2cyc
000361: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
000363: cb 1d

[	LD [ FILE_SIZE ] , HL] Z80:17cyc, R800:7cyc
000365: 22 09 06

[	LD C , _SETDTA] Z80:8cyc, R800:2cyc
000368: 0e 1a

[	LD DE , 0X2000] Z80:11cyc, R800:3cyc
00036a: 11 00 20

[	CALL BDOS] Z80:18cyc, R800:5cyc
00036d: cd 05 00

[	LD HL , 1024] Z80:11cyc, R800:3cyc
000370: 21 00 04

[	LD [ FCB_S2 ] , HL] Z80:17cyc, R800:7cyc
000373: 22 20 06

[	RET] Z80:11cyc, R800:5cyc
000376: c9

[PUT_ERROR :]
	label address: 0x000377

[	CALL PUTS] Z80:18cyc, R800:5cyc
000377: cd 3d 06

[	OR A , A] Z80:5cyc, R800:1cyc
00037a: b7

[	RET] Z80:11cyc, R800:5cyc
00037b: c9

[CANNOT_OPEN_MESSAGE :]
	label address: 0x00037c

[	DS "Cannot open file.\r\n"]
00037c: 43 61 6e 6e 6f 74 20 6f
000384: 70 65 6e 20 66 69 6c 65
00038c: 2e 0d 0a

[	DB 0]
00038f: 00

[IS_NOT_8KB_MESSAGE :]
	label address: 0x000390

[	DS "The file size is not a multiple of 8KB.\r\n"]
000390: 54 68 65 20 66 69 6c 65
000398: 20 73 69 7a 65 20 69 73
0003a0: 20 6e 6f 74 20 61 20 6d
0003a8: 75 6c 74 69 70 6c 65 20
0003b0: 6f 66 20 38 4b 42 2e 0d
0003b8: 0a

[	DB 0]
0003b9: 00

[IS_ZERO_MESSAGE :]
	label address: 0x0003ba

[	DS "File is empty.\r\n"]
0003ba: 46 69 6c 65 20 69 73 20
0003c2: 65 6d 70 74 79 2e 0d 0a

[	DB 0]
0003ca: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE USAGE]
	Scope path: USAGE:

[USAGE ::]
	global label address: 0x0003cb

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
0003cb: cd 19 05

[	LD DE , USAGE_MESSAGE] Z80:11cyc, R800:3cyc
0003ce: 11 d9 03

[	CALL PUTS] Z80:18cyc, R800:5cyc
0003d1: cd 3d 06

[	LD C , _TERM0] Z80:8cyc, R800:2cyc
0003d4: 0e 00

[	JP BDOS] Z80:11cyc, R800:5cyc
0003d6: c3 05 00

[USAGE_MESSAGE :]
	label address: 0x0003d9

[	DS "Usage> WRTSST [/Sx][/Sx-y] file_name.rom\r\n"]
0003d9: 55 73 61 67 65 3e 20 57
0003e1: 52 54 53 53 54 20 5b 2f
0003e9: 53 78 5d 5b 2f 53 78 2d
0003f1: 79 5d 20 66 69 6c 65 5f
0003f9: 6e 61 6d 65 2e 72 6f 6d
000401: 0d 0a

[	DS "  /Sx ........ Rewrite in SLOT#x.\r\n"]
000403: 20 20 2f 53 78 20 2e 2e
00040b: 2e 2e 2e 2e 2e 2e 20 52
000413: 65 77 72 69 74 65 20 69
00041b: 6e 20 53 4c 4f 54 23 78
000423: 2e 0d 0a

[	DS "  /Sx-y ...... Rewrite in SLOT#x-y.\r\n"]
000426: 20 20 2f 53 78 2d 79 20
00042e: 2e 2e 2e 2e 2e 2e 20 52
000436: 65 77 72 69 74 65 20 69
00043e: 6e 20 53 4c 4f 54 23 78
000446: 2d 79 2e 0d 0a

[	DS "  /S omitted . Auto detect.\r\n"]
00044b: 20 20 2f 53 20 6f 6d 69
000453: 74 74 65 64 20 2e 20 41
00045b: 75 74 6f 20 64 65 74 65
000463: 63 74 2e 0d 0a

[	DB 0]
000468: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE DISPLAY_TARGET_SLOT]
	Scope path: DISPLAY_TARGET_SLOT:

[DISPLAY_TARGET_SLOT ::]
	global label address: 0x000469

[	LD DE , SLOT_MESSAGE] Z80:11cyc, R800:3cyc
000469: 11 8c 04

[	CALL PUTS] Z80:18cyc, R800:5cyc
00046c: cd 3d 06

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00046f: 3a 08 06

[	AND A , 3] Z80:8cyc, R800:2cyc
000472: e6 03

[	CALL PUTHEX_C] Z80:18cyc, R800:5cyc
000474: cd 5b 06

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000477: 3a 08 06

[	RLCA] Z80:5cyc, R800:1cyc
00047a: 07

[	RET NC] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00047b: d0

[	LD DE , BAR_MESSAGE] Z80:11cyc, R800:3cyc
00047c: 11 92 04

[	CALL PUTS] Z80:18cyc, R800:5cyc
00047f: cd 3d 06

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000482: 3a 08 06

[	RRA] Z80:5cyc, R800:1cyc
000485: 1f

[	RRA] Z80:5cyc, R800:1cyc
000486: 1f

[	AND A , 3] Z80:8cyc, R800:2cyc
000487: e6 03

[	JP PUTHEX_C] Z80:11cyc, R800:5cyc
000489: c3 5b 06

[SLOT_MESSAGE :]
	label address: 0x00048c

[	DS "SLOT#"]
00048c: 53 4c 4f 54 23

[	DB 0]
000491: 00

[BAR_MESSAGE :]
	label address: 0x000492

[	DS "-"]
000492: 2d

[	DB 0]
000493: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE DISPLAY_TARGET_FNAME]
	Scope path: DISPLAY_TARGET_FNAME:

[DISPLAY_TARGET_FNAME ::]
	global label address: 0x000494

[	LD DE , FNAME_MESSAGE] Z80:11cyc, R800:3cyc
000494: 11 cf 04

[	CALL PUTS] Z80:18cyc, R800:5cyc
000497: cd 3d 06

[	LD HL , FCB_FNAME] Z80:11cyc, R800:3cyc
00049a: 21 13 06

[	LD B , 8] Z80:8cyc, R800:2cyc
00049d: 06 08

[L1 :]
	label address: 0x00049f

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00049f: 7e

[	INC HL] Z80:7cyc, R800:1cyc
0004a0: 23

[	CP A , 32] Z80:8cyc, R800:2cyc
0004a1: fe 20

[	JR Z , S1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0004a3: 28 0c

[	PUSH HL] Z80:12cyc, R800:6cyc
0004a5: e5

[	PUSH BC] Z80:12cyc, R800:6cyc
0004a6: c5

[	LD E , A] Z80:5cyc, R800:2cyc
0004a7: 5f

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0004a8: 0e 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
0004aa: cd 05 00

[	POP BC] Z80:11cyc, R800:5cyc
0004ad: c1

[	POP HL] Z80:11cyc, R800:5cyc
0004ae: e1

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0004af: 10 ee

[S1 :]
	label address: 0x0004b1

[	LD E , 46] Z80:8cyc, R800:2cyc
0004b1: 1e 2e

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0004b3: 0e 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
0004b5: cd 05 00

[	LD HL , FCB_FEXT] Z80:11cyc, R800:3cyc
0004b8: 21 1b 06

[	LD B , 3] Z80:8cyc, R800:2cyc
0004bb: 06 03

[L2 :]
	label address: 0x0004bd

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0004bd: 7e

[	INC HL] Z80:7cyc, R800:1cyc
0004be: 23

[	CP A , 32] Z80:8cyc, R800:2cyc
0004bf: fe 20

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0004c1: c8

[	PUSH HL] Z80:12cyc, R800:6cyc
0004c2: e5

[	PUSH BC] Z80:12cyc, R800:6cyc
0004c3: c5

[	LD E , A] Z80:5cyc, R800:2cyc
0004c4: 5f

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0004c5: 0e 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
0004c7: cd 05 00

[	POP BC] Z80:11cyc, R800:5cyc
0004ca: c1

[	POP HL] Z80:11cyc, R800:5cyc
0004cb: e1

[	DJNZ L2] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0004cc: 10 ef

[	RET] Z80:11cyc, R800:5cyc
0004ce: c9

[FNAME_MESSAGE :]
	label address: 0x0004cf

[	DS "File name:"]
0004cf: 46 69 6c 65 20 6e 61 6d
0004d7: 65 3a

[	DB 0]
0004d9: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE CHECK_TARGET_SLOT]
	Scope path: CHECK_TARGET_SLOT:

[CHECK_TARGET_SLOT ::]
	global label address: 0x0004da

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0004da: 3a 08 06

[	INC A] Z80:5cyc, R800:1cyc
0004dd: 3c

[	JP NZ , CONSTANT_TARGET] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0004de: c2 15 05

[	LD HL , EXPTBL] Z80:11cyc, R800:3cyc
0004e1: 21 c1 fc

[L1 :]
	label address: 0x0004e4

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0004e4: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
0004e5: b7

[	JP M , EXPANDED_SLOT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0004e6: fa f7 04

[BASIC_SLOT :]
	label address: 0x0004e9

[	LD A , L] Z80:5cyc, R800:2cyc
0004e9: 7d

[	SUB A , EXPTBL & 255] Z80:8cyc, R800:2cyc
0004ea: d6 c1

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
0004ec: 32 08 06

[	PUSH HL] Z80:12cyc, R800:6cyc
0004ef: e5

[	CALL DETECT_TARGET] Z80:18cyc, R800:5cyc
0004f0: cd 2b 05

[	POP HL] Z80:11cyc, R800:5cyc
0004f3: e1

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0004f4: c8

[	JR NEXT_SLOT] Z80:13cyc, R800:3cyc
0004f5: 18 14

[EXPANDED_SLOT :]
	label address: 0x0004f7

[	OR A , 0X80] Z80:8cyc, R800:2cyc
0004f7: f6 80

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
0004f9: 32 08 06

[	PUSH HL] Z80:12cyc, R800:6cyc
0004fc: e5

[	CALL DETECT_TARGET] Z80:18cyc, R800:5cyc
0004fd: cd 2b 05

[	POP HL] Z80:11cyc, R800:5cyc
000500: e1

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000501: c8

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000502: 3a 08 06

[	ADD A , 0X04] Z80:8cyc, R800:2cyc
000505: c6 04

[	CP A , 0X90] Z80:8cyc, R800:2cyc
000507: fe 90

[	JR C , EXPANDED_SLOT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000509: 38 ec

[NEXT_SLOT :]
	label address: 0x00050b

[	LD A , L] Z80:5cyc, R800:2cyc
00050b: 7d

[	INC A] Z80:5cyc, R800:1cyc
00050c: 3c

[	LD L , A] Z80:5cyc, R800:2cyc
00050d: 6f

[	CP A , ( EXPTBL & 255 ) + 4] Z80:8cyc, R800:2cyc
00050e: fe c5

[	JR C , L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000510: 38 d2

[	XOR A , A] Z80:5cyc, R800:1cyc
000512: af

[	INC A] Z80:5cyc, R800:1cyc
000513: 3c

[	RET] Z80:11cyc, R800:5cyc
000514: c9

[CONSTANT_TARGET :]
	label address: 0x000515

[	DEC A] Z80:5cyc, R800:1cyc
000515: 3d

[	JP DETECT_TARGET] Z80:11cyc, R800:5cyc
000516: c3 2b 05

[	ENDSCOPE]
	Scope path: 

[	SCOPE RESTORE_DOS_SLOT]
	Scope path: RESTORE_DOS_SLOT:

[RESTORE_DOS_SLOT ::]
	global label address: 0x000519

[	LD A , [ RAMAD1 ]] Z80:14cyc, R800:6cyc
000519: 3a 42 f3

[	LD H , 0X40] Z80:8cyc, R800:2cyc
00051c: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
00051e: cd 24 00

[	LD A , [ RAMAD2 ]] Z80:14cyc, R800:6cyc
000521: 3a 43 f3

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000524: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000526: cd 24 00

[	EI] Z80:5cyc, R800:1cyc
000529: fb

[	RET] Z80:11cyc, R800:5cyc
00052a: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE DETECT_TARGET]
	Scope path: DETECT_TARGET:

[DETECT_TARGET ::]
	global label address: 0x00052b

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00052b: 3a 08 06

[	CALL IS_SLOT_SCC] Z80:18cyc, R800:5cyc
00052e: cd 17 07

[	JP Z , DETECT_SCC] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000531: ca 47 05

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000534: 3a 08 06

[	CALL IS_SLOT_RC755] Z80:18cyc, R800:5cyc
000537: cd 6a 08

[	JP Z , DETECT_RC755] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00053a: ca 54 05

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00053d: 3a 08 06

[	CALL IS_SLOT_SIMPLE64K] Z80:18cyc, R800:5cyc
000540: cd ad 09

[	JP Z , DETECT_SIMPLE64K] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000543: ca 62 05

[	RET] Z80:11cyc, R800:5cyc
000546: c9

[DETECT_SCC :]
	label address: 0x000547

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000547: 3a 08 06

[	CALL SETUP_SLOT_SCC] Z80:18cyc, R800:5cyc
00054a: cd 4d 07

[	XOR A , A] Z80:5cyc, R800:1cyc
00054d: af

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
00054e: 32 0f 06

[	JP COMMON_PROCESS] Z80:11cyc, R800:5cyc
000551: c3 70 05

[DETECT_RC755 :]
	label address: 0x000554

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000554: 3a 08 06

[	CALL SETUP_SLOT_RC755] Z80:18cyc, R800:5cyc
000557: cd d8 08

[	LD A , 1] Z80:8cyc, R800:2cyc
00055a: 3e 01

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
00055c: 32 0f 06

[	JP COMMON_PROCESS] Z80:11cyc, R800:5cyc
00055f: c3 70 05

[DETECT_SIMPLE64K :]
	label address: 0x000562

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000562: 3a 08 06

[	CALL SETUP_SLOT_SIMPLE64K] Z80:18cyc, R800:5cyc
000565: cd b0 09

[	LD A , 2] Z80:8cyc, R800:2cyc
000568: 3e 02

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
00056a: 32 0f 06

[	JP COMMON_PROCESS] Z80:11cyc, R800:5cyc
00056d: c3 70 05

[COMMON_PROCESS :]
	label address: 0x000570

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000570: cd 19 05

[	LD DE , MANUFACTURE_ID_MESSAGE] Z80:11cyc, R800:3cyc
000573: 11 b0 05

[	CALL PUTS] Z80:18cyc, R800:5cyc
000576: cd 3d 06

[	LD A , [ MANUFACTURE_ID ]] Z80:14cyc, R800:6cyc
000579: 3a 0d 06

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
00057c: cd 7a 06

[	CALL PUTS] Z80:18cyc, R800:5cyc
00057f: cd 3d 06

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000582: cd 3a 06

[	LD DE , DEVICE_ID_MESSAGE] Z80:11cyc, R800:3cyc
000585: 11 c0 05

[	CALL PUTS] Z80:18cyc, R800:5cyc
000588: cd 3d 06

[	LD A , [ DEVICE_ID ]] Z80:14cyc, R800:6cyc
00058b: 3a 0e 06

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
00058e: cd 9a 06

[	CALL PUTS] Z80:18cyc, R800:5cyc
000591: cd 3d 06

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000594: cd 3a 06

[	LD DE , CARTRIDGE_TYPE_MESSAGE] Z80:11cyc, R800:3cyc
000597: 11 d0 05

[	CALL PUTS] Z80:18cyc, R800:5cyc
00059a: cd 3d 06

[	LD HL , CARTRIDGE_TYPE_TABLE] Z80:11cyc, R800:3cyc
00059d: 21 02 06

[	LD A , [ ROM_TYPE ]] Z80:14cyc, R800:6cyc
0005a0: 3a 0f 06

[	ADD A , A] Z80:5cyc, R800:1cyc
0005a3: 87

[	LD E , A] Z80:5cyc, R800:2cyc
0005a4: 5f

[	LD D , 0] Z80:8cyc, R800:2cyc
0005a5: 16 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0005a7: 19

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
0005a8: 5e

[	INC HL] Z80:7cyc, R800:1cyc
0005a9: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
0005aa: 56

[	CALL PUTS] Z80:18cyc, R800:5cyc
0005ab: cd 3d 06

[	XOR A , A] Z80:5cyc, R800:1cyc
0005ae: af

[	RET] Z80:11cyc, R800:5cyc
0005af: c9

[MANUFACTURE_ID_MESSAGE :]
	label address: 0x0005b0

[	DS "MANUFACTURE ID:"]
0005b0: 4d 41 4e 55 46 41 43 54
0005b8: 55 52 45 20 49 44 3a

[	DB 0]
0005bf: 00

[DEVICE_ID_MESSAGE :]
	label address: 0x0005c0

[	DS "DEVICE ID     :"]
0005c0: 44 45 56 49 43 45 20 49
0005c8: 44 20 20 20 20 20 3a

[	DB 0]
0005cf: 00

[CARTRIDGE_TYPE_MESSAGE :]
	label address: 0x0005d0

[	DS "CARTRIDGE TYPE:"]
0005d0: 43 41 52 54 52 49 44 47
0005d8: 45 20 54 59 50 45 3a

[	DB 0]
0005df: 00

[MEGA_SCC_MESSAGE :]
	label address: 0x0005e0

[	DS "MegaSCC\r\n"]
0005e0: 4d 65 67 61 53 43 43 0d
0005e8: 0a

[	DB 0]
0005e9: 00

[RC755_MESSAGE :]
	label address: 0x0005ea

[	DS "ESE-RC755\r\n"]
0005ea: 45 53 45 2d 52 43 37 35
0005f2: 35 0d 0a

[	DB 0]
0005f5: 00

[SIMPLE64K_MESSAGE :]
	label address: 0x0005f6

[	DS "Simple64K\r\n"]
0005f6: 53 69 6d 70 6c 65 36 34
0005fe: 4b 0d 0a

[	DB 0]
000601: 00

[CARTRIDGE_TYPE_TABLE :]
	label address: 0x000602

[	DW MEGA_SCC_MESSAGE]
000602: e0 05

[	DW RC755_MESSAGE]
000604: ea 05

[	DW SIMPLE64K_MESSAGE]
000606: f6 05

[	ENDSCOPE]
	Scope path: 

[TARGET_SLOT ::]
	global label address: 0x000608

[	DB 0XFF]
000608: ff

[FILE_SIZE ::]
	global label address: 0x000609

[	DW 0]
000609: 00 00

[ROM_SIZE ::]
	global label address: 0x00060b

[	DW 0]
00060b: 00 00

[MANUFACTURE_ID ::]
	global label address: 0x00060d

[	DB 0]
00060d: 00

[DEVICE_ID ::]
	global label address: 0x00060e

[	DB 0]
00060e: 00

[ROM_TYPE ::]
	global label address: 0x00060f

[	DB 0]
00060f: 00

[PROGRESS_MAX ::]
	global label address: 0x000610

[	DB 0]
000610: 00

[BANK_BACK :]
	label address: 0x000611

[	DB 0]
000611: 00

[FCB ::]
	global label address: 0x000612

[FCB_DR ::]
	global label address: 0x000612

[	DB 0]
000612: 00

[FCB_FNAME ::]
	global label address: 0x000613

[	DS "        "]
000613: 20 20 20 20 20 20 20 20

[FCB_FEXT ::]
	global label address: 0x00061b

[	DS "   "]
00061b: 20 20 20

[FCB_EX ::]
	global label address: 0x00061e

[	DB 0]
00061e: 00

[FCB_S1 ::]
	global label address: 0x00061f

[	DB 0]
00061f: 00

[FCB_S2 ::]
	global label address: 0x000620

[	DB 0]
000620: 00

[FCB_RC ::]
	global label address: 0x000621

[	DB 0]
000621: 00

[FCB_FILSIZ ::]
	global label address: 0x000622

[	DW 0 , 0]
000622: 00 00 00 00

[FCB_DATE ::]
	global label address: 0x000626

[	DW 0]
000626: 00 00

[FCB_TIME ::]
	global label address: 0x000628

[	DW 0]
000628: 00 00

[FCB_DEVID ::]
	global label address: 0x00062a

[	DB 0]
00062a: 00

[FCB_DIRLOC ::]
	global label address: 0x00062b

[	DB 0]
00062b: 00

[FCB_STRCLS ::]
	global label address: 0x00062c

[	DW 0]
00062c: 00 00

[FCB_CLRCLS ::]
	global label address: 0x00062e

[	DW 0]
00062e: 00 00

[FCB_CLSOFF ::]
	global label address: 0x000630

[	DW 0]
000630: 00 00

[FCB_CR ::]
	global label address: 0x000632

[	DB 0]
000632: 00

[FCB_RN ::]
	global label address: 0x000633

[	DW 0 , 0]
000633: 00 00 00 00

[	INCLUDE ".//stdio.asm"] begin
[	SCOPE PUTS_CRLF]
	Scope path: PUTS_CRLF:

[CRLF :]
	label address: 0x000637

[	DS "\r\n"]
000637: 0d 0a

[	DB 0]
000639: 00

[PUTS_CRLF ::]
	global label address: 0x00063a

[	LD DE , CRLF] Z80:11cyc, R800:3cyc
00063a: 11 37 06

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTS]
	Scope path: PUTS:

[PUTS ::]
	global label address: 0x00063d

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00063d: 1a

[	INC DE] Z80:7cyc, R800:1cyc
00063e: 13

[	OR A , A] Z80:5cyc, R800:1cyc
00063f: b7

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000640: c8

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
000641: 0e 06

[	PUSH DE] Z80:12cyc, R800:6cyc
000643: d5

[	LD E , A] Z80:5cyc, R800:2cyc
000644: 5f

[	CALL BDOS] Z80:18cyc, R800:5cyc
000645: cd 05 00

[	POP DE] Z80:11cyc, R800:5cyc
000648: d1

[	JR PUTS] Z80:13cyc, R800:3cyc
000649: 18 f2

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTHEX16]
	Scope path: PUTHEX16:

[PUTHEX16 ::]
	global label address: 0x00064b

[	PUSH HL] Z80:12cyc, R800:6cyc
00064b: e5

[	LD A , H] Z80:5cyc, R800:2cyc
00064c: 7c

[	CALL PUTHEX8] Z80:18cyc, R800:5cyc
00064d: cd 52 06

[	POP HL] Z80:11cyc, R800:5cyc
000650: e1

[	LD A , L] Z80:5cyc, R800:2cyc
000651: 7d

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTHEX8]
	Scope path: PUTHEX8:

[PUTHEX8 ::]
	global label address: 0x000652

[	PUSH AF] Z80:12cyc, R800:6cyc
000652: f5

[	RRCA] Z80:5cyc, R800:1cyc
000653: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000654: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000655: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000656: 0f

[	CALL PUTHEX_C] Z80:18cyc, R800:5cyc
000657: cd 5b 06

[	POP AF] Z80:11cyc, R800:5cyc
00065a: f1

[PUTHEX_C ::]
	global label address: 0x00065b

[	AND A , 0X0F] Z80:8cyc, R800:2cyc
00065b: e6 0f

[	LD HL , HEX_CHARACTERS] Z80:11cyc, R800:3cyc
00065d: 21 6a 06

[	LD D , 0] Z80:8cyc, R800:2cyc
000660: 16 00

[	LD E , A] Z80:5cyc, R800:2cyc
000662: 5f

[	ADD HL , DE] Z80:12cyc, R800:1cyc
000663: 19

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
000664: 5e

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
000665: 0e 06

[	JP BDOS] Z80:11cyc, R800:5cyc
000667: c3 05 00

[HEX_CHARACTERS :]
	label address: 0x00066a

[	DS "0123456789ABCDEF"]
00066a: 30 31 32 33 34 35 36 37
000672: 38 39 41 42 43 44 45 46

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//stdio.asm"] end

[	INCLUDE ".//flashrom.asm"] begin
[	SCOPE GET_MANUFACTURE_NAME]
	Scope path: GET_MANUFACTURE_NAME:

[GET_MANUFACTURE_NAME ::]
	global label address: 0x00067a

[	CP A , MID_AMD] Z80:8cyc, R800:2cyc
00067a: fe 01

[	LD DE , S_AMD] Z80:11cyc, R800:3cyc
00067c: 11 8a 06

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00067f: c8

[	CP A , MID_SST] Z80:8cyc, R800:2cyc
000680: fe bf

[	LD DE , S_SST] Z80:11cyc, R800:3cyc
000682: 11 8e 06

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000685: c8

[	LD DE , S_UNKNOWN] Z80:11cyc, R800:3cyc
000686: 11 92 06

[	RET] Z80:11cyc, R800:5cyc
000689: c9

[S_AMD :]
	label address: 0x00068a

[	DS "AMD"]
00068a: 41 4d 44

[	DB 0]
00068d: 00

[S_SST :]
	label address: 0x00068e

[	DS "SST"]
00068e: 53 53 54

[	DB 0]
000691: 00

[S_UNKNOWN ::]
	global label address: 0x000692

[	DS "Unknown"]
000692: 55 6e 6b 6e 6f 77 6e

[	DB 0]
000699: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE GET_DEVICE_NAME]
	Scope path: GET_DEVICE_NAME:

[GET_DEVICE_NAME ::]
	global label address: 0x00069a

[	LD HL , 512] Z80:11cyc, R800:3cyc
00069a: 21 00 02

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
00069d: 22 0b 06

[	CP A , DID_AM29F040B] Z80:8cyc, R800:2cyc
0006a0: fe a4

[	LD DE , S_AM29F040B] Z80:11cyc, R800:3cyc
0006a2: 11 ce 06

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0006a5: c8

[	CP A , DID_SST39SF040] Z80:8cyc, R800:2cyc
0006a6: fe b7

[	LD DE , S_SST39SF040] Z80:11cyc, R800:3cyc
0006a8: 11 f0 06

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0006ab: c8

[	LD HL , 256] Z80:11cyc, R800:3cyc
0006ac: 21 00 01

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
0006af: 22 0b 06

[	CP A , DID_SST39SF020A] Z80:8cyc, R800:2cyc
0006b2: fe b6

[	LD DE , S_SST39SF020A] Z80:11cyc, R800:3cyc
0006b4: 11 e4 06

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0006b7: c8

[	LD HL , 128] Z80:11cyc, R800:3cyc
0006b8: 21 80 00

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
0006bb: 22 0b 06

[	CP A , DID_SST39SF010A] Z80:8cyc, R800:2cyc
0006be: fe b5

[	LD DE , S_SST39SF010A] Z80:11cyc, R800:3cyc
0006c0: 11 d8 06

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0006c3: c8

[	LD HL , 0] Z80:11cyc, R800:3cyc
0006c4: 21 00 00

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
0006c7: 22 0b 06

[	LD DE , S_UNKNOWN] Z80:11cyc, R800:3cyc
0006ca: 11 92 06

[	RET] Z80:11cyc, R800:5cyc
0006cd: c9

[S_AM29F040B :]
	label address: 0x0006ce

[	DS "AM29F040B"]
0006ce: 41 4d 32 39 46 30 34 30
0006d6: 42

[	DB 0]
0006d7: 00

[S_SST39SF010A :]
	label address: 0x0006d8

[	DS "SST39SF010A"]
0006d8: 53 53 54 33 39 53 46 30
0006e0: 31 30 41

[	DB 0]
0006e3: 00

[S_SST39SF020A :]
	label address: 0x0006e4

[	DS "SST39SF020A"]
0006e4: 53 53 54 33 39 53 46 30
0006ec: 32 30 41

[	DB 0]
0006ef: 00

[S_SST39SF040 :]
	label address: 0x0006f0

[	DS "SST39SF040"]
0006f0: 53 53 54 33 39 53 46 30
0006f8: 34 30

[	DB 0]
0006fa: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_FLASH_COMMAND]
	Scope path: SETUP_FLASH_COMMAND:

[SETUP_FLASH_COMMAND ::]
	global label address: 0x0006fb

[	LD DE , JUMP_TABLE] Z80:11cyc, R800:3cyc
0006fb: 11 0b 07

[	LD BC , JUMP_TABLE_END - JUMP_TABLE] Z80:11cyc, R800:3cyc
0006fe: 01 0c 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000701: ed b0

[	RET] Z80:11cyc, R800:5cyc
000703: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE IS_ROM]
	Scope path: IS_ROM:

[IS_ROM ::]
	global label address: 0x000704

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000704: 7e

[	CPL] Z80:5cyc, R800:1cyc
000705: 2f

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
000706: 77

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
000707: be

[	CPL] Z80:5cyc, R800:1cyc
000708: 2f

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
000709: 77

[	RET] Z80:11cyc, R800:5cyc
00070a: c9

[	ENDSCOPE]
	Scope path: 

[JUMP_TABLE :]
	label address: 0x00070b

[FLASH_CHIP_ERASE ::]
	global label address: 0x00070b

[	JP 0] Z80:11cyc, R800:5cyc
00070b: c3 00 00

[FLASH_WRITE_8KB ::]
	global label address: 0x00070e

[	JP 0] Z80:11cyc, R800:5cyc
00070e: c3 00 00

[FLASH_SET_BANK ::]
	global label address: 0x000711

[	JP 0] Z80:11cyc, R800:5cyc
000711: c3 00 00

[FLASH_GET_START_BANK ::]
	global label address: 0x000714

[	JP 0] Z80:11cyc, R800:5cyc
000714: c3 00 00

[JUMP_TABLE_END :]
	label address: 0x000717

[	INCLUDE ".//flashrom.asm"] end

[	INCLUDE ".//scc.asm"] begin
[	SCOPE IS_SLOT_SCC]
	Scope path: IS_SLOT_SCC:

[IS_SLOT_SCC ::]
	global label address: 0x000717

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000717: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000719: cd 24 00

[	LD A , 0X3F] Z80:8cyc, R800:2cyc
00071c: 3e 3f

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
00071e: 32 00 90

[	LD H , 0X98] Z80:8cyc, R800:2cyc
000721: 26 98

[	LD B , 0X80] Z80:8cyc, R800:2cyc
000723: 06 80

[L1 :]
	label address: 0x000725

[	DEC B] Z80:5cyc, R800:1cyc
000725: 05

[	LD L , B] Z80:5cyc, R800:2cyc
000726: 68

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000727: cd 04 07

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00072a: c0

[	INC B] Z80:5cyc, R800:1cyc
00072b: 04

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00072c: 10 f7

[	LD H , 0X80] Z80:8cyc, R800:2cyc
00072e: 26 80

[L2 :]
	label address: 0x000730

[	DEC B] Z80:5cyc, R800:1cyc
000730: 05

[	LD L , B] Z80:5cyc, R800:2cyc
000731: 68

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000732: cd 04 07

[	JR Z , NOT_SCC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000735: 28 13

[	INC B] Z80:5cyc, R800:1cyc
000737: 04

[	DJNZ L2] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000738: 10 f6

[	LD A , B] Z80:5cyc, R800:2cyc
00073a: 78

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
00073b: 32 00 90

[L3 :]
	label address: 0x00073e

[	DEC B] Z80:5cyc, R800:1cyc
00073e: 05

[	LD L , B] Z80:5cyc, R800:2cyc
00073f: 68

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000740: cd 04 07

[	JR Z , NOT_SCC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000743: 28 05

[	INC B] Z80:5cyc, R800:1cyc
000745: 04

[	DJNZ L3] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000746: 10 f6

[	XOR A , A] Z80:5cyc, R800:1cyc
000748: af

[	RET] Z80:11cyc, R800:5cyc
000749: c9

[NOT_SCC :]
	label address: 0x00074a

[	XOR A , A] Z80:5cyc, R800:1cyc
00074a: af

[	INC A] Z80:5cyc, R800:1cyc
00074b: 3c

[	RET] Z80:11cyc, R800:5cyc
00074c: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_SLOT_SCC]
	Scope path: SETUP_SLOT_SCC:

[SETUP_SLOT_SCC ::]
	global label address: 0x00074d

[	PUSH AF] Z80:12cyc, R800:6cyc
00074d: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
00074e: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000750: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
000753: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000754: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000756: cd 24 00

[	XOR A , A] Z80:5cyc, R800:1cyc
000759: af

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
00075a: 32 00 50

[	LD [ SCC_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
00075d: 32 00 70

[	INC A] Z80:5cyc, R800:1cyc
000760: 3c

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
000761: 32 00 90

[	LD A , 6] Z80:8cyc, R800:2cyc
000764: 3e 06

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000766: 32 00 b0

[	LD HL , SCC_FLASH_JUMP_TABLE] Z80:11cyc, R800:3cyc
000769: 21 a5 07

[	CALL SETUP_FLASH_COMMAND] Z80:18cyc, R800:5cyc
00076c: cd fb 06

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
00076f: 21 00 40

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000772: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000774: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000777: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000779: 32 aa 8a

[	LD A , 0X90] Z80:8cyc, R800:2cyc
00077c: 3e 90

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00077e: 32 55 a5

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
000781: 5e

[	INC HL] Z80:7cyc, R800:1cyc
000782: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
000783: 56

[	LD [ MANUFACTURE_ID ] , DE] Z80:22cyc, R800:8cyc
000784: ed 53 0d 06

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000788: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00078a: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00078d: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00078f: 32 aa 8a

[	LD A , 0XF0] Z80:8cyc, R800:2cyc
000792: 3e f0

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000794: 32 55 a5

[	LD A , [ MANUFACTURE_ID ]] Z80:14cyc, R800:6cyc
000797: 3a 0d 06

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
00079a: cd 7a 06

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00079d: c0

[	LD A , [ DEVICE_ID ]] Z80:14cyc, R800:6cyc
00079e: 3a 0e 06

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
0007a1: cd 9a 06

[	RET] Z80:11cyc, R800:5cyc
0007a4: c9

[SCC_FLASH_JUMP_TABLE :]
	label address: 0x0007a5

[	JP SCC_FLASH_CHIP_ERASE] Z80:11cyc, R800:5cyc
0007a5: c3 13 08

[	JP SCC_FLASH_WRITE_8KB] Z80:11cyc, R800:5cyc
0007a8: c3 b1 07

[	JP SCC_SET_BANK] Z80:11cyc, R800:5cyc
0007ab: c3 5a 08

[	JP SCC_GET_START_BANK] Z80:11cyc, R800:5cyc
0007ae: c3 5e 08

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_FLASH_WRITE_8KB]
	Scope path: SCC_FLASH_WRITE_8KB:

[SCC_FLASH_WRITE_8KB ::]
	global label address: 0x0007b1

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0007b1: 3a 08 06

[	LD H , 0X40] Z80:8cyc, R800:2cyc
0007b4: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0007b6: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0007b9: 3a 08 06

[	LD H , 0X80] Z80:8cyc, R800:2cyc
0007bc: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0007be: cd 24 00

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
0007c1: 3a 11 06

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
0007c4: 32 00 50

[	LD A , 1] Z80:8cyc, R800:2cyc
0007c7: 3e 01

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
0007c9: 32 00 90

[	LD A , 6] Z80:8cyc, R800:2cyc
0007cc: 3e 06

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
0007ce: 32 00 b0

[	LD DE , 0X2000] Z80:11cyc, R800:3cyc
0007d1: 11 00 20

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
0007d4: 21 00 40

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
0007d7: 01 00 20

[LOOP_OF_BC :]
	label address: 0x0007da

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
0007da: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0007dc: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
0007df: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
0007e1: 32 aa 8a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
0007e4: 3e a0

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0007e6: 32 55 a5

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
0007e9: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
0007ea: 77

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
0007eb: 3a 11 06

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
0007ee: 32 00 50

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
0007f1: 1a

[	PUSH BC] Z80:12cyc, R800:6cyc
0007f2: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
0007f3: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x0007f6

[	NOP] Z80:5cyc, R800:1cyc
0007f6: 00

[	NOP] Z80:5cyc, R800:1cyc
0007f7: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0007f8: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0007f9: 28 0b

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0007fb: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
0007fd: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0007fe: 20 f6

[WRITE_ERROR :]
	label address: 0x000800

[	POP BC] Z80:11cyc, R800:5cyc
000800: c1

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000801: cd 19 05

[	SCF] Z80:5cyc, R800:1cyc
000804: 37

[	RET] Z80:11cyc, R800:5cyc
000805: c9

[WRITE_COMPLETE :]
	label address: 0x000806

[	POP BC] Z80:11cyc, R800:5cyc
000806: c1

[	INC DE] Z80:7cyc, R800:1cyc
000807: 13

[	INC HL] Z80:7cyc, R800:1cyc
000808: 23

[	DEC BC] Z80:7cyc, R800:1cyc
000809: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
00080a: 78

[	OR A , C] Z80:5cyc, R800:1cyc
00080b: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00080c: 20 cc

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
00080e: cd 19 05

[	OR A , A] Z80:5cyc, R800:1cyc
000811: b7

[	RET] Z80:11cyc, R800:5cyc
000812: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_FLASH_CHIP_ERASE]
	Scope path: SCC_FLASH_CHIP_ERASE:

[SCC_FLASH_CHIP_ERASE ::]
	global label address: 0x000813

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000813: 3a 08 06

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000816: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000818: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00081b: 3a 08 06

[	LD H , 0X80] Z80:8cyc, R800:2cyc
00081e: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000820: cd 24 00

[	LD A , 1] Z80:8cyc, R800:2cyc
000823: 3e 01

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
000825: 32 00 90

[	LD A , 6] Z80:8cyc, R800:2cyc
000828: 3e 06

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
00082a: 32 00 b0

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00082d: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00082f: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000832: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000834: 32 aa 8a

[	LD A , 0X80] Z80:8cyc, R800:2cyc
000837: 3e 80

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000839: 32 55 a5

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00083c: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00083e: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000841: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000843: 32 aa 8a

[	LD A , 0X10] Z80:8cyc, R800:2cyc
000846: 3e 10

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000848: 32 55 a5

[	LD HL , JIFFY] Z80:11cyc, R800:3cyc
00084b: 21 9e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00084e: 7e

[	ADD A , 10] Z80:8cyc, R800:2cyc
00084f: c6 0a

[	EI] Z80:5cyc, R800:1cyc
000851: fb

[WAIT_L1 :]
	label address: 0x000852

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
000852: be

[	JR NZ , WAIT_L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000853: 20 fd

[	DI] Z80:5cyc, R800:2cyc
000855: f3

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000856: cd 19 05

[	RET] Z80:11cyc, R800:5cyc
000859: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_SET_BANK]
	Scope path: SCC_SET_BANK:

[SCC_SET_BANK ::]
	global label address: 0x00085a

[	LD [ BANK_BACK ] , A] Z80:14cyc, R800:6cyc
00085a: 32 11 06

[	RET] Z80:11cyc, R800:5cyc
00085d: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_GET_START_BANK]
	Scope path: SCC_GET_START_BANK:

[SCC_GET_START_BANK ::]
	global label address: 0x00085e

[	XOR A , A] Z80:5cyc, R800:1cyc
00085e: af

[	RET] Z80:11cyc, R800:5cyc
00085f: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_RESTORE_BANK]
	Scope path: SCC_RESTORE_BANK:

[SCC_RESTORE_BANK ::]
	global label address: 0x000860

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000860: 3a 11 06

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
000863: 32 00 50

[	RET] Z80:11cyc, R800:5cyc
000866: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//scc.asm"] end

[	INCLUDE ".//ese_rc755.asm"] begin
[	SCOPE IS_SLOT_RC755]
	Scope path: IS_SLOT_RC755:

[NOT_RC755 :]
	label address: 0x000867

[	XOR A , A] Z80:5cyc, R800:1cyc
000867: af

[	INC A] Z80:5cyc, R800:1cyc
000868: 3c

[	RET] Z80:11cyc, R800:5cyc
000869: c9

[IS_SLOT_RC755 ::]
	global label address: 0x00086a

[	PUSH AF] Z80:12cyc, R800:6cyc
00086a: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
00086b: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
00086d: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
000870: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000871: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000873: cd 24 00

[	LD HL , 0X5000] Z80:11cyc, R800:3cyc
000876: 21 00 50

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000879: cd 04 07

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00087c: 28 e9

[	LD HL , 0X7000] Z80:11cyc, R800:3cyc
00087e: 21 00 70

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000881: cd 04 07

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000884: 28 e1

[	LD HL , 0X9000] Z80:11cyc, R800:3cyc
000886: 21 00 90

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000889: cd 04 07

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00088c: 28 d9

[	LD HL , 0XB000] Z80:11cyc, R800:3cyc
00088e: 21 00 b0

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000891: cd 04 07

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000894: 28 d1

[	XOR A , A] Z80:5cyc, R800:1cyc
000896: af

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000897: 32 00 60

[	LD A , RC755_FLASH] Z80:8cyc, R800:2cyc
00089a: 3e 80

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
00089c: 32 00 a0

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
00089f: 21 00 40

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
0008a2: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0008a4: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
0008a7: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
0008a9: 32 aa 4a

[	LD A , 0X90] Z80:8cyc, R800:2cyc
0008ac: 3e 90

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0008ae: 32 55 55

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
0008b1: 5e

[	INC HL] Z80:7cyc, R800:1cyc
0008b2: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
0008b3: 56

[	LD [ MANUFACTURE_ID ] , DE] Z80:22cyc, R800:8cyc
0008b4: ed 53 0d 06

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
0008b8: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0008ba: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
0008bd: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
0008bf: 32 aa 4a

[	LD A , 0XF0] Z80:8cyc, R800:2cyc
0008c2: 3e f0

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0008c4: 32 55 55

[	LD A , 0X03] Z80:8cyc, R800:2cyc
0008c7: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
0008c9: 32 00 a0

[	LD A , E] Z80:5cyc, R800:2cyc
0008cc: 7b

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
0008cd: cd 7a 06

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0008d0: c0

[	LD A , [ MANUFACTURE_ID + 1 ]] Z80:14cyc, R800:6cyc
0008d1: 3a 0e 06

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
0008d4: cd 9a 06

[	RET] Z80:11cyc, R800:5cyc
0008d7: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_SLOT_RC755]
	Scope path: SETUP_SLOT_RC755:

[SETUP_SLOT_RC755 ::]
	global label address: 0x0008d8

[	PUSH AF] Z80:12cyc, R800:6cyc
0008d8: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
0008d9: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0008db: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
0008de: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
0008df: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0008e1: cd 24 00

[	LD HL , RC755_FLASH_JUMP_TABLE] Z80:11cyc, R800:3cyc
0008e4: 21 eb 08

[	CALL SETUP_FLASH_COMMAND] Z80:18cyc, R800:5cyc
0008e7: cd fb 06

[	RET] Z80:11cyc, R800:5cyc
0008ea: c9

[RC755_FLASH_JUMP_TABLE :]
	label address: 0x0008eb

[	JP RC755_FLASH_CHIP_ERASE] Z80:11cyc, R800:5cyc
0008eb: c3 59 09

[	JP RC755_FLASH_WRITE_8KB] Z80:11cyc, R800:5cyc
0008ee: c3 f7 08

[	JP RC755_SET_BANK] Z80:11cyc, R800:5cyc
0008f1: c3 a0 09

[	JP RC755_GET_START_BANK] Z80:11cyc, R800:5cyc
0008f4: c3 a4 09

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_FLASH_WRITE_8KB]
	Scope path: RC755_FLASH_WRITE_8KB:

[RC755_FLASH_WRITE_8KB ::]
	global label address: 0x0008f7

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0008f7: 3a 08 06

[	LD H , 0X40] Z80:8cyc, R800:2cyc
0008fa: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0008fc: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0008ff: 3a 08 06

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000902: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000904: cd 24 00

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000907: 3a 11 06

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
00090a: 32 00 60

[	LD DE , 0X2000] Z80:11cyc, R800:3cyc
00090d: 11 00 20

[	LD HL , 0X6000] Z80:11cyc, R800:3cyc
000910: 21 00 60

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
000913: 01 00 20

[	LD A , RC755_FLASH] Z80:8cyc, R800:2cyc
000916: 3e 80

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000918: 32 00 a0

[LOOP_OF_BC :]
	label address: 0x00091b

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00091b: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00091d: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000920: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000922: 32 aa 4a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
000925: 3e a0

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000927: 32 55 55

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00092a: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00092b: 77

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
00092c: 3a 11 06

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
00092f: 32 00 60

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
000932: 1a

[	PUSH BC] Z80:12cyc, R800:6cyc
000933: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
000934: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x000937

[	NOP] Z80:5cyc, R800:1cyc
000937: 00

[	NOP] Z80:5cyc, R800:1cyc
000938: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
000939: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00093a: 28 0b

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00093c: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
00093e: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00093f: 20 f6

[WRITE_ERROR :]
	label address: 0x000941

[	POP BC] Z80:11cyc, R800:5cyc
000941: c1

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000942: cd 19 05

[	SCF] Z80:5cyc, R800:1cyc
000945: 37

[	RET] Z80:11cyc, R800:5cyc
000946: c9

[WRITE_COMPLETE :]
	label address: 0x000947

[	POP BC] Z80:11cyc, R800:5cyc
000947: c1

[	INC DE] Z80:7cyc, R800:1cyc
000948: 13

[	INC HL] Z80:7cyc, R800:1cyc
000949: 23

[	DEC BC] Z80:7cyc, R800:1cyc
00094a: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
00094b: 78

[	OR A , C] Z80:5cyc, R800:1cyc
00094c: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00094d: 20 cc

[	LD A , 0X03] Z80:8cyc, R800:2cyc
00094f: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000951: 32 00 a0

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000954: cd 19 05

[	OR A , A] Z80:5cyc, R800:1cyc
000957: b7

[	RET] Z80:11cyc, R800:5cyc
000958: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_FLASH_CHIP_ERASE]
	Scope path: RC755_FLASH_CHIP_ERASE:

[RC755_FLASH_CHIP_ERASE ::]
	global label address: 0x000959

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000959: 3a 08 06

[	LD H , 0X40] Z80:8cyc, R800:2cyc
00095c: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
00095e: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000961: 3a 08 06

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000964: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000966: cd 24 00

[	LD A , RC755_FLASH] Z80:8cyc, R800:2cyc
000969: 3e 80

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
00096b: 32 00 a0

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00096e: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000970: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000973: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000975: 32 aa 4a

[	LD A , 0X80] Z80:8cyc, R800:2cyc
000978: 3e 80

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00097a: 32 55 55

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00097d: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00097f: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000982: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000984: 32 aa 4a

[	LD A , 0X10] Z80:8cyc, R800:2cyc
000987: 3e 10

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000989: 32 55 55

[	LD HL , JIFFY] Z80:11cyc, R800:3cyc
00098c: 21 9e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00098f: 7e

[	ADD A , 10] Z80:8cyc, R800:2cyc
000990: c6 0a

[	EI] Z80:5cyc, R800:1cyc
000992: fb

[WAIT_L1 :]
	label address: 0x000993

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
000993: be

[	JR NZ , WAIT_L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000994: 20 fd

[	DI] Z80:5cyc, R800:2cyc
000996: f3

[	LD A , 0X03] Z80:8cyc, R800:2cyc
000997: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000999: 32 00 a0

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
00099c: cd 19 05

[	RET] Z80:11cyc, R800:5cyc
00099f: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_SET_BANK]
	Scope path: RC755_SET_BANK:

[RC755_SET_BANK ::]
	global label address: 0x0009a0

[	LD [ BANK_BACK ] , A] Z80:14cyc, R800:6cyc
0009a0: 32 11 06

[	RET] Z80:11cyc, R800:5cyc
0009a3: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_GET_START_BANK]
	Scope path: RC755_GET_START_BANK:

[RC755_GET_START_BANK ::]
	global label address: 0x0009a4

[	XOR A , A] Z80:5cyc, R800:1cyc
0009a4: af

[	RET] Z80:11cyc, R800:5cyc
0009a5: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_RESTORE_BANK]
	Scope path: RC755_RESTORE_BANK:

[RC755_RESTORE_BANK ::]
	global label address: 0x0009a6

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
0009a6: 3a 11 06

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
0009a9: 32 00 60

[	RET] Z80:11cyc, R800:5cyc
0009ac: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//ese_rc755.asm"] end

[	INCLUDE ".//simple64k.asm"] begin
[	SCOPE IS_SLOT_SIMPLE64K]
	Scope path: IS_SLOT_SIMPLE64K:

[IS_SLOT_SIMPLE64K ::]
	global label address: 0x0009ad

[	XOR A , A] Z80:5cyc, R800:1cyc
0009ad: af

[	INC A] Z80:5cyc, R800:1cyc
0009ae: 3c

[	RET] Z80:11cyc, R800:5cyc
0009af: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_SLOT_SIMPLE64K]
	Scope path: SETUP_SLOT_SIMPLE64K:

[SETUP_SLOT_SIMPLE64K ::]
	global label address: 0x0009b0

[	RET] Z80:11cyc, R800:5cyc
0009b0: c9

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//simple64k.asm"] end

<< label >>
BANK_BACK 1553 ( 0x611 )
BDOS 5 ( 0x5 )
CHECK_TARGET_SLOT 1242 ( 0x4da )
CHECK_TARGET_SLOT:BASIC_SLOT 1257 ( 0x4e9 )
CHECK_TARGET_SLOT:CONSTANT_TARGET 1301 ( 0x515 )
CHECK_TARGET_SLOT:EXPANDED_SLOT 1271 ( 0x4f7 )
CHECK_TARGET_SLOT:L1 1252 ( 0x4e4 )
CHECK_TARGET_SLOT:NEXT_SLOT 1291 ( 0x50b )
COMMAND_LINE_OPTIONS 556 ( 0x22c )
COMMAND_LINE_OPTIONS:FILE_EXT 694 ( 0x2b6 )
COMMAND_LINE_OPTIONS:FILE_NAME 658 ( 0x292 )
COMMAND_LINE_OPTIONS:FL1 673 ( 0x2a1 )
COMMAND_LINE_OPTIONS:FL2 702 ( 0x2be )
COMMAND_LINE_OPTIONS:GET_ONE 552 ( 0x228 )
COMMAND_LINE_OPTIONS:L1 566 ( 0x236 )
COMMAND_LINE_OPTIONS:L2 577 ( 0x241 )
COMMAND_LINE_OPTIONS:OPTION 589 ( 0x24d )
COMMAND_LINE_OPTIONS:OPTION_S 603 ( 0x25b )
DETECT_TARGET 1323 ( 0x52b )
DETECT_TARGET:CARTRIDGE_TYPE_MESSAGE 1488 ( 0x5d0 )
DETECT_TARGET:CARTRIDGE_TYPE_TABLE 1538 ( 0x602 )
DETECT_TARGET:COMMON_PROCESS 1392 ( 0x570 )
DETECT_TARGET:DETECT_RC755 1364 ( 0x554 )
DETECT_TARGET:DETECT_SCC 1351 ( 0x547 )
DETECT_TARGET:DETECT_SIMPLE64K 1378 ( 0x562 )
DETECT_TARGET:DEVICE_ID_MESSAGE 1472 ( 0x5c0 )
DETECT_TARGET:MANUFACTURE_ID_MESSAGE 1456 ( 0x5b0 )
DETECT_TARGET:MEGA_SCC_MESSAGE 1504 ( 0x5e0 )
DETECT_TARGET:RC755_MESSAGE 1514 ( 0x5ea )
DETECT_TARGET:SIMPLE64K_MESSAGE 1526 ( 0x5f6 )
DEVICE_ID 1550 ( 0x60e )
DID_AM29F040B 164 ( 0xa4 )
DID_SST39SF010A 181 ( 0xb5 )
DID_SST39SF020A 182 ( 0xb6 )
DID_SST39SF040 183 ( 0xb7 )
DISPLAY_PROGRESS_BAR 721 ( 0x2d1 )
DISPLAY_PROGRESS_BAR:DIVIDE_LOOP 753 ( 0x2f1 )
DISPLAY_PROGRESS_BAR:PROGRESS 802 ( 0x322 )
DISPLAY_PROGRESS_BAR:PROGRESS_BAR 791 ( 0x317 )
DISPLAY_PROGRESS_BAR:SKIP_ADD 760 ( 0x2f8 )
DISPLAY_PROGRESS_BAR:SKIP_FILL 784 ( 0x310 )
DISPLAY_TARGET_FNAME 1172 ( 0x494 )
DISPLAY_TARGET_FNAME:FNAME_MESSAGE 1231 ( 0x4cf )
DISPLAY_TARGET_FNAME:L1 1183 ( 0x49f )
DISPLAY_TARGET_FNAME:L2 1213 ( 0x4bd )
DISPLAY_TARGET_FNAME:S1 1201 ( 0x4b1 )
DISPLAY_TARGET_SLOT 1129 ( 0x469 )
DISPLAY_TARGET_SLOT:BAR_MESSAGE 1170 ( 0x492 )
DISPLAY_TARGET_SLOT:SLOT_MESSAGE 1164 ( 0x48c )
ENASLT 36 ( 0x24 )
ENTRY_POINT 256 ( 0x100 )
ENTRY_POINT:BLOCK_WRITE_LOOP 336 ( 0x150 )
ENTRY_POINT:COMPLETED_MESSAGE 483 ( 0x1e3 )
ENTRY_POINT:ERASE_MESSAGE 463 ( 0x1cf )
ENTRY_POINT:NOT_DETECTED 397 ( 0x18d )
ENTRY_POINT:NOT_DETECTED_MESSAGE 498 ( 0x1f2 )
ENTRY_POINT:OK_MESSAGE 478 ( 0x1de )
ENTRY_POINT:PUTS_AND_EXIT 386 ( 0x182 )
ENTRY_POINT:TITLE_MESSAGE 402 ( 0x192 )
ENTRY_POINT:WRITE_ERROR_MESSAGE 534 ( 0x216 )
EXPTBL 64705 ( 0xfcc1 )
FCB 1554 ( 0x612 )
FCB_CLRCLS 1582 ( 0x62e )
FCB_CLSOFF 1584 ( 0x630 )
FCB_CR 1586 ( 0x632 )
FCB_DATE 1574 ( 0x626 )
FCB_DEVID 1578 ( 0x62a )
FCB_DIRLOC 1579 ( 0x62b )
FCB_DR 1554 ( 0x612 )
FCB_EX 1566 ( 0x61e )
FCB_FEXT 1563 ( 0x61b )
FCB_FILSIZ 1570 ( 0x622 )
FCB_FNAME 1555 ( 0x613 )
FCB_RC 1569 ( 0x621 )
FCB_RN 1587 ( 0x633 )
FCB_S1 1567 ( 0x61f )
FCB_S2 1568 ( 0x620 )
FCB_STRCLS 1580 ( 0x62c )
FCB_TIME 1576 ( 0x628 )
FILE_OPEN 821 ( 0x335 )
FILE_OPEN:CANNOT_OPEN_MESSAGE 892 ( 0x37c )
FILE_OPEN:IS_NOT_8KB_MESSAGE 912 ( 0x390 )
FILE_OPEN:IS_ZERO_MESSAGE 954 ( 0x3ba )
FILE_OPEN:PUT_ERROR 887 ( 0x377 )
FILE_SIZE 1545 ( 0x609 )
FLASH_CHIP_ERASE 1803 ( 0x70b )
FLASH_GET_START_BANK 1812 ( 0x714 )
FLASH_SET_BANK 1809 ( 0x711 )
FLASH_WRITE_8KB 1806 ( 0x70e )
GET_DEVICE_NAME 1690 ( 0x69a )
GET_DEVICE_NAME:S_AM29F040B 1742 ( 0x6ce )
GET_DEVICE_NAME:S_SST39SF010A 1752 ( 0x6d8 )
GET_DEVICE_NAME:S_SST39SF020A 1764 ( 0x6e4 )
GET_DEVICE_NAME:S_SST39SF040 1776 ( 0x6f0 )
GET_MANUFACTURE_NAME 1658 ( 0x67a )
GET_MANUFACTURE_NAME:S_AMD 1674 ( 0x68a )
GET_MANUFACTURE_NAME:S_SST 1678 ( 0x68e )
IS_ROM 1796 ( 0x704 )
IS_SLOT_RC755 2154 ( 0x86a )
IS_SLOT_RC755:NOT_RC755 2151 ( 0x867 )
IS_SLOT_SCC 1815 ( 0x717 )
IS_SLOT_SCC:L1 1829 ( 0x725 )
IS_SLOT_SCC:L2 1840 ( 0x730 )
IS_SLOT_SCC:L3 1854 ( 0x73e )
IS_SLOT_SCC:NOT_SCC 1866 ( 0x74a )
IS_SLOT_SIMPLE64K 2477 ( 0x9ad )
JIFFY 64670 ( 0xfc9e )
JUMP_TABLE 1803 ( 0x70b )
JUMP_TABLE_END 1815 ( 0x717 )
MANUFACTURE_ID 1549 ( 0x60d )
MID_AMD 1 ( 0x1 )
MID_SST 191 ( 0xbf )
PROGRESS_MAX 1552 ( 0x610 )
PUTHEX16 1611 ( 0x64b )
PUTHEX8 1618 ( 0x652 )
PUTHEX8:HEX_CHARACTERS 1642 ( 0x66a )
PUTHEX_C 1627 ( 0x65b )
PUTS 1597 ( 0x63d )
PUTS_CRLF 1594 ( 0x63a )
PUTS_CRLF:CRLF 1591 ( 0x637 )
RAMAD0 62273 ( 0xf341 )
RAMAD1 62274 ( 0xf342 )
RAMAD2 62275 ( 0xf343 )
RAMAD3 62276 ( 0xf344 )
RC755_BANK1_SEL 24576 ( 0x6000 )
RC755_BANK2_SEL 32768 ( 0x8000 )
RC755_BANK3_SEL 40960 ( 0xa000 )
RC755_CMD_2AAA 19114 ( 0x4aaa )
RC755_CMD_5555 21845 ( 0x5555 )
RC755_FLASH 128 ( 0x80 )
RC755_FLASH_CHIP_ERASE 2393 ( 0x959 )
RC755_FLASH_CHIP_ERASE:WAIT_L1 2451 ( 0x993 )
RC755_FLASH_WRITE_8KB 2295 ( 0x8f7 )
RC755_FLASH_WRITE_8KB:LOOP_OF_BC 2331 ( 0x91b )
RC755_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 2359 ( 0x937 )
RC755_FLASH_WRITE_8KB:WRITE_COMPLETE 2375 ( 0x947 )
RC755_FLASH_WRITE_8KB:WRITE_ERROR 2369 ( 0x941 )
RC755_GET_START_BANK 2468 ( 0x9a4 )
RC755_RESTORE_BANK 2470 ( 0x9a6 )
RC755_SET_BANK 2464 ( 0x9a0 )
RESTORE_DOS_SLOT 1305 ( 0x519 )
ROM_SIZE 1547 ( 0x60b )
ROM_TYPE 1551 ( 0x60f )
SCC_BANK0_SEL 20480 ( 0x5000 )
SCC_BANK1_SEL 28672 ( 0x7000 )
SCC_BANK2_SEL 36864 ( 0x9000 )
SCC_BANK3_SEL 45056 ( 0xb000 )
SCC_CMD_2AAA 35498 ( 0x8aaa )
SCC_CMD_5555 42325 ( 0xa555 )
SCC_FLASH_CHIP_ERASE 2067 ( 0x813 )
SCC_FLASH_CHIP_ERASE:WAIT_L1 2130 ( 0x852 )
SCC_FLASH_WRITE_8KB 1969 ( 0x7b1 )
SCC_FLASH_WRITE_8KB:LOOP_OF_BC 2010 ( 0x7da )
SCC_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 2038 ( 0x7f6 )
SCC_FLASH_WRITE_8KB:WRITE_COMPLETE 2054 ( 0x806 )
SCC_FLASH_WRITE_8KB:WRITE_ERROR 2048 ( 0x800 )
SCC_GET_START_BANK 2142 ( 0x85e )
SCC_RESTORE_BANK 2144 ( 0x860 )
SCC_SET_BANK 2138 ( 0x85a )
SETUP_FLASH_COMMAND 1787 ( 0x6fb )
SETUP_SLOT_RC755 2264 ( 0x8d8 )
SETUP_SLOT_RC755:RC755_FLASH_JUMP_TABLE 2283 ( 0x8eb )
SETUP_SLOT_SCC 1869 ( 0x74d )
SETUP_SLOT_SCC:SCC_FLASH_JUMP_TABLE 1957 ( 0x7a5 )
SETUP_SLOT_SIMPLE64K 2480 ( 0x9b0 )
SIMPLE_CMD_2AAA 10922 ( 0x2aaa )
SIMPLE_CMD_5555 21845 ( 0x5555 )
S_UNKNOWN 1682 ( 0x692 )
TARGET_SLOT 1544 ( 0x608 )
USAGE 971 ( 0x3cb )
USAGE:USAGE_MESSAGE 985 ( 0x3d9 )
_DIRIO 6 ( 0x6 )
_FCLOSE 16 ( 0x10 )
_FOPEN 15 ( 0xf )
_RDBLK 39 ( 0x27 )
_SETDTA 26 ( 0x1a )
_STROUT 9 ( 0x9 )
_TERM0 0 ( 0x0 )
