Z80 Macro Assembler ZMA v1.0.15
=====================================================
Programmed by t.hara

<< code >>
[	ORG 0X100]
	code address: 0x000100

[	SCOPE ENTRY_POINT]
	Scope path: ENTRY_POINT:

[ENTRY_POINT ::]
	global label address: 0x000100

[	LD DE , TITLE_MESSAGE] Z80:11cyc, R800:3cyc
000100: 11 bc 01

[	CALL PUTS] Z80:18cyc, R800:5cyc
000103: cd b9 07

[	CALL COMMAND_LINE_OPTIONS] Z80:18cyc, R800:5cyc
000106: cd 6d 02

[	LD A , [ FCB_FNAME ]] Z80:14cyc, R800:6cyc
000109: 3a 8f 07

[	CP A , 32] Z80:8cyc, R800:2cyc
00010c: fe 20

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00010e: ca 11 04

[	CALL DISPLAY_TARGET_FNAME] Z80:18cyc, R800:5cyc
000111: cd 9b 05

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000114: cd b6 07

[	CALL FILE_OPEN] Z80:18cyc, R800:5cyc
000117: cd 9c 03

[	JP Z , PUTS_AND_EXIT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00011a: ca a7 01

[	CALL CHECK_TARGET_SLOT] Z80:18cyc, R800:5cyc
00011d: cd e6 05

[	JP NZ , NOT_DETECTED] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000120: c2 b7 01

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000123: cd 29 06

[	CALL DISPLAY_TARGET_SLOT] Z80:18cyc, R800:5cyc
000126: cd 70 05

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000129: cd b6 07

[	LD DE , ERASE_MESSAGE] Z80:11cyc, R800:3cyc
00012c: 11 10 02

[	CALL PUTS] Z80:18cyc, R800:5cyc
00012f: cd b9 07

[	CALL FLASH_CHIP_ERASE] Z80:18cyc, R800:5cyc
000132: cd b8 08

[	LD DE , OK_MESSAGE] Z80:11cyc, R800:3cyc
000135: 11 1f 02

[	CALL PUTS] Z80:18cyc, R800:5cyc
000138: cd b9 07

[	LD DE , BLOCK_MESSAGE] Z80:11cyc, R800:3cyc
00013b: 11 00 02

[	CALL PUTS] Z80:18cyc, R800:5cyc
00013e: cd b9 07

[	LD HL , [ FILE_SIZE ]] Z80:17cyc, R800:7cyc
000141: 2a 84 07

[	PUSH HL] Z80:12cyc, R800:6cyc
000144: e5

[	CALL FLASH_GET_START_BANK] Z80:18cyc, R800:5cyc
000145: cd c1 08

[	LD C , A] Z80:5cyc, R800:2cyc
000148: 4f

[	PUSH BC] Z80:12cyc, R800:6cyc
000149: c5

[	LD L , A] Z80:5cyc, R800:2cyc
00014a: 6f

[	LD H , 0] Z80:8cyc, R800:2cyc
00014b: 26 00

[	CALL PUTDEC] Z80:18cyc, R800:5cyc
00014d: cd f6 07

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000150: cd b6 07

[	POP BC] Z80:11cyc, R800:5cyc
000153: c1

[	POP HL] Z80:11cyc, R800:5cyc
000154: e1

[	PUSH HL] Z80:12cyc, R800:6cyc
000155: e5

[	SRL H] Z80:10cyc, R800:2cyc
000156: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
000158: cb 1d

[	SRL H] Z80:10cyc, R800:2cyc
00015a: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
00015c: cb 1d

[	SRL H] Z80:10cyc, R800:2cyc
00015e: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
000160: cb 1d

[	LD B , L] Z80:5cyc, R800:2cyc
000162: 45

[	LD A , L] Z80:5cyc, R800:2cyc
000163: 7d

[	LD [ PROGRESS_MAX ] , A] Z80:14cyc, R800:6cyc
000164: 32 8c 07

[	POP HL] Z80:11cyc, R800:5cyc
000167: e1

[BLOCK_WRITE_LOOP :]
	label address: 0x000168

[	LD A , C] Z80:5cyc, R800:2cyc
000168: 79

[	PUSH BC] Z80:12cyc, R800:6cyc
000169: c5

[	CALL FLASH_SET_BANK] Z80:18cyc, R800:5cyc
00016a: cd be 08

[	LD A , B] Z80:5cyc, R800:2cyc
00016d: 78

[	CALL DISPLAY_PROGRESS_BAR] Z80:18cyc, R800:5cyc
00016e: cd 38 03

[	LD HL , NEW_DTA] Z80:11cyc, R800:3cyc
000171: 21 00 20

[	LD DE , NEW_DTA + 1] Z80:11cyc, R800:3cyc
000174: 11 01 20

[	LD BC , 8192 - 1] Z80:11cyc, R800:3cyc
000177: 01 ff 1f

[	LD [ HL ] , 0XFF] Z80:11cyc, R800:5cyc
00017a: 36 ff

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00017c: ed b0

[	LD C , _RDBLK] Z80:8cyc, R800:2cyc
00017e: 0e 27

[	LD DE , FCB] Z80:11cyc, R800:3cyc
000180: 11 8e 07

[	LD HL , 8] Z80:11cyc, R800:3cyc
000183: 21 08 00

[	CALL BDOS] Z80:18cyc, R800:5cyc
000186: cd 05 00

[	CALL FLASH_WRITE_8KB] Z80:18cyc, R800:5cyc
000189: cd bb 08

[	POP BC] Z80:11cyc, R800:5cyc
00018c: c1

[	LD DE , WRITE_ERROR_MESSAGE] Z80:11cyc, R800:3cyc
00018d: 11 57 02

[	JR C , PUTS_AND_EXIT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000190: 38 15

[	INC C] Z80:5cyc, R800:1cyc
000192: 0c

[	DJNZ BLOCK_WRITE_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000193: 10 d3

[	LD A , B] Z80:5cyc, R800:2cyc
000195: 78

[	CALL DISPLAY_PROGRESS_BAR] Z80:18cyc, R800:5cyc
000196: cd 38 03

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
000199: cd b6 07

[	LD C , _FCLOSE] Z80:8cyc, R800:2cyc
00019c: 0e 10

[	LD DE , FCB] Z80:11cyc, R800:3cyc
00019e: 11 8e 07

[	CALL BDOS] Z80:18cyc, R800:5cyc
0001a1: cd 05 00

[	LD DE , COMPLETED_MESSAGE] Z80:11cyc, R800:3cyc
0001a4: 11 24 02

[PUTS_AND_EXIT :]
	label address: 0x0001a7

[	PUSH DE] Z80:12cyc, R800:6cyc
0001a7: d5

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
0001a8: cd 29 06

[	CALL FLASH_FINISH] Z80:18cyc, R800:5cyc
0001ab: cd c4 08

[	POP DE] Z80:11cyc, R800:5cyc
0001ae: d1

[	CALL PUTS] Z80:18cyc, R800:5cyc
0001af: cd b9 07

[	LD C , _TERM0] Z80:8cyc, R800:2cyc
0001b2: 0e 00

[	JP BDOS] Z80:11cyc, R800:5cyc
0001b4: c3 05 00

[NOT_DETECTED :]
	label address: 0x0001b7

[	LD DE , NOT_DETECTED_MESSAGE] Z80:11cyc, R800:3cyc
0001b7: 11 33 02

[	JR PUTS_AND_EXIT] Z80:13cyc, R800:3cyc
0001ba: 18 eb

[TITLE_MESSAGE :]
	label address: 0x0001bc

[	DS "WRTSST [SST FlashROM Writer] v1.04\r\n"]
0001bc: 57 52 54 53 53 54 20 5b
0001c4: 53 53 54 20 46 6c 61 73
0001cc: 68 52 4f 4d 20 57 72 69
0001d4: 74 65 72 5d 20 76 31 2e
0001dc: 30 34 0d 0a

[	DS "Copyright (C)2022-2023 HRA!\r\n\r\n"]
0001e0: 43 6f 70 79 72 69 67 68
0001e8: 74 20 28 43 29 32 30 32
0001f0: 32 2d 32 30 32 33 20 48
0001f8: 52 41 21 0d 0a 0d 0a

[	DB 0]
0001ff: 00

[BLOCK_MESSAGE :]
	label address: 0x000200

[	DS "BLOCK#        :"]
000200: 42 4c 4f 43 4b 23 20 20
000208: 20 20 20 20 20 20 3a

[	DB 0]
00020f: 00

[ERASE_MESSAGE :]
	label address: 0x000210

[	DS "ERASE ROM ... "]
000210: 45 52 41 53 45 20 52 4f
000218: 4d 20 2e 2e 2e 20

[	DB 0]
00021e: 00

[OK_MESSAGE :]
	label address: 0x00021f

[	DS "OK\r\n"]
00021f: 4f 4b 0d 0a

[	DB 0]
000223: 00

[COMPLETED_MESSAGE :]
	label address: 0x000224

[	DS "\r\nCompleted.\r\n"]
000224: 0d 0a 43 6f 6d 70 6c 65
00022c: 74 65 64 2e 0d 0a

[	DB 0]
000232: 00

[NOT_DETECTED_MESSAGE :]
	label address: 0x000233

[	DS "Could not detect flash cartridge.\r\n"]
000233: 43 6f 75 6c 64 20 6e 6f
00023b: 74 20 64 65 74 65 63 74
000243: 20 66 6c 61 73 68 20 63
00024b: 61 72 74 72 69 64 67 65
000253: 2e 0d 0a

[	DB 0]
000256: 00

[WRITE_ERROR_MESSAGE :]
	label address: 0x000257

[	DS "\r\nWrite failed.\r\n"]
000257: 0d 0a 57 72 69 74 65 20
00025f: 66 61 69 6c 65 64 2e 0d
000267: 0a

[	DB 0]
000268: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE COMMAND_LINE_OPTIONS]
	Scope path: COMMAND_LINE_OPTIONS:

[GET_ONE :]
	label address: 0x000269

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000269: 7e

[	INC HL] Z80:7cyc, R800:1cyc
00026a: 23

[	DEC B] Z80:5cyc, R800:1cyc
00026b: 05

[	RET] Z80:11cyc, R800:5cyc
00026c: c9

[COMMAND_LINE_OPTIONS ::]
	global label address: 0x00026d

[	LD HL , 0X0080] Z80:11cyc, R800:3cyc
00026d: 21 80 00

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000270: 7e

[	OR A , A] Z80:5cyc, R800:1cyc
000271: b7

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000272: ca 11 04

[	LD B , A] Z80:5cyc, R800:2cyc
000275: 47

[	INC HL] Z80:7cyc, R800:1cyc
000276: 23

[L1 :]
	label address: 0x000277

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
000277: cd 69 02

[	CP A , 47] Z80:8cyc, R800:2cyc
00027a: fe 2f

[	JR Z , OPTION] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00027c: 28 08

[	CP A , 32] Z80:8cyc, R800:2cyc
00027e: fe 20

[	JR NZ , FILE_NAME] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000280: 20 4d

[L2 :]
	label address: 0x000282

[	INC B] Z80:5cyc, R800:1cyc
000282: 04

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000283: 10 f2

[	RET] Z80:11cyc, R800:5cyc
000285: c9

[OPTION :]
	label address: 0x000286

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
000286: cd 69 02

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000289: ca 11 04

[	CP A , 83] Z80:8cyc, R800:2cyc
00028c: fe 53

[	JP Z , OPTION_S] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00028e: ca 9e 02

[	CP A , 65] Z80:8cyc, R800:2cyc
000291: fe 41

[	JP Z , OPTION_A] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000293: ca 16 03

[	CP A , 84] Z80:8cyc, R800:2cyc
000296: fe 54

[	JP Z , OPTION_T] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000298: ca 29 03

[	JP USAGE] Z80:11cyc, R800:5cyc
00029b: c3 11 04

[OPTION_S :]
	label address: 0x00029e

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
00029e: cd 69 02

[	SUB A , 48] Z80:8cyc, R800:2cyc
0002a1: d6 30

[	CP A , 4] Z80:8cyc, R800:2cyc
0002a3: fe 04

[	JP NC , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002a5: d2 11 04

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
0002a8: 32 83 07

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0002ab: 7e

[	CP A , 45] Z80:8cyc, R800:2cyc
0002ac: fe 2d

[	JP NZ , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002ae: c2 77 02

[	INC HL] Z80:7cyc, R800:1cyc
0002b1: 23

[	DEC B] Z80:5cyc, R800:1cyc
0002b2: 05

[	JP Z , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002b3: ca 11 04

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
0002b6: cd 69 02

[	SUB A , 48] Z80:8cyc, R800:2cyc
0002b9: d6 30

[	CP A , 4] Z80:8cyc, R800:2cyc
0002bb: fe 04

[	JP NC , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002bd: d2 11 04

[	RLCA] Z80:5cyc, R800:1cyc
0002c0: 07

[	RLCA] Z80:5cyc, R800:1cyc
0002c1: 07

[	LD C , A] Z80:5cyc, R800:2cyc
0002c2: 4f

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0002c3: 3a 83 07

[	OR A , C] Z80:5cyc, R800:1cyc
0002c6: b1

[	OR A , 0X80] Z80:8cyc, R800:2cyc
0002c7: f6 80

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
0002c9: 32 83 07

[	JP L1] Z80:11cyc, R800:5cyc
0002cc: c3 77 02

[FILE_NAME :]
	label address: 0x0002cf

[	LD A , [ FCB_FNAME ]] Z80:14cyc, R800:6cyc
0002cf: 3a 8f 07

[	CP A , 32] Z80:8cyc, R800:2cyc
0002d2: fe 20

[	JP NZ , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002d4: c2 11 04

[	LD C , 8] Z80:8cyc, R800:2cyc
0002d7: 0e 08

[	LD DE , FCB_FNAME] Z80:11cyc, R800:3cyc
0002d9: 11 8f 07

[	DEC HL] Z80:7cyc, R800:1cyc
0002dc: 2b

[	INC B] Z80:5cyc, R800:1cyc
0002dd: 04

[FL1 :]
	label address: 0x0002de

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
0002de: cd 69 02

[	CP A , 46] Z80:8cyc, R800:2cyc
0002e1: fe 2e

[	JP Z , FILE_EXT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002e3: ca fb 02

[	CP A , 32] Z80:8cyc, R800:2cyc
0002e6: fe 20

[	JP Z , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002e8: ca 77 02

[	LD [ DE ] , A] Z80:8cyc, R800:4cyc
0002eb: 12

[	INC DE] Z80:7cyc, R800:1cyc
0002ec: 13

[	INC B] Z80:5cyc, R800:1cyc
0002ed: 04

[	DEC B] Z80:5cyc, R800:1cyc
0002ee: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0002ef: c8

[	DEC C] Z80:5cyc, R800:1cyc
0002f0: 0d

[	JR NZ , FL1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0002f1: 20 eb

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
0002f3: cd 69 02

[	CP A , 46] Z80:8cyc, R800:2cyc
0002f6: fe 2e

[	JP NZ , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0002f8: c2 11 04

[FILE_EXT :]
	label address: 0x0002fb

[	INC B] Z80:5cyc, R800:1cyc
0002fb: 04

[	DEC B] Z80:5cyc, R800:1cyc
0002fc: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0002fd: c8

[	LD C , 3] Z80:8cyc, R800:2cyc
0002fe: 0e 03

[	LD DE , FCB_FEXT] Z80:11cyc, R800:3cyc
000300: 11 97 07

[FL2 :]
	label address: 0x000303

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
000303: cd 69 02

[	CP A , 32] Z80:8cyc, R800:2cyc
000306: fe 20

[	JP Z , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000308: ca 77 02

[	LD [ DE ] , A] Z80:8cyc, R800:4cyc
00030b: 12

[	INC DE] Z80:7cyc, R800:1cyc
00030c: 13

[	INC B] Z80:5cyc, R800:1cyc
00030d: 04

[	DEC B] Z80:5cyc, R800:1cyc
00030e: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00030f: c8

[	DEC C] Z80:5cyc, R800:1cyc
000310: 0d

[	JP Z , L1] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000311: ca 77 02

[	JR FL2] Z80:13cyc, R800:3cyc
000314: 18 ed

[OPTION_A :]
	label address: 0x000316

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
000316: cd 69 02

[	SUB A , 48] Z80:8cyc, R800:2cyc
000319: d6 30

[	CP A , 10] Z80:8cyc, R800:2cyc
00031b: fe 0a

[	JP NC , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00031d: d2 11 04

[	LD [ TARGET_BLOCK_FOR_SIMPLE_ROM ] , A] Z80:14cyc, R800:6cyc
000320: 32 88 07

[RETURN_TO_ARG_CHECK :]
	label address: 0x000323

[	INC B] Z80:5cyc, R800:1cyc
000323: 04

[	DEC B] Z80:5cyc, R800:1cyc
000324: 05

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000325: c8

[	JP L1] Z80:11cyc, R800:5cyc
000326: c3 77 02

[OPTION_T :]
	label address: 0x000329

[	CALL GET_ONE] Z80:18cyc, R800:5cyc
000329: cd 69 02

[	SUB A , 48] Z80:8cyc, R800:2cyc
00032c: d6 30

[	CP A , 3] Z80:8cyc, R800:2cyc
00032e: fe 03

[	JP NC , USAGE] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000330: d2 11 04

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
000333: 32 8b 07

[	JR RETURN_TO_ARG_CHECK] Z80:13cyc, R800:3cyc
000336: 18 eb

[	ENDSCOPE]
	Scope path: 

[	SCOPE DISPLAY_PROGRESS_BAR]
	Scope path: DISPLAY_PROGRESS_BAR:

[DISPLAY_PROGRESS_BAR ::]
	global label address: 0x000338

[	PUSH AF] Z80:12cyc, R800:6cyc
000338: f5

[	LD HL , PROGRESS] Z80:11cyc, R800:3cyc
000339: 21 89 03

[	LD DE , PROGRESS + 1] Z80:11cyc, R800:3cyc
00033c: 11 8a 03

[	LD BC , 16 - 1] Z80:11cyc, R800:3cyc
00033f: 01 0f 00

[	LD A , 45] Z80:8cyc, R800:2cyc
000342: 3e 2d

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
000344: 77

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000345: ed b0

[	POP AF] Z80:11cyc, R800:5cyc
000347: f1

[	LD B , A] Z80:5cyc, R800:2cyc
000348: 47

[	LD A , [ PROGRESS_MAX ]] Z80:14cyc, R800:6cyc
000349: 3a 8c 07

[	SUB A , B] Z80:5cyc, R800:1cyc
00034c: 90

[	PUSH AF] Z80:12cyc, R800:6cyc
00034d: f5

[	LD A , [ PROGRESS_MAX ]] Z80:14cyc, R800:6cyc
00034e: 3a 8c 07

[	LD E , A] Z80:5cyc, R800:2cyc
000351: 5f

[	POP AF] Z80:11cyc, R800:5cyc
000352: f1

[	LD C , A] Z80:5cyc, R800:2cyc
000353: 4f

[	XOR A , A] Z80:5cyc, R800:1cyc
000354: af

[	LD D , A] Z80:5cyc, R800:2cyc
000355: 57

[	LD B , 12] Z80:8cyc, R800:2cyc
000356: 06 0c

[DIVIDE_LOOP :]
	label address: 0x000358

[	SLA C] Z80:10cyc, R800:2cyc
000358: cb 21

[	RLA] Z80:5cyc, R800:1cyc
00035a: 17

[	SUB A , E] Z80:5cyc, R800:1cyc
00035b: 93

[	JR NC , SKIP_ADD] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00035c: 30 01

[	ADD A , E] Z80:5cyc, R800:1cyc
00035e: 83

[SKIP_ADD :]
	label address: 0x00035f

[	CCF] Z80:5cyc, R800:1cyc
00035f: 3f

[	RL D] Z80:10cyc, R800:2cyc
000360: cb 12

[	DJNZ DIVIDE_LOOP] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000362: 10 f4

[	LD A , D] Z80:5cyc, R800:2cyc
000364: 7a

[	OR A , A] Z80:5cyc, R800:1cyc
000365: b7

[	JR Z , SKIP_FILL] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000366: 28 0f

[	LD C , A] Z80:5cyc, R800:2cyc
000368: 4f

[	LD HL , PROGRESS] Z80:11cyc, R800:3cyc
000369: 21 89 03

[	LD DE , PROGRESS + 1] Z80:11cyc, R800:3cyc
00036c: 11 8a 03

[	LD A , 35] Z80:8cyc, R800:2cyc
00036f: 3e 23

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
000371: 77

[	DEC C] Z80:5cyc, R800:1cyc
000372: 0d

[	JR Z , SKIP_FILL] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000373: 28 02

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000375: ed b0

[SKIP_FILL :]
	label address: 0x000377

[	LD DE , PROGRESS_BAR] Z80:11cyc, R800:3cyc
000377: 11 7e 03

[	CALL PUTS] Z80:18cyc, R800:5cyc
00037a: cd b9 07

[	RET] Z80:11cyc, R800:5cyc
00037d: c9

[PROGRESS_BAR :]
	label address: 0x00037e

[	DS "WRITE ROM |"]
00037e: 57 52 49 54 45 20 52 4f
000386: 4d 20 7c

[PROGRESS :]
	label address: 0x000389

[SPACE 16 , 45]
	Allocate space: 16byte(s)
		Fill value: 45

[	DS "|\r"]
000399: 7c 0d

[	DB 0]
00039b: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE FILE_OPEN]
	Scope path: FILE_OPEN:

[FILE_OPEN ::]
	global label address: 0x00039c

[	LD DE , FCB] Z80:11cyc, R800:3cyc
00039c: 11 8e 07

[	LD C , _FOPEN] Z80:8cyc, R800:2cyc
00039f: 0e 0f

[	CALL BDOS] Z80:18cyc, R800:5cyc
0003a1: cd 05 00

[	OR A , A] Z80:5cyc, R800:1cyc
0003a4: b7

[	LD DE , CANNOT_OPEN_MESSAGE] Z80:11cyc, R800:3cyc
0003a5: 11 ec 03

[	JR NZ , PUT_ERROR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0003a8: 20 40

[	LD HL , FCB_FILSIZ] Z80:11cyc, R800:3cyc
0003aa: 21 9e 07

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0003ad: 7e

[	LD B , A] Z80:5cyc, R800:2cyc
0003ae: 47

[	INC HL] Z80:7cyc, R800:1cyc
0003af: 23

[	OR A , [ HL ]] Z80:8cyc, R800:4cyc
0003b0: b6

[	INC HL] Z80:7cyc, R800:1cyc
0003b1: 23

[	OR A , [ HL ]] Z80:8cyc, R800:4cyc
0003b2: b6

[	INC HL] Z80:7cyc, R800:1cyc
0003b3: 23

[	OR A , [ HL ]] Z80:8cyc, R800:4cyc
0003b4: b6

[	LD DE , IS_ZERO_MESSAGE] Z80:11cyc, R800:3cyc
0003b5: 11 00 04

[	JR Z , PUT_ERROR] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0003b8: 28 30

[	LD A , [ FCB_FILSIZ + 1 ]] Z80:14cyc, R800:6cyc
0003ba: 3a 9f 07

[	AND A , 0X1F] Z80:8cyc, R800:2cyc
0003bd: e6 1f

[	OR A , B] Z80:5cyc, R800:1cyc
0003bf: b0

[	LD DE , 0] Z80:11cyc, R800:3cyc
0003c0: 11 00 00

[	JR Z , IS_MULTIPLE_8KB] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0003c3: 28 02

[	LD E , 8] Z80:8cyc, R800:2cyc
0003c5: 1e 08

[IS_MULTIPLE_8KB :]
	label address: 0x0003c7

[	LD HL , [ FCB_FILSIZ + 1 ]] Z80:17cyc, R800:7cyc
0003c7: 2a 9f 07

[	SRL H] Z80:10cyc, R800:2cyc
0003ca: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
0003cc: cb 1d

[	SRL H] Z80:10cyc, R800:2cyc
0003ce: cb 3c

[	RR L] Z80:10cyc, R800:2cyc
0003d0: cb 1d

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0003d2: 19

[	LD A , L] Z80:5cyc, R800:2cyc
0003d3: 7d

[	AND A , 0XF8] Z80:8cyc, R800:2cyc
0003d4: e6 f8

[	LD L , A] Z80:5cyc, R800:2cyc
0003d6: 6f

[	LD [ FILE_SIZE ] , HL] Z80:17cyc, R800:7cyc
0003d7: 22 84 07

[	LD C , _SETDTA] Z80:8cyc, R800:2cyc
0003da: 0e 1a

[	LD DE , NEW_DTA] Z80:11cyc, R800:3cyc
0003dc: 11 00 20

[	CALL BDOS] Z80:18cyc, R800:5cyc
0003df: cd 05 00

[	LD HL , 1024] Z80:11cyc, R800:3cyc
0003e2: 21 00 04

[	LD [ FCB_S2 ] , HL] Z80:17cyc, R800:7cyc
0003e5: 22 9c 07

[	INC L] Z80:5cyc, R800:1cyc
0003e8: 2c

[	RET] Z80:11cyc, R800:5cyc
0003e9: c9

[PUT_ERROR :]
	label address: 0x0003ea

[	XOR A , A] Z80:5cyc, R800:1cyc
0003ea: af

[	RET] Z80:11cyc, R800:5cyc
0003eb: c9

[CANNOT_OPEN_MESSAGE :]
	label address: 0x0003ec

[	DS "Cannot open file.\r\n"]
0003ec: 43 61 6e 6e 6f 74 20 6f
0003f4: 70 65 6e 20 66 69 6c 65
0003fc: 2e 0d 0a

[	DB 0]
0003ff: 00

[IS_ZERO_MESSAGE :]
	label address: 0x000400

[	DS "File is empty.\r\n"]
000400: 46 69 6c 65 20 69 73 20
000408: 65 6d 70 74 79 2e 0d 0a

[	DB 0]
000410: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE USAGE]
	Scope path: USAGE:

[USAGE ::]
	global label address: 0x000411

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000411: cd 29 06

[	LD DE , USAGE_MESSAGE] Z80:11cyc, R800:3cyc
000414: 11 1f 04

[	CALL PUTS] Z80:18cyc, R800:5cyc
000417: cd b9 07

[	LD C , _TERM0] Z80:8cyc, R800:2cyc
00041a: 0e 00

[	JP BDOS] Z80:11cyc, R800:5cyc
00041c: c3 05 00

[USAGE_MESSAGE :]
	label address: 0x00041f

[	DS "Usage> WRTSST [options] file_name.rom\r\n"]
00041f: 55 73 61 67 65 3e 20 57
000427: 52 54 53 53 54 20 5b 6f
00042f: 70 74 69 6f 6e 73 5d 20
000437: 66 69 6c 65 5f 6e 61 6d
00043f: 65 2e 72 6f 6d 0d 0a

[	DS " [options]\r\n"]
000446: 20 5b 6f 70 74 69 6f 6e
00044e: 73 5d 0d 0a

[	DS "  /Sx .... Set target slot for SLOT#x.\r\n"]
000452: 20 20 2f 53 78 20 2e 2e
00045a: 2e 2e 20 53 65 74 20 74
000462: 61 72 67 65 74 20 73 6c
00046a: 6f 74 20 66 6f 72 20 53
000472: 4c 4f 54 23 78 2e 0d 0a

[	DS "  /Sx-y .. Set target slot for SLOT#x-y.\r\n"]
00047a: 20 20 2f 53 78 2d 79 20
000482: 2e 2e 20 53 65 74 20 74
00048a: 61 72 67 65 74 20 73 6c
000492: 6f 74 20 66 6f 72 20 53
00049a: 4c 4f 54 23 78 2d 79 2e
0004a2: 0d 0a

[	DS "  /Aa .... Set target address for S64K.\r\n"]
0004a4: 20 20 2f 41 61 20 2e 2e
0004ac: 2e 2e 20 53 65 74 20 74
0004b4: 61 72 67 65 74 20 61 64
0004bc: 64 72 65 73 73 20 66 6f
0004c4: 72 20 53 36 34 4b 2e 0d
0004cc: 0a

[	DS "    /A0 .. 0000h\r\n"]
0004cd: 20 20 20 20 2f 41 30 20
0004d5: 2e 2e 20 30 30 30 30 68
0004dd: 0d 0a

[	DS "    /A1 .. 2000h\r\n"]
0004df: 20 20 20 20 2f 41 31 20
0004e7: 2e 2e 20 32 30 30 30 68
0004ef: 0d 0a

[	DS "     :\r\n"]
0004f1: 20 20 20 20 20 3a 0d 0a

[	DS "    /A7 .. E000h\r\n"]
0004f9: 20 20 20 20 2f 41 37 20
000501: 2e 2e 20 45 30 30 30 68
000509: 0d 0a

[	DS "  /Tt .... Specify cartridge type.\r\n"]
00050b: 20 20 2f 54 74 20 2e 2e
000513: 2e 2e 20 53 70 65 63 69
00051b: 66 79 20 63 61 72 74 72
000523: 69 64 67 65 20 74 79 70
00052b: 65 2e 0d 0a

[	DS "    /T0 .. MegaSCC\r\n"]
00052f: 20 20 20 20 2f 54 30 20
000537: 2e 2e 20 4d 65 67 61 53
00053f: 43 43 0d 0a

[	DS "    /T1 .. ESE-RC755\r\n"]
000543: 20 20 20 20 2f 54 31 20
00054b: 2e 2e 20 45 53 45 2d 52
000553: 43 37 35 35 0d 0a

[	DS "    /T2 .. Simple64k\r\n"]
000559: 20 20 20 20 2f 54 32 20
000561: 2e 2e 20 53 69 6d 70 6c
000569: 65 36 34 6b 0d 0a

[	DB 0]
00056f: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE DISPLAY_TARGET_SLOT]
	Scope path: DISPLAY_TARGET_SLOT:

[DISPLAY_TARGET_SLOT ::]
	global label address: 0x000570

[	LD DE , SLOT_MESSAGE] Z80:11cyc, R800:3cyc
000570: 11 93 05

[	CALL PUTS] Z80:18cyc, R800:5cyc
000573: cd b9 07

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000576: 3a 83 07

[	AND A , 3] Z80:8cyc, R800:2cyc
000579: e6 03

[	CALL PUTHEX_C] Z80:18cyc, R800:5cyc
00057b: cd d7 07

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00057e: 3a 83 07

[	RLCA] Z80:5cyc, R800:1cyc
000581: 07

[	RET NC] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000582: d0

[	LD DE , BAR_MESSAGE] Z80:11cyc, R800:3cyc
000583: 11 99 05

[	CALL PUTS] Z80:18cyc, R800:5cyc
000586: cd b9 07

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000589: 3a 83 07

[	RRA] Z80:5cyc, R800:1cyc
00058c: 1f

[	RRA] Z80:5cyc, R800:1cyc
00058d: 1f

[	AND A , 3] Z80:8cyc, R800:2cyc
00058e: e6 03

[	JP PUTHEX_C] Z80:11cyc, R800:5cyc
000590: c3 d7 07

[SLOT_MESSAGE :]
	label address: 0x000593

[	DS "SLOT#"]
000593: 53 4c 4f 54 23

[	DB 0]
000598: 00

[BAR_MESSAGE :]
	label address: 0x000599

[	DS "-"]
000599: 2d

[	DB 0]
00059a: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE DISPLAY_TARGET_FNAME]
	Scope path: DISPLAY_TARGET_FNAME:

[DISPLAY_TARGET_FNAME ::]
	global label address: 0x00059b

[	LD DE , FNAME_MESSAGE] Z80:11cyc, R800:3cyc
00059b: 11 d6 05

[	CALL PUTS] Z80:18cyc, R800:5cyc
00059e: cd b9 07

[	LD HL , FCB_FNAME] Z80:11cyc, R800:3cyc
0005a1: 21 8f 07

[	LD B , 8] Z80:8cyc, R800:2cyc
0005a4: 06 08

[L1 :]
	label address: 0x0005a6

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0005a6: 7e

[	INC HL] Z80:7cyc, R800:1cyc
0005a7: 23

[	CP A , 32] Z80:8cyc, R800:2cyc
0005a8: fe 20

[	JR Z , S1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0005aa: 28 0c

[	PUSH HL] Z80:12cyc, R800:6cyc
0005ac: e5

[	PUSH BC] Z80:12cyc, R800:6cyc
0005ad: c5

[	LD E , A] Z80:5cyc, R800:2cyc
0005ae: 5f

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0005af: 0e 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
0005b1: cd 05 00

[	POP BC] Z80:11cyc, R800:5cyc
0005b4: c1

[	POP HL] Z80:11cyc, R800:5cyc
0005b5: e1

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0005b6: 10 ee

[S1 :]
	label address: 0x0005b8

[	LD E , 46] Z80:8cyc, R800:2cyc
0005b8: 1e 2e

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0005ba: 0e 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
0005bc: cd 05 00

[	LD HL , FCB_FEXT] Z80:11cyc, R800:3cyc
0005bf: 21 97 07

[	LD B , 3] Z80:8cyc, R800:2cyc
0005c2: 06 03

[L2 :]
	label address: 0x0005c4

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0005c4: 7e

[	INC HL] Z80:7cyc, R800:1cyc
0005c5: 23

[	CP A , 32] Z80:8cyc, R800:2cyc
0005c6: fe 20

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0005c8: c8

[	PUSH HL] Z80:12cyc, R800:6cyc
0005c9: e5

[	PUSH BC] Z80:12cyc, R800:6cyc
0005ca: c5

[	LD E , A] Z80:5cyc, R800:2cyc
0005cb: 5f

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0005cc: 0e 06

[	CALL BDOS] Z80:18cyc, R800:5cyc
0005ce: cd 05 00

[	POP BC] Z80:11cyc, R800:5cyc
0005d1: c1

[	POP HL] Z80:11cyc, R800:5cyc
0005d2: e1

[	DJNZ L2] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0005d3: 10 ef

[	RET] Z80:11cyc, R800:5cyc
0005d5: c9

[FNAME_MESSAGE :]
	label address: 0x0005d6

[	DS "FILE NAME     :"]
0005d6: 46 49 4c 45 20 4e 41 4d
0005de: 45 20 20 20 20 20 3a

[	DB 0]
0005e5: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE CHECK_TARGET_SLOT]
	Scope path: CHECK_TARGET_SLOT:

[CHECK_TARGET_SLOT ::]
	global label address: 0x0005e6

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0005e6: 3a 83 07

[	INC A] Z80:5cyc, R800:1cyc
0005e9: 3c

[	JP NZ , CONSTANT_TARGET] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0005ea: c2 25 06

[	LD HL , EXPTBL] Z80:11cyc, R800:3cyc
0005ed: 21 c1 fc

[L1 :]
	label address: 0x0005f0

[	LD A , L] Z80:5cyc, R800:2cyc
0005f0: 7d

[	SUB A , EXPTBL & 255] Z80:8cyc, R800:2cyc
0005f1: d6 c1

[	LD B , A] Z80:5cyc, R800:2cyc
0005f3: 47

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0005f4: 7e

[	AND A , 0X80] Z80:8cyc, R800:2cyc
0005f5: e6 80

[	OR A , B] Z80:5cyc, R800:1cyc
0005f7: b0

[	OR A , A] Z80:5cyc, R800:1cyc
0005f8: b7

[	JP M , EXPANDED_SLOT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
0005f9: fa 07 06

[BASIC_SLOT :]
	label address: 0x0005fc

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
0005fc: 32 83 07

[	PUSH HL] Z80:12cyc, R800:6cyc
0005ff: e5

[	CALL DETECT_TARGET] Z80:18cyc, R800:5cyc
000600: cd 3b 06

[	POP HL] Z80:11cyc, R800:5cyc
000603: e1

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000604: c8

[	JR NEXT_SLOT] Z80:13cyc, R800:3cyc
000605: 18 14

[EXPANDED_SLOT :]
	label address: 0x000607

[	OR A , 0X80] Z80:8cyc, R800:2cyc
000607: f6 80

[	LD [ TARGET_SLOT ] , A] Z80:14cyc, R800:6cyc
000609: 32 83 07

[	PUSH HL] Z80:12cyc, R800:6cyc
00060c: e5

[	CALL DETECT_TARGET] Z80:18cyc, R800:5cyc
00060d: cd 3b 06

[	POP HL] Z80:11cyc, R800:5cyc
000610: e1

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000611: c8

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000612: 3a 83 07

[	ADD A , 0X04] Z80:8cyc, R800:2cyc
000615: c6 04

[	CP A , 0X90] Z80:8cyc, R800:2cyc
000617: fe 90

[	JR C , EXPANDED_SLOT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000619: 38 ec

[NEXT_SLOT :]
	label address: 0x00061b

[	LD A , L] Z80:5cyc, R800:2cyc
00061b: 7d

[	INC A] Z80:5cyc, R800:1cyc
00061c: 3c

[	LD L , A] Z80:5cyc, R800:2cyc
00061d: 6f

[	CP A , ( EXPTBL & 255 ) + 4] Z80:8cyc, R800:2cyc
00061e: fe c5

[	JR C , L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000620: 38 ce

[	XOR A , A] Z80:5cyc, R800:1cyc
000622: af

[	INC A] Z80:5cyc, R800:1cyc
000623: 3c

[	RET] Z80:11cyc, R800:5cyc
000624: c9

[CONSTANT_TARGET :]
	label address: 0x000625

[	DEC A] Z80:5cyc, R800:1cyc
000625: 3d

[	JP DETECT_TARGET] Z80:11cyc, R800:5cyc
000626: c3 3b 06

[	ENDSCOPE]
	Scope path: 

[	SCOPE RESTORE_DOS_SLOT]
	Scope path: RESTORE_DOS_SLOT:

[RESTORE_DOS_SLOT ::]
	global label address: 0x000629

[	LD A , [ RAMAD1 ]] Z80:14cyc, R800:6cyc
000629: 3a 42 f3

[	LD H , 0X40] Z80:8cyc, R800:2cyc
00062c: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
00062e: cd 24 00

[	LD A , [ RAMAD2 ]] Z80:14cyc, R800:6cyc
000631: 3a 43 f3

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000634: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000636: cd 24 00

[	EI] Z80:5cyc, R800:1cyc
000639: fb

[	RET] Z80:11cyc, R800:5cyc
00063a: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE DETECT_TARGET]
	Scope path: DETECT_TARGET:

[DETECT_TARGET ::]
	global label address: 0x00063b

[	LD A , [ ROM_TYPE ]] Z80:14cyc, R800:6cyc
00063b: 3a 8b 07

[	INC A] Z80:5cyc, R800:1cyc
00063e: 3c

[	JR Z , CHECK_ALL] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00063f: 28 09

[	DEC A] Z80:5cyc, R800:1cyc
000641: 3d

[	JR Z , CHECK_MEGASCC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000642: 28 10

[	DEC A] Z80:5cyc, R800:1cyc
000644: 3d

[	JR Z , CHECK_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000645: 28 17

[	DEC A] Z80:5cyc, R800:1cyc
000647: 3d

[	JR CHECK_SIMPLE64K] Z80:13cyc, R800:3cyc
000648: 18 1e

[CHECK_ALL :]
	label address: 0x00064a

[	CALL CHECK_MEGASCC] Z80:18cyc, R800:5cyc
00064a: cd 54 06

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00064d: c8

[	CALL CHECK_RC755] Z80:18cyc, R800:5cyc
00064e: cd 5e 06

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000651: c8

[	JR CHECK_SIMPLE64K] Z80:13cyc, R800:3cyc
000652: 18 14

[CHECK_MEGASCC :]
	label address: 0x000654

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000654: 3a 83 07

[	CALL IS_SLOT_SCC] Z80:18cyc, R800:5cyc
000657: cd c7 08

[	JP Z , DETECT_SCC] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
00065a: ca 78 06

[	RET] Z80:11cyc, R800:5cyc
00065d: c9

[CHECK_RC755 :]
	label address: 0x00065e

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00065e: 3a 83 07

[	CALL IS_SLOT_RC755] Z80:18cyc, R800:5cyc
000661: cd 41 0a

[	JP Z , DETECT_RC755] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000664: ca 86 06

[	RET] Z80:11cyc, R800:5cyc
000667: c9

[CHECK_SIMPLE64K :]
	label address: 0x000668

[	LD A , [ FILE_SIZE ]] Z80:14cyc, R800:6cyc
000668: 3a 84 07

[	CP A , 65] Z80:8cyc, R800:2cyc
00066b: fe 41

[	RET NC] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00066d: d0

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00066e: 3a 83 07

[	CALL IS_SLOT_SIMPLE64K] Z80:18cyc, R800:5cyc
000671: cd a8 0b

[	JP Z , DETECT_SIMPLE64K] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000674: ca 94 06

[	RET] Z80:11cyc, R800:5cyc
000677: c9

[DETECT_SCC :]
	label address: 0x000678

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000678: 3a 83 07

[	CALL SETUP_SLOT_SCC] Z80:18cyc, R800:5cyc
00067b: cd fd 08

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00067e: c0

[	XOR A , A] Z80:5cyc, R800:1cyc
00067f: af

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
000680: 32 8b 07

[	JP COMMON_PROCESS] Z80:11cyc, R800:5cyc
000683: c3 a2 06

[DETECT_RC755 :]
	label address: 0x000686

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000686: 3a 83 07

[	CALL SETUP_SLOT_RC755] Z80:18cyc, R800:5cyc
000689: cd af 0a

[	LD A , 1] Z80:8cyc, R800:2cyc
00068c: 3e 01

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
00068e: 32 8b 07

[	JP COMMON_PROCESS] Z80:11cyc, R800:5cyc
000691: c3 a2 06

[DETECT_SIMPLE64K :]
	label address: 0x000694

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000694: 3a 83 07

[	CALL SETUP_SLOT_SIMPLE64K] Z80:18cyc, R800:5cyc
000697: cd e2 0b

[	LD A , 2] Z80:8cyc, R800:2cyc
00069a: 3e 02

[	LD [ ROM_TYPE ] , A] Z80:14cyc, R800:6cyc
00069c: 32 8b 07

[	JP COMMON_PROCESS] Z80:11cyc, R800:5cyc
00069f: c3 a2 06

[COMMON_PROCESS :]
	label address: 0x0006a2

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
0006a2: cd 29 06

[	LD DE , MANUFACTURE_ID_MESSAGE] Z80:11cyc, R800:3cyc
0006a5: 11 06 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006a8: cd b9 07

[	LD A , [ MANUFACTURE_ID ]] Z80:14cyc, R800:6cyc
0006ab: 3a 89 07

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
0006ae: cd 41 08

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006b1: cd b9 07

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
0006b4: cd b6 07

[	LD DE , DEVICE_ID_MESSAGE] Z80:11cyc, R800:3cyc
0006b7: 11 16 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006ba: cd b9 07

[	LD A , [ DEVICE_ID ]] Z80:14cyc, R800:6cyc
0006bd: 3a 8a 07

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
0006c0: cd 57 08

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006c3: cd b9 07

[	CALL PUTS_CRLF] Z80:18cyc, R800:5cyc
0006c6: cd b6 07

[	LD DE , CARTRIDGE_TYPE_MESSAGE] Z80:11cyc, R800:3cyc
0006c9: 11 26 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006cc: cd b9 07

[	LD HL , CARTRIDGE_TYPE_TABLE] Z80:11cyc, R800:3cyc
0006cf: 21 7d 07

[	LD A , [ ROM_TYPE ]] Z80:14cyc, R800:6cyc
0006d2: 3a 8b 07

[	ADD A , A] Z80:5cyc, R800:1cyc
0006d5: 87

[	LD E , A] Z80:5cyc, R800:2cyc
0006d6: 5f

[	LD D , 0] Z80:8cyc, R800:2cyc
0006d7: 16 00

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0006d9: 19

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
0006da: 5e

[	INC HL] Z80:7cyc, R800:1cyc
0006db: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
0006dc: 56

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006dd: cd b9 07

[	LD DE , FILE_SIZE_MESSAGE] Z80:11cyc, R800:3cyc
0006e0: 11 36 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006e3: cd b9 07

[	LD HL , [ FILE_SIZE ]] Z80:17cyc, R800:7cyc
0006e6: 2a 84 07

[	CALL PUTDEC] Z80:18cyc, R800:5cyc
0006e9: cd f6 07

[	LD DE , KB_MESSAGE] Z80:11cyc, R800:3cyc
0006ec: 11 56 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006ef: cd b9 07

[	LD DE , ROM_SIZE_MESSAGE] Z80:11cyc, R800:3cyc
0006f2: 11 46 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
0006f5: cd b9 07

[	LD HL , [ ROM_SIZE ]] Z80:17cyc, R800:7cyc
0006f8: 2a 86 07

[	CALL PUTDEC] Z80:18cyc, R800:5cyc
0006fb: cd f6 07

[	LD DE , KB_MESSAGE] Z80:11cyc, R800:3cyc
0006fe: 11 56 07

[	CALL PUTS] Z80:18cyc, R800:5cyc
000701: cd b9 07

[	XOR A , A] Z80:5cyc, R800:1cyc
000704: af

[	RET] Z80:11cyc, R800:5cyc
000705: c9

[MANUFACTURE_ID_MESSAGE :]
	label address: 0x000706

[	DS "MANUFACTURE ID:"]
000706: 4d 41 4e 55 46 41 43 54
00070e: 55 52 45 20 49 44 3a

[	DB 0]
000715: 00

[DEVICE_ID_MESSAGE :]
	label address: 0x000716

[	DS "DEVICE ID     :"]
000716: 44 45 56 49 43 45 20 49
00071e: 44 20 20 20 20 20 3a

[	DB 0]
000725: 00

[CARTRIDGE_TYPE_MESSAGE :]
	label address: 0x000726

[	DS "CARTRIDGE TYPE:"]
000726: 43 41 52 54 52 49 44 47
00072e: 45 20 54 59 50 45 3a

[	DB 0]
000735: 00

[FILE_SIZE_MESSAGE :]
	label address: 0x000736

[	DS "FILE SIZE     :"]
000736: 46 49 4c 45 20 53 49 5a
00073e: 45 20 20 20 20 20 3a

[	DB 0]
000745: 00

[ROM_SIZE_MESSAGE :]
	label address: 0x000746

[	DS "ROM SIZE      :"]
000746: 52 4f 4d 20 53 49 5a 45
00074e: 20 20 20 20 20 20 3a

[	DB 0]
000755: 00

[KB_MESSAGE :]
	label address: 0x000756

[	DS "KB\r\n"]
000756: 4b 42 0d 0a

[	DB 0]
00075a: 00

[MEGA_SCC_MESSAGE :]
	label address: 0x00075b

[	DS "MegaSCC\r\n"]
00075b: 4d 65 67 61 53 43 43 0d
000763: 0a

[	DB 0]
000764: 00

[RC755_MESSAGE :]
	label address: 0x000765

[	DS "ESE-RC755\r\n"]
000765: 45 53 45 2d 52 43 37 35
00076d: 35 0d 0a

[	DB 0]
000770: 00

[SIMPLE64K_MESSAGE :]
	label address: 0x000771

[	DS "Simple64K\r\n"]
000771: 53 69 6d 70 6c 65 36 34
000779: 4b 0d 0a

[	DB 0]
00077c: 00

[CARTRIDGE_TYPE_TABLE :]
	label address: 0x00077d

[	DW MEGA_SCC_MESSAGE]
00077d: 5b 07

[	DW RC755_MESSAGE]
00077f: 65 07

[	DW SIMPLE64K_MESSAGE]
000781: 71 07

[	ENDSCOPE]
	Scope path: 

[TARGET_SLOT ::]
	global label address: 0x000783

[	DB 0XFF]
000783: ff

[FILE_SIZE ::]
	global label address: 0x000784

[	DW 0]
000784: 00 00

[ROM_SIZE ::]
	global label address: 0x000786

[	DW 0]
000786: 00 00

[TARGET_BLOCK_FOR_SIMPLE_ROM :]
	label address: 0x000788

[	DB 255]
000788: ff

[MANUFACTURE_ID ::]
	global label address: 0x000789

[	DB 0]
000789: 00

[DEVICE_ID ::]
	global label address: 0x00078a

[	DB 0]
00078a: 00

[ROM_TYPE ::]
	global label address: 0x00078b

[	DB 255]
00078b: ff

[PROGRESS_MAX ::]
	global label address: 0x00078c

[	DB 0]
00078c: 00

[BANK_BACK :]
	label address: 0x00078d

[	DB 0]
00078d: 00

[FCB ::]
	global label address: 0x00078e

[FCB_DR ::]
	global label address: 0x00078e

[	DB 0]
00078e: 00

[FCB_FNAME ::]
	global label address: 0x00078f

[	DS "        "]
00078f: 20 20 20 20 20 20 20 20

[FCB_FEXT ::]
	global label address: 0x000797

[	DS "   "]
000797: 20 20 20

[FCB_EX ::]
	global label address: 0x00079a

[	DB 0]
00079a: 00

[FCB_S1 ::]
	global label address: 0x00079b

[	DB 0]
00079b: 00

[FCB_S2 ::]
	global label address: 0x00079c

[	DB 0]
00079c: 00

[FCB_RC ::]
	global label address: 0x00079d

[	DB 0]
00079d: 00

[FCB_FILSIZ ::]
	global label address: 0x00079e

[	DW 0 , 0]
00079e: 00 00 00 00

[FCB_DATE ::]
	global label address: 0x0007a2

[	DW 0]
0007a2: 00 00

[FCB_TIME ::]
	global label address: 0x0007a4

[	DW 0]
0007a4: 00 00

[FCB_DEVID ::]
	global label address: 0x0007a6

[	DB 0]
0007a6: 00

[FCB_DIRLOC ::]
	global label address: 0x0007a7

[	DB 0]
0007a7: 00

[FCB_STRCLS ::]
	global label address: 0x0007a8

[	DW 0]
0007a8: 00 00

[FCB_CLRCLS ::]
	global label address: 0x0007aa

[	DW 0]
0007aa: 00 00

[FCB_CLSOFF ::]
	global label address: 0x0007ac

[	DW 0]
0007ac: 00 00

[FCB_CR ::]
	global label address: 0x0007ae

[	DB 0]
0007ae: 00

[FCB_RN ::]
	global label address: 0x0007af

[	DW 0 , 0]
0007af: 00 00 00 00

[	INCLUDE ".//stdio.asm"] begin
[	SCOPE PUTS_CRLF]
	Scope path: PUTS_CRLF:

[CRLF :]
	label address: 0x0007b3

[	DS "\r\n"]
0007b3: 0d 0a

[	DB 0]
0007b5: 00

[PUTS_CRLF ::]
	global label address: 0x0007b6

[	LD DE , CRLF] Z80:11cyc, R800:3cyc
0007b6: 11 b3 07

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTS]
	Scope path: PUTS:

[PUTS ::]
	global label address: 0x0007b9

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
0007b9: 1a

[	INC DE] Z80:7cyc, R800:1cyc
0007ba: 13

[	OR A , A] Z80:5cyc, R800:1cyc
0007bb: b7

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0007bc: c8

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0007bd: 0e 06

[	PUSH DE] Z80:12cyc, R800:6cyc
0007bf: d5

[	LD E , A] Z80:5cyc, R800:2cyc
0007c0: 5f

[	CALL BDOS] Z80:18cyc, R800:5cyc
0007c1: cd 05 00

[	POP DE] Z80:11cyc, R800:5cyc
0007c4: d1

[	JR PUTS] Z80:13cyc, R800:3cyc
0007c5: 18 f2

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTHEX16]
	Scope path: PUTHEX16:

[PUTHEX16 ::]
	global label address: 0x0007c7

[	PUSH HL] Z80:12cyc, R800:6cyc
0007c7: e5

[	LD A , H] Z80:5cyc, R800:2cyc
0007c8: 7c

[	CALL PUTHEX8] Z80:18cyc, R800:5cyc
0007c9: cd ce 07

[	POP HL] Z80:11cyc, R800:5cyc
0007cc: e1

[	LD A , L] Z80:5cyc, R800:2cyc
0007cd: 7d

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTHEX8]
	Scope path: PUTHEX8:

[PUTHEX8 ::]
	global label address: 0x0007ce

[	PUSH AF] Z80:12cyc, R800:6cyc
0007ce: f5

[	RRCA] Z80:5cyc, R800:1cyc
0007cf: 0f

[	RRCA] Z80:5cyc, R800:1cyc
0007d0: 0f

[	RRCA] Z80:5cyc, R800:1cyc
0007d1: 0f

[	RRCA] Z80:5cyc, R800:1cyc
0007d2: 0f

[	CALL PUTHEX_C] Z80:18cyc, R800:5cyc
0007d3: cd d7 07

[	POP AF] Z80:11cyc, R800:5cyc
0007d6: f1

[PUTHEX_C ::]
	global label address: 0x0007d7

[	AND A , 0X0F] Z80:8cyc, R800:2cyc
0007d7: e6 0f

[	LD HL , HEX_CHARACTERS] Z80:11cyc, R800:3cyc
0007d9: 21 e6 07

[	LD D , 0] Z80:8cyc, R800:2cyc
0007dc: 16 00

[	LD E , A] Z80:5cyc, R800:2cyc
0007de: 5f

[	ADD HL , DE] Z80:12cyc, R800:1cyc
0007df: 19

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
0007e0: 5e

[	LD C , _DIRIO] Z80:8cyc, R800:2cyc
0007e1: 0e 06

[	JP BDOS] Z80:11cyc, R800:5cyc
0007e3: c3 05 00

[HEX_CHARACTERS :]
	label address: 0x0007e6

[	DS "0123456789ABCDEF"]
0007e6: 30 31 32 33 34 35 36 37
0007ee: 38 39 41 42 43 44 45 46

[	ENDSCOPE]
	Scope path: 

[	SCOPE PUTDEC]
	Scope path: PUTDEC:

[PUTDEC ::]
	global label address: 0x0007f6

[	LD BC , STR] Z80:11cyc, R800:3cyc
0007f6: 01 3b 08

[	LD DE , 10000] Z80:11cyc, R800:3cyc
0007f9: 11 10 27

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
0007fc: cd 2f 08

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
0007ff: 02

[	INC BC] Z80:7cyc, R800:1cyc
000800: 03

[	LD DE , 1000] Z80:11cyc, R800:3cyc
000801: 11 e8 03

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
000804: cd 2f 08

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
000807: 02

[	INC BC] Z80:7cyc, R800:1cyc
000808: 03

[	LD DE , 100] Z80:11cyc, R800:3cyc
000809: 11 64 00

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
00080c: cd 2f 08

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
00080f: 02

[	INC BC] Z80:7cyc, R800:1cyc
000810: 03

[	LD DE , 10] Z80:11cyc, R800:3cyc
000811: 11 0a 00

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
000814: cd 2f 08

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
000817: 02

[	INC BC] Z80:7cyc, R800:1cyc
000818: 03

[	LD DE , 1] Z80:11cyc, R800:3cyc
000819: 11 01 00

[	CALL COUNT_SUB] Z80:18cyc, R800:5cyc
00081c: cd 2f 08

[	LD [ BC ] , A] Z80:8cyc, R800:4cyc
00081f: 02

[	LD HL , STR] Z80:11cyc, R800:3cyc
000820: 21 3b 08

[	LD A , 48] Z80:8cyc, R800:2cyc
000823: 3e 30

[ZERO_SKIP :]
	label address: 0x000825

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
000825: be

[	JR NZ , ZERO_SKIP_EXIT] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000826: 20 03

[	INC HL] Z80:7cyc, R800:1cyc
000828: 23

[	JR ZERO_SKIP] Z80:13cyc, R800:3cyc
000829: 18 fa

[ZERO_SKIP_EXIT :]
	label address: 0x00082b

[	EX DE , HL] Z80:5cyc, R800:1cyc
00082b: eb

[	JP PUTS] Z80:11cyc, R800:5cyc
00082c: c3 b9 07

[COUNT_SUB :]
	label address: 0x00082f

[	XOR A , A] Z80:5cyc, R800:1cyc
00082f: af

[	LD A , 48] Z80:8cyc, R800:2cyc
000830: 3e 30

[L1 :]
	label address: 0x000832

[	SBC HL , DE] Z80:17cyc, R800:2cyc
000832: ed 52

[	JR C , S1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000834: 38 03

[	INC A] Z80:5cyc, R800:1cyc
000836: 3c

[	JR L1] Z80:13cyc, R800:3cyc
000837: 18 f9

[S1 :]
	label address: 0x000839

[	ADD HL , DE] Z80:12cyc, R800:1cyc
000839: 19

[	RET] Z80:11cyc, R800:5cyc
00083a: c9

[STR :]
	label address: 0x00083b

[	DS "00000"]
00083b: 30 30 30 30 30

[	DB 0]
000840: 00

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//stdio.asm"] end

[	INCLUDE ".//flashrom.asm"] begin
[	SCOPE GET_MANUFACTURE_NAME]
	Scope path: GET_MANUFACTURE_NAME:

[GET_MANUFACTURE_NAME ::]
	global label address: 0x000841

[	CP A , MID_SST] Z80:8cyc, R800:2cyc
000841: fe bf

[	LD DE , S_SST] Z80:11cyc, R800:3cyc
000843: 11 4b 08

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000846: c8

[	LD DE , S_UNKNOWN] Z80:11cyc, R800:3cyc
000847: 11 4f 08

[	RET] Z80:11cyc, R800:5cyc
00084a: c9

[S_SST :]
	label address: 0x00084b

[	DS "SST"]
00084b: 53 53 54

[	DB 0]
00084e: 00

[S_UNKNOWN ::]
	global label address: 0x00084f

[	DS "Unknown"]
00084f: 55 6e 6b 6e 6f 77 6e

[	DB 0]
000856: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE GET_DEVICE_NAME]
	Scope path: GET_DEVICE_NAME:

[GET_DEVICE_NAME ::]
	global label address: 0x000857

[	LD HL , 512] Z80:11cyc, R800:3cyc
000857: 21 00 02

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
00085a: 22 86 07

[	CP A , DID_SST39SF040] Z80:8cyc, R800:2cyc
00085d: fe b7

[	LD DE , S_SST39SF040] Z80:11cyc, R800:3cyc
00085f: 11 9d 08

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000862: c8

[	LD HL , 256] Z80:11cyc, R800:3cyc
000863: 21 00 01

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
000866: 22 86 07

[	CP A , DID_SST39SF020A] Z80:8cyc, R800:2cyc
000869: fe b6

[	LD DE , S_SST39SF020A] Z80:11cyc, R800:3cyc
00086b: 11 91 08

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00086e: c8

[	LD HL , 128] Z80:11cyc, R800:3cyc
00086f: 21 80 00

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
000872: 22 86 07

[	CP A , DID_SST39SF010A] Z80:8cyc, R800:2cyc
000875: fe b5

[	LD DE , S_SST39SF010A] Z80:11cyc, R800:3cyc
000877: 11 85 08

[	RET Z] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00087a: c8

[	LD HL , 0] Z80:11cyc, R800:3cyc
00087b: 21 00 00

[	LD [ ROM_SIZE ] , HL] Z80:17cyc, R800:7cyc
00087e: 22 86 07

[	LD DE , S_UNKNOWN] Z80:11cyc, R800:3cyc
000881: 11 4f 08

[	RET] Z80:11cyc, R800:5cyc
000884: c9

[S_SST39SF010A :]
	label address: 0x000885

[	DS "SST39SF010A"]
000885: 53 53 54 33 39 53 46 30
00088d: 31 30 41

[	DB 0]
000890: 00

[S_SST39SF020A :]
	label address: 0x000891

[	DS "SST39SF020A"]
000891: 53 53 54 33 39 53 46 30
000899: 32 30 41

[	DB 0]
00089c: 00

[S_SST39SF040 :]
	label address: 0x00089d

[	DS "SST39SF040"]
00089d: 53 53 54 33 39 53 46 30
0008a5: 34 30

[	DB 0]
0008a7: 00

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_FLASH_COMMAND]
	Scope path: SETUP_FLASH_COMMAND:

[SETUP_FLASH_COMMAND ::]
	global label address: 0x0008a8

[	LD DE , JUMP_TABLE] Z80:11cyc, R800:3cyc
0008a8: 11 b8 08

[	LD BC , JUMP_TABLE_END - JUMP_TABLE] Z80:11cyc, R800:3cyc
0008ab: 01 0f 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
0008ae: ed b0

[	RET] Z80:11cyc, R800:5cyc
0008b0: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE IS_ROM]
	Scope path: IS_ROM:

[IS_ROM ::]
	global label address: 0x0008b1

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
0008b1: 7e

[	CPL] Z80:5cyc, R800:1cyc
0008b2: 2f

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
0008b3: 77

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0008b4: be

[	CPL] Z80:5cyc, R800:1cyc
0008b5: 2f

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
0008b6: 77

[	RET] Z80:11cyc, R800:5cyc
0008b7: c9

[	ENDSCOPE]
	Scope path: 

[JUMP_TABLE :]
	label address: 0x0008b8

[FLASH_CHIP_ERASE ::]
	global label address: 0x0008b8

[	RET] Z80:11cyc, R800:5cyc
0008b8: c9

[	RET] Z80:11cyc, R800:5cyc
0008b9: c9

[	RET] Z80:11cyc, R800:5cyc
0008ba: c9

[FLASH_WRITE_8KB ::]
	global label address: 0x0008bb

[	RET] Z80:11cyc, R800:5cyc
0008bb: c9

[	RET] Z80:11cyc, R800:5cyc
0008bc: c9

[	RET] Z80:11cyc, R800:5cyc
0008bd: c9

[FLASH_SET_BANK ::]
	global label address: 0x0008be

[	RET] Z80:11cyc, R800:5cyc
0008be: c9

[	RET] Z80:11cyc, R800:5cyc
0008bf: c9

[	RET] Z80:11cyc, R800:5cyc
0008c0: c9

[FLASH_GET_START_BANK ::]
	global label address: 0x0008c1

[	RET] Z80:11cyc, R800:5cyc
0008c1: c9

[	RET] Z80:11cyc, R800:5cyc
0008c2: c9

[	RET] Z80:11cyc, R800:5cyc
0008c3: c9

[FLASH_FINISH ::]
	global label address: 0x0008c4

[	RET] Z80:11cyc, R800:5cyc
0008c4: c9

[	RET] Z80:11cyc, R800:5cyc
0008c5: c9

[	RET] Z80:11cyc, R800:5cyc
0008c6: c9

[JUMP_TABLE_END :]
	label address: 0x0008c7

[	INCLUDE ".//flashrom.asm"] end

[	INCLUDE ".//scc.asm"] begin
[	SCOPE IS_SLOT_SCC]
	Scope path: IS_SLOT_SCC:

[IS_SLOT_SCC ::]
	global label address: 0x0008c7

[	LD H , 0X80] Z80:8cyc, R800:2cyc
0008c7: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0008c9: cd 24 00

[	LD A , 0X3F] Z80:8cyc, R800:2cyc
0008cc: 3e 3f

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
0008ce: 32 00 90

[	LD H , 0X98] Z80:8cyc, R800:2cyc
0008d1: 26 98

[	LD B , 0X80] Z80:8cyc, R800:2cyc
0008d3: 06 80

[L1 :]
	label address: 0x0008d5

[	DEC B] Z80:5cyc, R800:1cyc
0008d5: 05

[	LD L , B] Z80:5cyc, R800:2cyc
0008d6: 68

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
0008d7: cd b1 08

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
0008da: c0

[	INC B] Z80:5cyc, R800:1cyc
0008db: 04

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0008dc: 10 f7

[	LD H , 0X80] Z80:8cyc, R800:2cyc
0008de: 26 80

[L2 :]
	label address: 0x0008e0

[	DEC B] Z80:5cyc, R800:1cyc
0008e0: 05

[	LD L , B] Z80:5cyc, R800:2cyc
0008e1: 68

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
0008e2: cd b1 08

[	JR Z , NOT_SCC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0008e5: 28 13

[	INC B] Z80:5cyc, R800:1cyc
0008e7: 04

[	DJNZ L2] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0008e8: 10 f6

[	LD A , B] Z80:5cyc, R800:2cyc
0008ea: 78

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
0008eb: 32 00 90

[L3 :]
	label address: 0x0008ee

[	DEC B] Z80:5cyc, R800:1cyc
0008ee: 05

[	LD L , B] Z80:5cyc, R800:2cyc
0008ef: 68

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
0008f0: cd b1 08

[	JR Z , NOT_SCC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0008f3: 28 05

[	INC B] Z80:5cyc, R800:1cyc
0008f5: 04

[	DJNZ L3] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0008f6: 10 f6

[	XOR A , A] Z80:5cyc, R800:1cyc
0008f8: af

[	RET] Z80:11cyc, R800:5cyc
0008f9: c9

[NOT_SCC :]
	label address: 0x0008fa

[	XOR A , A] Z80:5cyc, R800:1cyc
0008fa: af

[	INC A] Z80:5cyc, R800:1cyc
0008fb: 3c

[	RET] Z80:11cyc, R800:5cyc
0008fc: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_SLOT_SCC]
	Scope path: SETUP_SLOT_SCC:

[SETUP_SLOT_SCC ::]
	global label address: 0x0008fd

[	PUSH AF] Z80:12cyc, R800:6cyc
0008fd: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
0008fe: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000900: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
000903: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000904: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000906: cd 24 00

[	XOR A , A] Z80:5cyc, R800:1cyc
000909: af

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
00090a: 32 00 50

[	LD [ SCC_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
00090d: 32 00 70

[	INC A] Z80:5cyc, R800:1cyc
000910: 3c

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
000911: 32 00 90

[	LD A , 6] Z80:8cyc, R800:2cyc
000914: 3e 06

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000916: 32 00 b0

[	LD HL , SCC_FLASH_JUMP_TABLE] Z80:11cyc, R800:3cyc
000919: 21 56 09

[	CALL SETUP_FLASH_COMMAND] Z80:18cyc, R800:5cyc
00091c: cd a8 08

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
00091f: 21 00 40

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000922: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000924: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000927: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000929: 32 aa 8a

[	LD A , 0X90] Z80:8cyc, R800:2cyc
00092c: 3e 90

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00092e: 32 55 a5

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
000931: 5e

[	INC HL] Z80:7cyc, R800:1cyc
000932: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
000933: 56

[	LD [ MANUFACTURE_ID ] , DE] Z80:22cyc, R800:8cyc
000934: ed 53 89 07

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000938: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00093a: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00093d: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00093f: 32 aa 8a

[	LD A , 0XF0] Z80:8cyc, R800:2cyc
000942: 3e f0

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000944: 32 55 a5

[	LD A , [ MANUFACTURE_ID ]] Z80:14cyc, R800:6cyc
000947: 3a 89 07

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
00094a: cd 41 08

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
00094d: c0

[	LD A , [ DEVICE_ID ]] Z80:14cyc, R800:6cyc
00094e: 3a 8a 07

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
000951: cd 57 08

[	XOR A , A] Z80:5cyc, R800:1cyc
000954: af

[	RET] Z80:11cyc, R800:5cyc
000955: c9

[SCC_FLASH_JUMP_TABLE :]
	label address: 0x000956

[	JP SCC_FLASH_CHIP_ERASE] Z80:11cyc, R800:5cyc
000956: c3 c7 09

[	JP SCC_FLASH_WRITE_8KB] Z80:11cyc, R800:5cyc
000959: c3 65 09

[	JP SCC_SET_BANK] Z80:11cyc, R800:5cyc
00095c: c3 0e 0a

[	JP SCC_GET_START_BANK] Z80:11cyc, R800:5cyc
00095f: c3 12 0a

[	JP SCC_FINISH] Z80:11cyc, R800:5cyc
000962: c3 1b 0a

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_FLASH_WRITE_8KB]
	Scope path: SCC_FLASH_WRITE_8KB:

[SCC_FLASH_WRITE_8KB ::]
	global label address: 0x000965

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000965: 3a 83 07

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000968: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
00096a: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00096d: 3a 83 07

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000970: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000972: cd 24 00

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000975: 3a 8d 07

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
000978: 32 00 50

[	LD A , 1] Z80:8cyc, R800:2cyc
00097b: 3e 01

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
00097d: 32 00 90

[	LD A , 6] Z80:8cyc, R800:2cyc
000980: 3e 06

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000982: 32 00 b0

[	LD DE , 0X2000] Z80:11cyc, R800:3cyc
000985: 11 00 20

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000988: 21 00 40

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00098b: 01 00 20

[LOOP_OF_BC :]
	label address: 0x00098e

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00098e: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000990: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000993: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000995: 32 aa 8a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
000998: 3e a0

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00099a: 32 55 a5

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00099d: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00099e: 77

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
00099f: 3a 8d 07

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
0009a2: 32 00 50

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
0009a5: 1a

[	PUSH BC] Z80:12cyc, R800:6cyc
0009a6: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
0009a7: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x0009aa

[	NOP] Z80:5cyc, R800:1cyc
0009aa: 00

[	NOP] Z80:5cyc, R800:1cyc
0009ab: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
0009ac: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0009ad: 28 0b

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0009af: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
0009b1: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0009b2: 20 f6

[WRITE_ERROR :]
	label address: 0x0009b4

[	POP BC] Z80:11cyc, R800:5cyc
0009b4: c1

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
0009b5: cd 29 06

[	SCF] Z80:5cyc, R800:1cyc
0009b8: 37

[	RET] Z80:11cyc, R800:5cyc
0009b9: c9

[WRITE_COMPLETE :]
	label address: 0x0009ba

[	POP BC] Z80:11cyc, R800:5cyc
0009ba: c1

[	INC DE] Z80:7cyc, R800:1cyc
0009bb: 13

[	INC HL] Z80:7cyc, R800:1cyc
0009bc: 23

[	DEC BC] Z80:7cyc, R800:1cyc
0009bd: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
0009be: 78

[	OR A , C] Z80:5cyc, R800:1cyc
0009bf: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
0009c0: 20 cc

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
0009c2: cd 29 06

[	OR A , A] Z80:5cyc, R800:1cyc
0009c5: b7

[	RET] Z80:11cyc, R800:5cyc
0009c6: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_FLASH_CHIP_ERASE]
	Scope path: SCC_FLASH_CHIP_ERASE:

[SCC_FLASH_CHIP_ERASE ::]
	global label address: 0x0009c7

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0009c7: 3a 83 07

[	LD H , 0X40] Z80:8cyc, R800:2cyc
0009ca: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0009cc: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
0009cf: 3a 83 07

[	LD H , 0X80] Z80:8cyc, R800:2cyc
0009d2: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
0009d4: cd 24 00

[	LD A , 1] Z80:8cyc, R800:2cyc
0009d7: 3e 01

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
0009d9: 32 00 90

[	LD A , 6] Z80:8cyc, R800:2cyc
0009dc: 3e 06

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
0009de: 32 00 b0

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
0009e1: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0009e3: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
0009e6: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
0009e8: 32 aa 8a

[	LD A , 0X80] Z80:8cyc, R800:2cyc
0009eb: 3e 80

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0009ed: 32 55 a5

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
0009f0: 3e aa

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0009f2: 32 55 a5

[	LD A , 0X55] Z80:8cyc, R800:2cyc
0009f5: 3e 55

[	LD [ SCC_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
0009f7: 32 aa 8a

[	LD A , 0X10] Z80:8cyc, R800:2cyc
0009fa: 3e 10

[	LD [ SCC_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
0009fc: 32 55 a5

[	LD HL , JIFFY] Z80:11cyc, R800:3cyc
0009ff: 21 9e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000a02: 7e

[	ADD A , 10] Z80:8cyc, R800:2cyc
000a03: c6 0a

[	EI] Z80:5cyc, R800:1cyc
000a05: fb

[WAIT_L1 :]
	label address: 0x000a06

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
000a06: be

[	JR NZ , WAIT_L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a07: 20 fd

[	DI] Z80:5cyc, R800:2cyc
000a09: f3

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000a0a: cd 29 06

[	RET] Z80:11cyc, R800:5cyc
000a0d: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_SET_BANK]
	Scope path: SCC_SET_BANK:

[SCC_SET_BANK ::]
	global label address: 0x000a0e

[	LD [ BANK_BACK ] , A] Z80:14cyc, R800:6cyc
000a0e: 32 8d 07

[	RET] Z80:11cyc, R800:5cyc
000a11: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_GET_START_BANK]
	Scope path: SCC_GET_START_BANK:

[SCC_GET_START_BANK ::]
	global label address: 0x000a12

[	XOR A , A] Z80:5cyc, R800:1cyc
000a12: af

[	RET] Z80:11cyc, R800:5cyc
000a13: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_RESTORE_BANK]
	Scope path: SCC_RESTORE_BANK:

[SCC_RESTORE_BANK ::]
	global label address: 0x000a14

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000a14: 3a 8d 07

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
000a17: 32 00 50

[	RET] Z80:11cyc, R800:5cyc
000a1a: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SCC_FINISH]
	Scope path: SCC_FINISH:

[SCC_FINISH ::]
	global label address: 0x000a1b

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000a1b: 3a 83 07

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000a1e: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000a20: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000a23: 3a 83 07

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000a26: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000a28: cd 24 00

[	XOR A , A] Z80:5cyc, R800:1cyc
000a2b: af

[	LD [ SCC_BANK0_SEL ] , A] Z80:14cyc, R800:6cyc
000a2c: 32 00 50

[	INC A] Z80:5cyc, R800:1cyc
000a2f: 3c

[	LD [ SCC_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000a30: 32 00 70

[	INC A] Z80:5cyc, R800:1cyc
000a33: 3c

[	LD [ SCC_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
000a34: 32 00 90

[	INC A] Z80:5cyc, R800:1cyc
000a37: 3c

[	LD [ SCC_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000a38: 32 00 b0

[	JP RESTORE_DOS_SLOT] Z80:11cyc, R800:5cyc
000a3b: c3 29 06

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//scc.asm"] end

[	INCLUDE ".//ese_rc755.asm"] begin
[	SCOPE IS_SLOT_RC755]
	Scope path: IS_SLOT_RC755:

[NOT_RC755 :]
	label address: 0x000a3e

[	XOR A , A] Z80:5cyc, R800:1cyc
000a3e: af

[	INC A] Z80:5cyc, R800:1cyc
000a3f: 3c

[	RET] Z80:11cyc, R800:5cyc
000a40: c9

[IS_SLOT_RC755 ::]
	global label address: 0x000a41

[	PUSH AF] Z80:12cyc, R800:6cyc
000a41: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000a42: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000a44: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
000a47: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000a48: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000a4a: cd 24 00

[	LD HL , 0X5000] Z80:11cyc, R800:3cyc
000a4d: 21 00 50

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000a50: cd b1 08

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a53: 28 e9

[	LD HL , 0X7000] Z80:11cyc, R800:3cyc
000a55: 21 00 70

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000a58: cd b1 08

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a5b: 28 e1

[	LD HL , 0X9000] Z80:11cyc, R800:3cyc
000a5d: 21 00 90

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000a60: cd b1 08

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a63: 28 d9

[	LD HL , 0XB000] Z80:11cyc, R800:3cyc
000a65: 21 00 b0

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000a68: cd b1 08

[	JR Z , NOT_RC755] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000a6b: 28 d1

[	XOR A , A] Z80:5cyc, R800:1cyc
000a6d: af

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000a6e: 32 00 60

[	LD A , RC755_FLASH] Z80:8cyc, R800:2cyc
000a71: 3e 80

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000a73: 32 00 a0

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000a76: 21 00 40

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000a79: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000a7b: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000a7e: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000a80: 32 aa 4a

[	LD A , 0X90] Z80:8cyc, R800:2cyc
000a83: 3e 90

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000a85: 32 55 55

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
000a88: 5e

[	INC HL] Z80:7cyc, R800:1cyc
000a89: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
000a8a: 56

[	LD [ MANUFACTURE_ID ] , DE] Z80:22cyc, R800:8cyc
000a8b: ed 53 89 07

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000a8f: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000a91: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000a94: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000a96: 32 aa 4a

[	LD A , 0XF0] Z80:8cyc, R800:2cyc
000a99: 3e f0

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000a9b: 32 55 55

[	LD A , 0X03] Z80:8cyc, R800:2cyc
000a9e: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000aa0: 32 00 a0

[	LD A , E] Z80:5cyc, R800:2cyc
000aa3: 7b

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
000aa4: cd 41 08

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000aa7: c0

[	LD A , [ MANUFACTURE_ID + 1 ]] Z80:14cyc, R800:6cyc
000aa8: 3a 8a 07

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
000aab: cd 57 08

[	RET] Z80:11cyc, R800:5cyc
000aae: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_SLOT_RC755]
	Scope path: SETUP_SLOT_RC755:

[SETUP_SLOT_RC755 ::]
	global label address: 0x000aaf

[	PUSH AF] Z80:12cyc, R800:6cyc
000aaf: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000ab0: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000ab2: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
000ab5: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000ab6: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000ab8: cd 24 00

[	LD HL , RC755_FLASH_JUMP_TABLE] Z80:11cyc, R800:3cyc
000abb: 21 c3 0a

[	CALL SETUP_FLASH_COMMAND] Z80:18cyc, R800:5cyc
000abe: cd a8 08

[	XOR A , A] Z80:5cyc, R800:1cyc
000ac1: af

[	RET] Z80:11cyc, R800:5cyc
000ac2: c9

[RC755_FLASH_JUMP_TABLE :]
	label address: 0x000ac3

[	JP RC755_FLASH_CHIP_ERASE] Z80:11cyc, R800:5cyc
000ac3: c3 34 0b

[	JP RC755_FLASH_WRITE_8KB] Z80:11cyc, R800:5cyc
000ac6: c3 d2 0a

[	JP RC755_SET_BANK] Z80:11cyc, R800:5cyc
000ac9: c3 7b 0b

[	JP RC755_GET_START_BANK] Z80:11cyc, R800:5cyc
000acc: c3 7f 0b

[	JP RC755_FINISH] Z80:11cyc, R800:5cyc
000acf: c3 88 0b

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_FLASH_WRITE_8KB]
	Scope path: RC755_FLASH_WRITE_8KB:

[RC755_FLASH_WRITE_8KB ::]
	global label address: 0x000ad2

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000ad2: 3a 83 07

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000ad5: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000ad7: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000ada: 3a 83 07

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000add: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000adf: cd 24 00

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000ae2: 3a 8d 07

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000ae5: 32 00 60

[	LD DE , 0X2000] Z80:11cyc, R800:3cyc
000ae8: 11 00 20

[	LD HL , 0X6000] Z80:11cyc, R800:3cyc
000aeb: 21 00 60

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
000aee: 01 00 20

[	LD A , RC755_FLASH] Z80:8cyc, R800:2cyc
000af1: 3e 80

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000af3: 32 00 a0

[LOOP_OF_BC :]
	label address: 0x000af6

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000af6: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000af8: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000afb: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000afd: 32 aa 4a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
000b00: 3e a0

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000b02: 32 55 55

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
000b05: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
000b06: 77

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000b07: 3a 8d 07

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000b0a: 32 00 60

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
000b0d: 1a

[	PUSH BC] Z80:12cyc, R800:6cyc
000b0e: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
000b0f: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x000b12

[	NOP] Z80:5cyc, R800:1cyc
000b12: 00

[	NOP] Z80:5cyc, R800:1cyc
000b13: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
000b14: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000b15: 28 0b

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000b17: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
000b19: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000b1a: 20 f6

[WRITE_ERROR :]
	label address: 0x000b1c

[	POP BC] Z80:11cyc, R800:5cyc
000b1c: c1

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000b1d: cd 29 06

[	SCF] Z80:5cyc, R800:1cyc
000b20: 37

[	RET] Z80:11cyc, R800:5cyc
000b21: c9

[WRITE_COMPLETE :]
	label address: 0x000b22

[	POP BC] Z80:11cyc, R800:5cyc
000b22: c1

[	INC DE] Z80:7cyc, R800:1cyc
000b23: 13

[	INC HL] Z80:7cyc, R800:1cyc
000b24: 23

[	DEC BC] Z80:7cyc, R800:1cyc
000b25: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
000b26: 78

[	OR A , C] Z80:5cyc, R800:1cyc
000b27: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000b28: 20 cc

[	LD A , 0X03] Z80:8cyc, R800:2cyc
000b2a: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000b2c: 32 00 a0

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000b2f: cd 29 06

[	OR A , A] Z80:5cyc, R800:1cyc
000b32: b7

[	RET] Z80:11cyc, R800:5cyc
000b33: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_FLASH_CHIP_ERASE]
	Scope path: RC755_FLASH_CHIP_ERASE:

[RC755_FLASH_CHIP_ERASE ::]
	global label address: 0x000b34

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000b34: 3a 83 07

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000b37: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000b39: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000b3c: 3a 83 07

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000b3f: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000b41: cd 24 00

[	LD A , RC755_FLASH] Z80:8cyc, R800:2cyc
000b44: 3e 80

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000b46: 32 00 a0

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000b49: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000b4b: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000b4e: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000b50: 32 aa 4a

[	LD A , 0X80] Z80:8cyc, R800:2cyc
000b53: 3e 80

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000b55: 32 55 55

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
000b58: 3e aa

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000b5a: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
000b5d: 3e 55

[	LD [ RC755_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
000b5f: 32 aa 4a

[	LD A , 0X10] Z80:8cyc, R800:2cyc
000b62: 3e 10

[	LD [ RC755_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
000b64: 32 55 55

[	LD HL , JIFFY] Z80:11cyc, R800:3cyc
000b67: 21 9e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
000b6a: 7e

[	ADD A , 10] Z80:8cyc, R800:2cyc
000b6b: c6 0a

[	EI] Z80:5cyc, R800:1cyc
000b6d: fb

[WAIT_L1 :]
	label address: 0x000b6e

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
000b6e: be

[	JR NZ , WAIT_L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000b6f: 20 fd

[	DI] Z80:5cyc, R800:2cyc
000b71: f3

[	LD A , 0X03] Z80:8cyc, R800:2cyc
000b72: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000b74: 32 00 a0

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000b77: cd 29 06

[	RET] Z80:11cyc, R800:5cyc
000b7a: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_SET_BANK]
	Scope path: RC755_SET_BANK:

[RC755_SET_BANK ::]
	global label address: 0x000b7b

[	LD [ BANK_BACK ] , A] Z80:14cyc, R800:6cyc
000b7b: 32 8d 07

[	RET] Z80:11cyc, R800:5cyc
000b7e: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_GET_START_BANK]
	Scope path: RC755_GET_START_BANK:

[RC755_GET_START_BANK ::]
	global label address: 0x000b7f

[	XOR A , A] Z80:5cyc, R800:1cyc
000b7f: af

[	RET] Z80:11cyc, R800:5cyc
000b80: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_RESTORE_BANK]
	Scope path: RC755_RESTORE_BANK:

[RC755_RESTORE_BANK ::]
	global label address: 0x000b81

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000b81: 3a 8d 07

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000b84: 32 00 60

[	RET] Z80:11cyc, R800:5cyc
000b87: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE RC755_FINISH]
	Scope path: RC755_FINISH:

[RC755_FINISH ::]
	global label address: 0x000b88

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000b88: 3a 83 07

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000b8b: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000b8d: cd 24 00

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
000b90: 3a 83 07

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000b93: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000b95: cd 24 00

[	LD A , 3] Z80:8cyc, R800:2cyc
000b98: 3e 03

[	LD [ RC755_BANK3_SEL ] , A] Z80:14cyc, R800:6cyc
000b9a: 32 00 a0

[	DEC A] Z80:5cyc, R800:1cyc
000b9d: 3d

[	LD [ RC755_BANK2_SEL ] , A] Z80:14cyc, R800:6cyc
000b9e: 32 00 80

[	DEC A] Z80:5cyc, R800:1cyc
000ba1: 3d

[	LD [ RC755_BANK1_SEL ] , A] Z80:14cyc, R800:6cyc
000ba2: 32 00 60

[	JP RESTORE_DOS_SLOT] Z80:11cyc, R800:5cyc
000ba5: c3 29 06

[	ENDSCOPE]
	Scope path: 

[	INCLUDE ".//ese_rc755.asm"] end

[	INCLUDE ".//simple64k.asm"] begin
[	SCOPE IS_SLOT_SIMPLE64K]
	Scope path: IS_SLOT_SIMPLE64K:

[IS_SLOT_SIMPLE64K ::]
	global label address: 0x000ba8

[	OR A , A] Z80:5cyc, R800:1cyc
000ba8: b7

[	JP M , NOT_SUPPORT_EXTENDED_SLOT] Z80:11cyc, R800:5cyc(cond=true), 3cyc(cond=false)
000ba9: fa df 0b

[	PUSH AF] Z80:12cyc, R800:6cyc
000bac: f5

[	LD H , 0X40] Z80:8cyc, R800:2cyc
000bad: 26 40

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000baf: cd 24 00

[	POP AF] Z80:11cyc, R800:5cyc
000bb2: f1

[	LD H , 0X80] Z80:8cyc, R800:2cyc
000bb3: 26 80

[	CALL ENASLT] Z80:18cyc, R800:5cyc
000bb5: cd 24 00

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000bb8: 21 00 40

[	LD DE , 0X0100] Z80:11cyc, R800:3cyc
000bbb: 11 00 01

[	LD B , 0X80] Z80:8cyc, R800:2cyc
000bbe: 06 80

[L1 :]
	label address: 0x000bc0

[	CALL IS_ROM] Z80:18cyc, R800:5cyc
000bc0: cd b1 08

[	JR Z , NOT_SIMPLE64K] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000bc3: 28 1a

[	ADD HL , DE] Z80:12cyc, R800:1cyc
000bc5: 19

[	DJNZ L1] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000bc6: 10 f8

[	CALL RESTORE_DOS_SLOT] Z80:18cyc, R800:5cyc
000bc8: cd 29 06

[	CALL TRANSFER_TO_PAGE2] Z80:18cyc, R800:5cyc
000bcb: cd 30 0c

[	CALL SIMPLE64K_P2_GET_ID] Z80:18cyc, R800:5cyc
000bce: cd 20 a0

[	LD A , [ MANUFACTURE_ID ]] Z80:14cyc, R800:6cyc
000bd1: 3a 89 07

[	CALL GET_MANUFACTURE_NAME] Z80:18cyc, R800:5cyc
000bd4: cd 41 08

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000bd7: c0

[	LD A , [ MANUFACTURE_ID + 1 ]] Z80:14cyc, R800:6cyc
000bd8: 3a 8a 07

[	CALL GET_DEVICE_NAME] Z80:18cyc, R800:5cyc
000bdb: cd 57 08

[	RET] Z80:11cyc, R800:5cyc
000bde: c9

[NOT_SIMPLE64K :]
	label address: 0x000bdf

[NOT_SUPPORT_EXTENDED_SLOT :]
	label address: 0x000bdf

[	XOR A , A] Z80:5cyc, R800:1cyc
000bdf: af

[	INC A] Z80:5cyc, R800:1cyc
000be0: 3c

[	RET] Z80:11cyc, R800:5cyc
000be1: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SETUP_SLOT_SIMPLE64K]
	Scope path: SETUP_SLOT_SIMPLE64K:

[SETUP_SLOT_SIMPLE64K ::]
	global label address: 0x000be2

[	LD A , 64] Z80:8cyc, R800:2cyc
000be2: 3e 40

[	LD [ ROM_SIZE ] , A] Z80:14cyc, R800:6cyc
000be4: 32 86 07

[	LD HL , SIMPLE64K_FLASH_JUMP_TABLE] Z80:11cyc, R800:3cyc
000be7: 21 ef 0b

[	CALL SETUP_FLASH_COMMAND] Z80:18cyc, R800:5cyc
000bea: cd a8 08

[	XOR A , A] Z80:5cyc, R800:1cyc
000bed: af

[	RET] Z80:11cyc, R800:5cyc
000bee: c9

[SIMPLE64K_FLASH_JUMP_TABLE :]
	label address: 0x000bef

[	JP SIMPLE64K_P2_FLASH_CHIP_ERASE] Z80:11cyc, R800:5cyc
000bef: c3 5c a0

[	JP SIMPLE64K_FLASH_WRITE_8KB] Z80:11cyc, R800:5cyc
000bf2: c3 3c 0c

[	JP SIMPLE64K_SET_BANK] Z80:11cyc, R800:5cyc
000bf5: c3 fe 0b

[	JP SIMPLE64K_GET_START_BANK] Z80:11cyc, R800:5cyc
000bf8: c3 02 0c

[	JP SIMPLE64K_FINISH] Z80:11cyc, R800:5cyc
000bfb: c3 2f 0c

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_SET_BANK]
	Scope path: SIMPLE64K_SET_BANK:

[SIMPLE64K_SET_BANK ::]
	global label address: 0x000bfe

[	LD [ BANK_BACK ] , A] Z80:14cyc, R800:6cyc
000bfe: 32 8d 07

[	RET] Z80:11cyc, R800:5cyc
000c01: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_GET_START_BANK]
	Scope path: SIMPLE64K_GET_START_BANK:

[SIMPLE64K_GET_START_BANK ::]
	global label address: 0x000c02

[	LD A , H] Z80:5cyc, R800:2cyc
000c02: 7c

[	OR A , A] Z80:5cyc, R800:1cyc
000c03: b7

[	SCF] Z80:5cyc, R800:1cyc
000c04: 37

[	RET NZ] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000c05: c0

[	LD A , L] Z80:5cyc, R800:2cyc
000c06: 7d

[	CP A , 65] Z80:8cyc, R800:2cyc
000c07: fe 41

[	CCF] Z80:5cyc, R800:1cyc
000c09: 3f

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000c0a: d8

[	LD A , [ TARGET_BLOCK_FOR_SIMPLE_ROM ]] Z80:14cyc, R800:6cyc
000c0b: 3a 88 07

[	INC A] Z80:5cyc, R800:1cyc
000c0e: 3c

[	JR NZ , TARGET_ADDRESS_REQUEST] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000c0f: 20 11

[	LD A , L] Z80:5cyc, R800:2cyc
000c11: 7d

[	CP A , 33] Z80:8cyc, R800:2cyc
000c12: fe 21

[	JR C , FILE_UNDER_32KB] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000c14: 38 05

[FILE_33KB_TO_64KB :]
	label address: 0x000c16

[	XOR A , A] Z80:5cyc, R800:1cyc
000c16: af

[	LD [ TARGET_BLOCK_FOR_SIMPLE_ROM ] , A] Z80:14cyc, R800:6cyc
000c17: 32 88 07

[	RET] Z80:11cyc, R800:5cyc
000c1a: c9

[FILE_UNDER_32KB :]
	label address: 0x000c1b

[	LD A , 2] Z80:8cyc, R800:2cyc
000c1b: 3e 02

[	LD [ TARGET_BLOCK_FOR_SIMPLE_ROM ] , A] Z80:14cyc, R800:6cyc
000c1d: 32 88 07

[	OR A , A] Z80:5cyc, R800:1cyc
000c20: b7

[	RET] Z80:11cyc, R800:5cyc
000c21: c9

[TARGET_ADDRESS_REQUEST :]
	label address: 0x000c22

[	DEC A] Z80:5cyc, R800:1cyc
000c22: 3d

[	LD B , A] Z80:5cyc, R800:2cyc
000c23: 47

[	LD A , L] Z80:5cyc, R800:2cyc
000c24: 7d

[	RRCA] Z80:5cyc, R800:1cyc
000c25: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000c26: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000c27: 0f

[	ADD A , B] Z80:5cyc, R800:1cyc
000c28: 80

[	CP A , 9] Z80:8cyc, R800:2cyc
000c29: fe 09

[	CCF] Z80:5cyc, R800:1cyc
000c2b: 3f

[	RET C] Z80:12cyc(branch), 6cyc(through), R800:5cyc(branch), 1cyc(through)
000c2c: d8

[	LD A , B] Z80:5cyc, R800:2cyc
000c2d: 78

[	RET] Z80:11cyc, R800:5cyc
000c2e: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_FINISH]
	Scope path: SIMPLE64K_FINISH:

[SIMPLE64K_FINISH ::]
	global label address: 0x000c2f

[	RET] Z80:11cyc, R800:5cyc
000c2f: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE TRANSFER_TO_PAGE2]
	Scope path: TRANSFER_TO_PAGE2:

[TRANSFER_TO_PAGE2 ::]
	global label address: 0x000c30

[	LD HL , TRANSFER_TO_PAGE2_START] Z80:11cyc, R800:3cyc
000c30: 21 92 0c

[	LD DE , PAGE2_START] Z80:11cyc, R800:3cyc
000c33: 11 00 a0

[	LD BC , PAGE2_END - PAGE2_START] Z80:11cyc, R800:3cyc
000c36: 01 f7 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000c39: ed b0

[	RET] Z80:11cyc, R800:5cyc
000c3b: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_FLASH_WRITE_8KB]
	Scope path: SIMPLE64K_FLASH_WRITE_8KB:

[SIMPLE64K_FLASH_WRITE_8KB ::]
	global label address: 0x000c3c

[	LD A , [ BANK_BACK ]] Z80:14cyc, R800:6cyc
000c3c: 3a 8d 07

[	RRCA] Z80:5cyc, R800:1cyc
000c3f: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000c40: 0f

[	RRCA] Z80:5cyc, R800:1cyc
000c41: 0f

[	LD H , A] Z80:5cyc, R800:2cyc
000c42: 67

[	LD L , 0] Z80:8cyc, R800:2cyc
000c43: 2e 00

[	CP A , 0X80] Z80:8cyc, R800:2cyc
000c45: fe 80

[	JR Z , PAGE3] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000c47: 28 08

[	CP A , 0XA0] Z80:8cyc, R800:2cyc
000c49: fe a0

[	JR Z , PAGE3] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
000c4b: 28 04

[PAGE2 :]
	label address: 0x000c4d

[	CALL SIMPLE64K_P2_FLASH_WRITE_8KB] Z80:18cyc, R800:5cyc
000c4d: cd 9a a0

[	RET] Z80:11cyc, R800:5cyc
000c50: c9

[PAGE3 :]
	label address: 0x000c51

[	DI] Z80:5cyc, R800:2cyc
000c51: f3

[	EXX] Z80:5cyc, R800:1cyc
000c52: d9

[	LD HL , 0XC000] Z80:11cyc, R800:3cyc
000c53: 21 00 c0

[	LD DE , 0X4000] Z80:11cyc, R800:3cyc
000c56: 11 00 40

[	LD BC , 0X4000] Z80:11cyc, R800:3cyc
000c59: 01 00 40

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000c5c: ed b0

[	LD HL , TRANSFER_TO_PAGE3_START] Z80:11cyc, R800:3cyc
000c5e: 21 89 0d

[	LD DE , PAGE3_START] Z80:11cyc, R800:3cyc
000c61: 11 00 e0

[	LD BC , PAGE3_END - PAGE3_START] Z80:11cyc, R800:3cyc
000c64: 01 5a 00

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000c67: ed b0

[	LD HL , 0X2000] Z80:11cyc, R800:3cyc
000c69: 21 00 20

[	LD DE , 0XC000] Z80:11cyc, R800:3cyc
000c6c: 11 00 c0

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
000c6f: 01 00 20

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000c72: ed b0

[	EXX] Z80:5cyc, R800:1cyc
000c74: d9

[	LD [ SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
000c75: ed 73 90 0c

[	LD SP , 0XFFFF] Z80:11cyc, R800:3cyc
000c79: 31 ff ff

[	CALL SIMPLE64K_P3_FLASH_WRITE_8KB] Z80:18cyc, R800:5cyc
000c7c: cd 1e e0

[	LD SP , [ SAVE_SP ]] Z80:22cyc, R800:8cyc
000c7f: ed 7b 90 0c

[	LD HL , 0X4000] Z80:11cyc, R800:3cyc
000c83: 21 00 40

[	LD DE , 0XC000] Z80:11cyc, R800:3cyc
000c86: 11 00 c0

[	LD BC , 0X3FFF] Z80:11cyc, R800:3cyc
000c89: 01 ff 3f

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
000c8c: ed b0

[	EI] Z80:5cyc, R800:1cyc
000c8e: fb

[	RET] Z80:11cyc, R800:5cyc
000c8f: c9

[SAVE_SP :]
	label address: 0x000c90

[	DW 0]
000c90: 00 00

[	ENDSCOPE]
	Scope path: 

[TRANSFER_TO_PAGE2_START ::]
	global label address: 0x000c92

[	ORG 0XA000]
	code address: 0x00a000

[PAGE2_START ::]
	global label address: 0x00a000

[	SCOPE SIMPLE64K_P2_SETUP_SLOT]
	Scope path: SIMPLE64K_P2_SETUP_SLOT:

[SIMPLE64K_P2_SETUP_SLOT ::]
	global label address: 0x00a000

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00a000: 3a 83 07

[	AND A , 3] Z80:8cyc, R800:2cyc
00a003: e6 03

[	LD B , A] Z80:5cyc, R800:2cyc
00a005: 47

[	RLCA] Z80:5cyc, R800:1cyc
00a006: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a007: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a008: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a009: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00a00a: b0

[	RLCA] Z80:5cyc, R800:1cyc
00a00b: 07

[	RLCA] Z80:5cyc, R800:1cyc
00a00c: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00a00d: b0

[	LD B , A] Z80:5cyc, R800:2cyc
00a00e: 47

[	IN A , [ PPI_PRIMARY_SLOT ]] Z80:12cyc, R800:10 or 9cyc
00a00f: db a8

[	LD [ P2_SAVE_PRIMARY ] , A] Z80:14cyc, R800:6cyc
00a011: 32 f6 a0

[	AND A , 0B00110000] Z80:8cyc, R800:2cyc
00a014: e6 30

[	OR A , B] Z80:5cyc, R800:1cyc
00a016: b0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00a017: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00a019: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P2_RESTORE_SLOT]
	Scope path: SIMPLE64K_P2_RESTORE_SLOT:

[SIMPLE64K_P2_RESTORE_SLOT ::]
	global label address: 0x00a01a

[	LD A , [ P2_SAVE_PRIMARY ]] Z80:14cyc, R800:6cyc
00a01a: 3a f6 a0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00a01d: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00a01f: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P2_GET_ID]
	Scope path: SIMPLE64K_P2_GET_ID:

[SIMPLE64K_P2_GET_ID ::]
	global label address: 0x00a020

[	DI] Z80:5cyc, R800:2cyc
00a020: f3

[	LD [ P2_SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
00a021: ed 73 f4 a0

[	LD SP , 0XBFFF] Z80:11cyc, R800:3cyc
00a025: 31 ff bf

[	CALL SIMPLE64K_P2_SETUP_SLOT] Z80:18cyc, R800:5cyc
00a028: cd 00 a0

[	LD HL , 0X0000] Z80:11cyc, R800:3cyc
00a02b: 21 00 00

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a02e: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a030: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a033: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a035: 32 aa 2a

[	LD A , 0X90] Z80:8cyc, R800:2cyc
00a038: 3e 90

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a03a: 32 55 55

[	LD E , [ HL ]] Z80:8cyc, R800:4cyc
00a03d: 5e

[	INC HL] Z80:7cyc, R800:1cyc
00a03e: 23

[	LD D , [ HL ]] Z80:8cyc, R800:4cyc
00a03f: 56

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a040: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a042: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a045: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a047: 32 aa 2a

[	LD A , 0XF0] Z80:8cyc, R800:2cyc
00a04a: 3e f0

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a04c: 32 55 55

[	CALL SIMPLE64K_P2_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00a04f: cd 1a a0

[	LD [ MANUFACTURE_ID ] , DE] Z80:22cyc, R800:8cyc
00a052: ed 53 89 07

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a056: ed 7b f4 a0

[	EI] Z80:5cyc, R800:1cyc
00a05a: fb

[	RET] Z80:11cyc, R800:5cyc
00a05b: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P2_FLASH_CHIP_ERASE]
	Scope path: SIMPLE64K_P2_FLASH_CHIP_ERASE:

[SIMPLE64K_P2_FLASH_CHIP_ERASE ::]
	global label address: 0x00a05c

[	DI] Z80:5cyc, R800:2cyc
00a05c: f3

[	LD [ P2_SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
00a05d: ed 73 f4 a0

[	LD SP , 0XBFFF] Z80:11cyc, R800:3cyc
00a061: 31 ff bf

[	CALL SIMPLE64K_P2_SETUP_SLOT] Z80:18cyc, R800:5cyc
00a064: cd 00 a0

[	LD HL , 0X0000] Z80:11cyc, R800:3cyc
00a067: 21 00 00

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a06a: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a06c: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a06f: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a071: 32 aa 2a

[	LD A , 0X80] Z80:8cyc, R800:2cyc
00a074: 3e 80

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a076: 32 55 55

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a079: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a07b: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a07e: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a080: 32 aa 2a

[	LD A , 0X10] Z80:8cyc, R800:2cyc
00a083: 3e 10

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a085: 32 55 55

[	CALL SIMPLE64K_P2_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00a088: cd 1a a0

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a08b: ed 7b f4 a0

[	LD HL , JIFFY] Z80:11cyc, R800:3cyc
00a08f: 21 9e fc

[	LD A , [ HL ]] Z80:8cyc, R800:4cyc
00a092: 7e

[	ADD A , 10] Z80:8cyc, R800:2cyc
00a093: c6 0a

[	EI] Z80:5cyc, R800:1cyc
00a095: fb

[WAIT_L1 :]
	label address: 0x00a096

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00a096: be

[	JR NZ , WAIT_L1] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a097: 20 fd

[	RET] Z80:11cyc, R800:5cyc
00a099: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P2_FLASH_WRITE_8KB]
	Scope path: SIMPLE64K_P2_FLASH_WRITE_8KB:

[SIMPLE64K_P2_FLASH_WRITE_8KB ::]
	global label address: 0x00a09a

[	DI] Z80:5cyc, R800:2cyc
00a09a: f3

[	LD [ P2_SAVE_SP ] , SP] Z80:22cyc, R800:8cyc
00a09b: ed 73 f4 a0

[	LD SP , 0XBFFF] Z80:11cyc, R800:3cyc
00a09f: 31 ff bf

[	PUSH HL] Z80:12cyc, R800:6cyc
00a0a2: e5

[	LD HL , 0X2000] Z80:11cyc, R800:3cyc
00a0a3: 21 00 20

[	LD DE , 0X8000] Z80:11cyc, R800:3cyc
00a0a6: 11 00 80

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00a0a9: 01 00 20

[	LDIR] Z80:23cyc(BC!=0), 18cyc(BC=0), R800:?cyc(BC!=0), 7cyc(BC=0)
00a0ac: ed b0

[	CALL SIMPLE64K_P2_SETUP_SLOT] Z80:18cyc, R800:5cyc
00a0ae: cd 00 a0

[	POP HL] Z80:11cyc, R800:5cyc
00a0b1: e1

[	LD DE , 0X8000] Z80:11cyc, R800:3cyc
00a0b2: 11 00 80

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00a0b5: 01 00 20

[LOOP_OF_BC :]
	label address: 0x00a0b8

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00a0b8: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a0ba: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00a0bd: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00a0bf: 32 aa 2a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
00a0c2: 3e a0

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00a0c4: 32 55 55

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00a0c7: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00a0c8: 77

[	PUSH BC] Z80:12cyc, R800:6cyc
00a0c9: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
00a0ca: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x00a0cd

[	NOP] Z80:5cyc, R800:1cyc
00a0cd: 00

[	NOP] Z80:5cyc, R800:1cyc
00a0ce: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00a0cf: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0d0: 28 10

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0d2: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
00a0d4: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0d5: 20 f6

[WRITE_ERROR :]
	label address: 0x00a0d7

[	POP BC] Z80:11cyc, R800:5cyc
00a0d7: c1

[	CALL SIMPLE64K_P2_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00a0d8: cd 1a a0

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a0db: ed 7b f4 a0

[	EI] Z80:5cyc, R800:1cyc
00a0df: fb

[	SCF] Z80:5cyc, R800:1cyc
00a0e0: 37

[	RET] Z80:11cyc, R800:5cyc
00a0e1: c9

[WRITE_COMPLETE :]
	label address: 0x00a0e2

[	POP BC] Z80:11cyc, R800:5cyc
00a0e2: c1

[	INC DE] Z80:7cyc, R800:1cyc
00a0e3: 13

[	INC HL] Z80:7cyc, R800:1cyc
00a0e4: 23

[	DEC BC] Z80:7cyc, R800:1cyc
00a0e5: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
00a0e6: 78

[	OR A , C] Z80:5cyc, R800:1cyc
00a0e7: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00a0e8: 20 ce

[	CALL SIMPLE64K_P2_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00a0ea: cd 1a a0

[	LD SP , [ P2_SAVE_SP ]] Z80:22cyc, R800:8cyc
00a0ed: ed 7b f4 a0

[	EI] Z80:5cyc, R800:1cyc
00a0f1: fb

[	OR A , A] Z80:5cyc, R800:1cyc
00a0f2: b7

[	RET] Z80:11cyc, R800:5cyc
00a0f3: c9

[	ENDSCOPE]
	Scope path: 

[P2_SAVE_SP ::]
	global label address: 0x00a0f4

[	DW 0]
00a0f4: 00 00

[P2_SAVE_PRIMARY ::]
	global label address: 0x00a0f6

[	DB 0]
00a0f6: 00

[PAGE2_END ::]
	global label address: 0x00a0f7

[	ORG TRANSFER_TO_PAGE2_START + PAGE2_END - PAGE2_START]
	code address: 0x000d89

[TRANSFER_TO_PAGE2_END ::]
	global label address: 0x000d89

[TRANSFER_TO_PAGE3_START ::]
	global label address: 0x000d89

[	ORG 0XE000]
	code address: 0x00e000

[PAGE3_START ::]
	global label address: 0x00e000

[	SCOPE SIMPLE64K_P3_SETUP_SLOT]
	Scope path: SIMPLE64K_P3_SETUP_SLOT:

[SIMPLE64K_P3_SETUP_SLOT ::]
	global label address: 0x00e000

[	LD A , [ TARGET_SLOT ]] Z80:14cyc, R800:6cyc
00e000: 3a 83 07

[	AND A , 3] Z80:8cyc, R800:2cyc
00e003: e6 03

[	LD B , A] Z80:5cyc, R800:2cyc
00e005: 47

[	RLCA] Z80:5cyc, R800:1cyc
00e006: 07

[	RLCA] Z80:5cyc, R800:1cyc
00e007: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00e008: b0

[	RLCA] Z80:5cyc, R800:1cyc
00e009: 07

[	RLCA] Z80:5cyc, R800:1cyc
00e00a: 07

[	OR A , B] Z80:5cyc, R800:1cyc
00e00b: b0

[	LD B , A] Z80:5cyc, R800:2cyc
00e00c: 47

[	IN A , [ PPI_PRIMARY_SLOT ]] Z80:12cyc, R800:10 or 9cyc
00e00d: db a8

[	LD [ P3_SAVE_PRIMARY ] , A] Z80:14cyc, R800:6cyc
00e00f: 32 59 e0

[	AND A , 0B11000000] Z80:8cyc, R800:2cyc
00e012: e6 c0

[	OR A , B] Z80:5cyc, R800:1cyc
00e014: b0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00e015: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00e017: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P3_RESTORE_SLOT]
	Scope path: SIMPLE64K_P3_RESTORE_SLOT:

[SIMPLE64K_P3_RESTORE_SLOT ::]
	global label address: 0x00e018

[	LD A , [ P3_SAVE_PRIMARY ]] Z80:14cyc, R800:6cyc
00e018: 3a 59 e0

[	OUT [ PPI_PRIMARY_SLOT ] , A] Z80:12cyc, R800:10 or 9cyc
00e01b: d3 a8

[	RET] Z80:11cyc, R800:5cyc
00e01d: c9

[	ENDSCOPE]
	Scope path: 

[	SCOPE SIMPLE64K_P3_FLASH_WRITE_8KB]
	Scope path: SIMPLE64K_P3_FLASH_WRITE_8KB:

[SIMPLE64K_P3_FLASH_WRITE_8KB ::]
	global label address: 0x00e01e

[	CALL SIMPLE64K_P3_SETUP_SLOT] Z80:18cyc, R800:5cyc
00e01e: cd 00 e0

[	LD DE , 0XC000] Z80:11cyc, R800:3cyc
00e021: 11 00 c0

[	LD BC , 0X2000] Z80:11cyc, R800:3cyc
00e024: 01 00 20

[LOOP_OF_BC :]
	label address: 0x00e027

[	LD A , 0XAA] Z80:8cyc, R800:2cyc
00e027: 3e aa

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00e029: 32 55 55

[	LD A , 0X55] Z80:8cyc, R800:2cyc
00e02c: 3e 55

[	LD [ SIMPLE_CMD_2AAA ] , A] Z80:14cyc, R800:6cyc
00e02e: 32 aa 2a

[	LD A , 0XA0] Z80:8cyc, R800:2cyc
00e031: 3e a0

[	LD [ SIMPLE_CMD_5555 ] , A] Z80:14cyc, R800:6cyc
00e033: 32 55 55

[	LD A , [ DE ]] Z80:8cyc, R800:4cyc
00e036: 1a

[	LD [ HL ] , A] Z80:8cyc, R800:4cyc
00e037: 77

[	PUSH BC] Z80:12cyc, R800:6cyc
00e038: c5

[	LD BC , 0] Z80:11cyc, R800:3cyc
00e039: 01 00 00

[WAIT_FOR_WRITE_COMPLETE :]
	label address: 0x00e03c

[	NOP] Z80:5cyc, R800:1cyc
00e03c: 00

[	NOP] Z80:5cyc, R800:1cyc
00e03d: 00

[	CP A , [ HL ]] Z80:8cyc, R800:4cyc
00e03e: be

[	JR Z , WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e03f: 28 0b

[	DJNZ WAIT_FOR_WRITE_COMPLETE] Z80:14cyc(cond=true), 9cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e041: 10 f9

[	DEC C] Z80:5cyc, R800:1cyc
00e043: 0d

[	JR NZ , WAIT_FOR_WRITE_COMPLETE] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e044: 20 f6

[WRITE_ERROR :]
	label address: 0x00e046

[	POP BC] Z80:11cyc, R800:5cyc
00e046: c1

[	CALL SIMPLE64K_P3_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00e047: cd 18 e0

[	SCF] Z80:5cyc, R800:1cyc
00e04a: 37

[	RET] Z80:11cyc, R800:5cyc
00e04b: c9

[WRITE_COMPLETE :]
	label address: 0x00e04c

[	POP BC] Z80:11cyc, R800:5cyc
00e04c: c1

[	INC DE] Z80:7cyc, R800:1cyc
00e04d: 13

[	INC HL] Z80:7cyc, R800:1cyc
00e04e: 23

[	DEC BC] Z80:7cyc, R800:1cyc
00e04f: 0b

[	LD A , B] Z80:5cyc, R800:2cyc
00e050: 78

[	OR A , C] Z80:5cyc, R800:1cyc
00e051: b1

[	JR NZ , LOOP_OF_BC] Z80:13cyc(cond=true), 8cyc(cond=false), R800:3cyc(cond=true), 2cyc(cond=false)
00e052: 20 d3

[	CALL SIMPLE64K_P3_RESTORE_SLOT] Z80:18cyc, R800:5cyc
00e054: cd 18 e0

[	OR A , A] Z80:5cyc, R800:1cyc
00e057: b7

[	RET] Z80:11cyc, R800:5cyc
00e058: c9

[	ENDSCOPE]
	Scope path: 

[P3_SAVE_PRIMARY ::]
	global label address: 0x00e059

[	DB 0]
00e059: 00

[PAGE3_END ::]
	global label address: 0x00e05a

[	ORG TRANSFER_TO_PAGE3_START + PAGE3_END - PAGE3_START]
	code address: 0x000de3

[TRANSFER_TO_PAGE3_END ::]
	global label address: 0x000de3

[	INCLUDE ".//simple64k.asm"] end

<< label >>
BANK_BACK 1933 ( 0x78d )
BDOS 5 ( 0x5 )
CALSLT 28 ( 0x1c )
CHECK_TARGET_SLOT 1510 ( 0x5e6 )
CHECK_TARGET_SLOT:BASIC_SLOT 1532 ( 0x5fc )
CHECK_TARGET_SLOT:CONSTANT_TARGET 1573 ( 0x625 )
CHECK_TARGET_SLOT:EXPANDED_SLOT 1543 ( 0x607 )
CHECK_TARGET_SLOT:L1 1520 ( 0x5f0 )
CHECK_TARGET_SLOT:NEXT_SLOT 1563 ( 0x61b )
COMMAND_LINE_OPTIONS 621 ( 0x26d )
COMMAND_LINE_OPTIONS:FILE_EXT 763 ( 0x2fb )
COMMAND_LINE_OPTIONS:FILE_NAME 719 ( 0x2cf )
COMMAND_LINE_OPTIONS:FL1 734 ( 0x2de )
COMMAND_LINE_OPTIONS:FL2 771 ( 0x303 )
COMMAND_LINE_OPTIONS:GET_ONE 617 ( 0x269 )
COMMAND_LINE_OPTIONS:L1 631 ( 0x277 )
COMMAND_LINE_OPTIONS:L2 642 ( 0x282 )
COMMAND_LINE_OPTIONS:OPTION 646 ( 0x286 )
COMMAND_LINE_OPTIONS:OPTION_A 790 ( 0x316 )
COMMAND_LINE_OPTIONS:OPTION_S 670 ( 0x29e )
COMMAND_LINE_OPTIONS:OPTION_T 809 ( 0x329 )
COMMAND_LINE_OPTIONS:RETURN_TO_ARG_CHECK 803 ( 0x323 )
DETECT_TARGET 1595 ( 0x63b )
DETECT_TARGET:CARTRIDGE_TYPE_MESSAGE 1830 ( 0x726 )
DETECT_TARGET:CARTRIDGE_TYPE_TABLE 1917 ( 0x77d )
DETECT_TARGET:CHECK_ALL 1610 ( 0x64a )
DETECT_TARGET:CHECK_MEGASCC 1620 ( 0x654 )
DETECT_TARGET:CHECK_RC755 1630 ( 0x65e )
DETECT_TARGET:CHECK_SIMPLE64K 1640 ( 0x668 )
DETECT_TARGET:COMMON_PROCESS 1698 ( 0x6a2 )
DETECT_TARGET:DETECT_RC755 1670 ( 0x686 )
DETECT_TARGET:DETECT_SCC 1656 ( 0x678 )
DETECT_TARGET:DETECT_SIMPLE64K 1684 ( 0x694 )
DETECT_TARGET:DEVICE_ID_MESSAGE 1814 ( 0x716 )
DETECT_TARGET:FILE_SIZE_MESSAGE 1846 ( 0x736 )
DETECT_TARGET:KB_MESSAGE 1878 ( 0x756 )
DETECT_TARGET:MANUFACTURE_ID_MESSAGE 1798 ( 0x706 )
DETECT_TARGET:MEGA_SCC_MESSAGE 1883 ( 0x75b )
DETECT_TARGET:RC755_MESSAGE 1893 ( 0x765 )
DETECT_TARGET:ROM_SIZE_MESSAGE 1862 ( 0x746 )
DETECT_TARGET:SIMPLE64K_MESSAGE 1905 ( 0x771 )
DEVICE_ID 1930 ( 0x78a )
DID_SST39SF010A 181 ( 0xb5 )
DID_SST39SF020A 182 ( 0xb6 )
DID_SST39SF040 183 ( 0xb7 )
DISPLAY_PROGRESS_BAR 824 ( 0x338 )
DISPLAY_PROGRESS_BAR:DIVIDE_LOOP 856 ( 0x358 )
DISPLAY_PROGRESS_BAR:PROGRESS 905 ( 0x389 )
DISPLAY_PROGRESS_BAR:PROGRESS_BAR 894 ( 0x37e )
DISPLAY_PROGRESS_BAR:SKIP_ADD 863 ( 0x35f )
DISPLAY_PROGRESS_BAR:SKIP_FILL 887 ( 0x377 )
DISPLAY_TARGET_FNAME 1435 ( 0x59b )
DISPLAY_TARGET_FNAME:FNAME_MESSAGE 1494 ( 0x5d6 )
DISPLAY_TARGET_FNAME:L1 1446 ( 0x5a6 )
DISPLAY_TARGET_FNAME:L2 1476 ( 0x5c4 )
DISPLAY_TARGET_FNAME:S1 1464 ( 0x5b8 )
DISPLAY_TARGET_SLOT 1392 ( 0x570 )
DISPLAY_TARGET_SLOT:BAR_MESSAGE 1433 ( 0x599 )
DISPLAY_TARGET_SLOT:SLOT_MESSAGE 1427 ( 0x593 )
ENASLT 36 ( 0x24 )
ENTRY_POINT 256 ( 0x100 )
ENTRY_POINT:BLOCK_MESSAGE 512 ( 0x200 )
ENTRY_POINT:BLOCK_WRITE_LOOP 360 ( 0x168 )
ENTRY_POINT:COMPLETED_MESSAGE 548 ( 0x224 )
ENTRY_POINT:ERASE_MESSAGE 528 ( 0x210 )
ENTRY_POINT:NOT_DETECTED 439 ( 0x1b7 )
ENTRY_POINT:NOT_DETECTED_MESSAGE 563 ( 0x233 )
ENTRY_POINT:OK_MESSAGE 543 ( 0x21f )
ENTRY_POINT:PUTS_AND_EXIT 423 ( 0x1a7 )
ENTRY_POINT:TITLE_MESSAGE 444 ( 0x1bc )
ENTRY_POINT:WRITE_ERROR_MESSAGE 599 ( 0x257 )
EXPTBL 64705 ( 0xfcc1 )
FCB 1934 ( 0x78e )
FCB_CLRCLS 1962 ( 0x7aa )
FCB_CLSOFF 1964 ( 0x7ac )
FCB_CR 1966 ( 0x7ae )
FCB_DATE 1954 ( 0x7a2 )
FCB_DEVID 1958 ( 0x7a6 )
FCB_DIRLOC 1959 ( 0x7a7 )
FCB_DR 1934 ( 0x78e )
FCB_EX 1946 ( 0x79a )
FCB_FEXT 1943 ( 0x797 )
FCB_FILSIZ 1950 ( 0x79e )
FCB_FNAME 1935 ( 0x78f )
FCB_RC 1949 ( 0x79d )
FCB_RN 1967 ( 0x7af )
FCB_S1 1947 ( 0x79b )
FCB_S2 1948 ( 0x79c )
FCB_STRCLS 1960 ( 0x7a8 )
FCB_TIME 1956 ( 0x7a4 )
FILE_OPEN 924 ( 0x39c )
FILE_OPEN:CANNOT_OPEN_MESSAGE 1004 ( 0x3ec )
FILE_OPEN:IS_MULTIPLE_8KB 967 ( 0x3c7 )
FILE_OPEN:IS_ZERO_MESSAGE 1024 ( 0x400 )
FILE_OPEN:PUT_ERROR 1002 ( 0x3ea )
FILE_SIZE 1924 ( 0x784 )
FLASH_CHIP_ERASE 2232 ( 0x8b8 )
FLASH_FINISH 2244 ( 0x8c4 )
FLASH_GET_START_BANK 2241 ( 0x8c1 )
FLASH_SET_BANK 2238 ( 0x8be )
FLASH_WRITE_8KB 2235 ( 0x8bb )
GET_DEVICE_NAME 2135 ( 0x857 )
GET_DEVICE_NAME:S_SST39SF010A 2181 ( 0x885 )
GET_DEVICE_NAME:S_SST39SF020A 2193 ( 0x891 )
GET_DEVICE_NAME:S_SST39SF040 2205 ( 0x89d )
GET_MANUFACTURE_NAME 2113 ( 0x841 )
GET_MANUFACTURE_NAME:S_SST 2123 ( 0x84b )
IS_ROM 2225 ( 0x8b1 )
IS_SLOT_RC755 2625 ( 0xa41 )
IS_SLOT_RC755:NOT_RC755 2622 ( 0xa3e )
IS_SLOT_SCC 2247 ( 0x8c7 )
IS_SLOT_SCC:L1 2261 ( 0x8d5 )
IS_SLOT_SCC:L2 2272 ( 0x8e0 )
IS_SLOT_SCC:L3 2286 ( 0x8ee )
IS_SLOT_SCC:NOT_SCC 2298 ( 0x8fa )
IS_SLOT_SIMPLE64K 2984 ( 0xba8 )
IS_SLOT_SIMPLE64K:L1 3008 ( 0xbc0 )
IS_SLOT_SIMPLE64K:NOT_SIMPLE64K 3039 ( 0xbdf )
IS_SLOT_SIMPLE64K:NOT_SUPPORT_EXTENDED_SLOT 3039 ( 0xbdf )
JIFFY 64670 ( 0xfc9e )
JUMP_TABLE 2232 ( 0x8b8 )
JUMP_TABLE_END 2247 ( 0x8c7 )
MANUFACTURE_ID 1929 ( 0x789 )
MID_SST 191 ( 0xbf )
NEW_DTA 8192 ( 0x2000 )
P2_SAVE_PRIMARY 41206 ( 0xa0f6 )
P2_SAVE_SP 41204 ( 0xa0f4 )
P3_SAVE_PRIMARY 57433 ( 0xe059 )
PAGE2_END 41207 ( 0xa0f7 )
PAGE2_START 40960 ( 0xa000 )
PAGE3_END 57434 ( 0xe05a )
PAGE3_START 57344 ( 0xe000 )
PPI_PRIMARY_SLOT 168 ( 0xa8 )
PROGRESS_MAX 1932 ( 0x78c )
PUTDEC 2038 ( 0x7f6 )
PUTDEC:COUNT_SUB 2095 ( 0x82f )
PUTDEC:L1 2098 ( 0x832 )
PUTDEC:S1 2105 ( 0x839 )
PUTDEC:STR 2107 ( 0x83b )
PUTDEC:ZERO_SKIP 2085 ( 0x825 )
PUTDEC:ZERO_SKIP_EXIT 2091 ( 0x82b )
PUTHEX16 1991 ( 0x7c7 )
PUTHEX8 1998 ( 0x7ce )
PUTHEX8:HEX_CHARACTERS 2022 ( 0x7e6 )
PUTHEX_C 2007 ( 0x7d7 )
PUTS 1977 ( 0x7b9 )
PUTS_CRLF 1974 ( 0x7b6 )
PUTS_CRLF:CRLF 1971 ( 0x7b3 )
RAMAD0 62273 ( 0xf341 )
RAMAD1 62274 ( 0xf342 )
RAMAD2 62275 ( 0xf343 )
RAMAD3 62276 ( 0xf344 )
RC755_BANK1_SEL 24576 ( 0x6000 )
RC755_BANK2_SEL 32768 ( 0x8000 )
RC755_BANK3_SEL 40960 ( 0xa000 )
RC755_CMD_2AAA 19114 ( 0x4aaa )
RC755_CMD_5555 21845 ( 0x5555 )
RC755_FINISH 2952 ( 0xb88 )
RC755_FLASH 128 ( 0x80 )
RC755_FLASH_CHIP_ERASE 2868 ( 0xb34 )
RC755_FLASH_CHIP_ERASE:WAIT_L1 2926 ( 0xb6e )
RC755_FLASH_WRITE_8KB 2770 ( 0xad2 )
RC755_FLASH_WRITE_8KB:LOOP_OF_BC 2806 ( 0xaf6 )
RC755_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 2834 ( 0xb12 )
RC755_FLASH_WRITE_8KB:WRITE_COMPLETE 2850 ( 0xb22 )
RC755_FLASH_WRITE_8KB:WRITE_ERROR 2844 ( 0xb1c )
RC755_GET_START_BANK 2943 ( 0xb7f )
RC755_RESTORE_BANK 2945 ( 0xb81 )
RC755_SET_BANK 2939 ( 0xb7b )
RESTORE_DOS_SLOT 1577 ( 0x629 )
ROM_SIZE 1926 ( 0x786 )
ROM_TYPE 1931 ( 0x78b )
SCC_BANK0_SEL 20480 ( 0x5000 )
SCC_BANK1_SEL 28672 ( 0x7000 )
SCC_BANK2_SEL 36864 ( 0x9000 )
SCC_BANK3_SEL 45056 ( 0xb000 )
SCC_CMD_2AAA 35498 ( 0x8aaa )
SCC_CMD_5555 42325 ( 0xa555 )
SCC_FINISH 2587 ( 0xa1b )
SCC_FLASH_CHIP_ERASE 2503 ( 0x9c7 )
SCC_FLASH_CHIP_ERASE:WAIT_L1 2566 ( 0xa06 )
SCC_FLASH_WRITE_8KB 2405 ( 0x965 )
SCC_FLASH_WRITE_8KB:LOOP_OF_BC 2446 ( 0x98e )
SCC_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 2474 ( 0x9aa )
SCC_FLASH_WRITE_8KB:WRITE_COMPLETE 2490 ( 0x9ba )
SCC_FLASH_WRITE_8KB:WRITE_ERROR 2484 ( 0x9b4 )
SCC_GET_START_BANK 2578 ( 0xa12 )
SCC_RESTORE_BANK 2580 ( 0xa14 )
SCC_SET_BANK 2574 ( 0xa0e )
SETUP_FLASH_COMMAND 2216 ( 0x8a8 )
SETUP_SLOT_RC755 2735 ( 0xaaf )
SETUP_SLOT_RC755:RC755_FLASH_JUMP_TABLE 2755 ( 0xac3 )
SETUP_SLOT_SCC 2301 ( 0x8fd )
SETUP_SLOT_SCC:SCC_FLASH_JUMP_TABLE 2390 ( 0x956 )
SETUP_SLOT_SIMPLE64K 3042 ( 0xbe2 )
SETUP_SLOT_SIMPLE64K:SIMPLE64K_FLASH_JUMP_TABLE 3055 ( 0xbef )
SIMPLE64K_FINISH 3119 ( 0xc2f )
SIMPLE64K_FLASH_WRITE_8KB 3132 ( 0xc3c )
SIMPLE64K_FLASH_WRITE_8KB:PAGE2 3149 ( 0xc4d )
SIMPLE64K_FLASH_WRITE_8KB:PAGE3 3153 ( 0xc51 )
SIMPLE64K_FLASH_WRITE_8KB:SAVE_SP 3216 ( 0xc90 )
SIMPLE64K_GET_START_BANK 3074 ( 0xc02 )
SIMPLE64K_GET_START_BANK:FILE_33KB_TO_64KB 3094 ( 0xc16 )
SIMPLE64K_GET_START_BANK:FILE_UNDER_32KB 3099 ( 0xc1b )
SIMPLE64K_GET_START_BANK:TARGET_ADDRESS_REQUEST 3106 ( 0xc22 )
SIMPLE64K_P2_FLASH_CHIP_ERASE 41052 ( 0xa05c )
SIMPLE64K_P2_FLASH_CHIP_ERASE:WAIT_L1 41110 ( 0xa096 )
SIMPLE64K_P2_FLASH_WRITE_8KB 41114 ( 0xa09a )
SIMPLE64K_P2_FLASH_WRITE_8KB:LOOP_OF_BC 41144 ( 0xa0b8 )
SIMPLE64K_P2_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 41165 ( 0xa0cd )
SIMPLE64K_P2_FLASH_WRITE_8KB:WRITE_COMPLETE 41186 ( 0xa0e2 )
SIMPLE64K_P2_FLASH_WRITE_8KB:WRITE_ERROR 41175 ( 0xa0d7 )
SIMPLE64K_P2_GET_ID 40992 ( 0xa020 )
SIMPLE64K_P2_RESTORE_SLOT 40986 ( 0xa01a )
SIMPLE64K_P2_SETUP_SLOT 40960 ( 0xa000 )
SIMPLE64K_P3_FLASH_WRITE_8KB 57374 ( 0xe01e )
SIMPLE64K_P3_FLASH_WRITE_8KB:LOOP_OF_BC 57383 ( 0xe027 )
SIMPLE64K_P3_FLASH_WRITE_8KB:WAIT_FOR_WRITE_COMPLETE 57404 ( 0xe03c )
SIMPLE64K_P3_FLASH_WRITE_8KB:WRITE_COMPLETE 57420 ( 0xe04c )
SIMPLE64K_P3_FLASH_WRITE_8KB:WRITE_ERROR 57414 ( 0xe046 )
SIMPLE64K_P3_RESTORE_SLOT 57368 ( 0xe018 )
SIMPLE64K_P3_SETUP_SLOT 57344 ( 0xe000 )
SIMPLE64K_SET_BANK 3070 ( 0xbfe )
SIMPLE_CMD_2AAA 10922 ( 0x2aaa )
SIMPLE_CMD_5555 21845 ( 0x5555 )
S_UNKNOWN 2127 ( 0x84f )
TARGET_BLOCK_FOR_SIMPLE_ROM 1928 ( 0x788 )
TARGET_SLOT 1923 ( 0x783 )
TRANSFER_TO_PAGE2 3120 ( 0xc30 )
TRANSFER_TO_PAGE2_END 3465 ( 0xd89 )
TRANSFER_TO_PAGE2_START 3218 ( 0xc92 )
TRANSFER_TO_PAGE3_END 3555 ( 0xde3 )
TRANSFER_TO_PAGE3_START 3465 ( 0xd89 )
USAGE 1041 ( 0x411 )
USAGE:USAGE_MESSAGE 1055 ( 0x41f )
_DIRIO 6 ( 0x6 )
_FCLOSE 16 ( 0x10 )
_FOPEN 15 ( 0xf )
_RDBLK 39 ( 0x27 )
_SETDTA 26 ( 0x1a )
_STROUT 9 ( 0x9 )
_TERM0 0 ( 0x0 )
